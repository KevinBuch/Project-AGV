
bin\Debug\Week5_rechtRijden.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00000b4c  00000be0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b4c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00000be0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000012  00000000  00000000  00000be3  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bf8  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 000000d8  00000000  00000000  00000c38  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   0000117a  00000000  00000000  00000d10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000e24  00000000  00000000  00001e8a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   00000b13  00000000  00000000  00002cae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000210  00000000  00000000  000037c4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    0000066f  00000000  00000000  000039d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 00000293  00000000  00000000  00004043  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_loclists 0000003d  00000000  00000000  000042d6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  10:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  14:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  18:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  1c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  20:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  24:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  28:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  2c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  30:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  34:	0c 94 f1 03 	jmp	0x7e2	; 0x7e2 <__vector_13>
  38:	0c 94 09 04 	jmp	0x812	; 0x812 <__vector_14>
  3c:	0c 94 b5 03 	jmp	0x76a	; 0x76a <__vector_15>
  40:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  44:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  48:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  4c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  50:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  54:	0c 94 cc 02 	jmp	0x598	; 0x598 <__vector_21>
  58:	0c 94 fa 02 	jmp	0x5f4	; 0x5f4 <__vector_22>
  5c:	0c 94 5d 02 	jmp	0x4ba	; 0x4ba <__vector_23>
  60:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  64:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  68:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  6c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  70:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  74:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  78:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  7c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  80:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  84:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  88:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  8c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  90:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  94:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  98:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  9c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  ac:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  bc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  cc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  dc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  e0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	0e 94 d7 00 	call	0x1ae	; 0x1ae <main>
  f8:	0c 94 a4 05 	jmp	0xb48	; 0xb48 <_exit>

000000fc <__bad_interrupt>:
  fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000100 <init>:
#define Led_Rechts_AAN (PORTB &= ~(1<<PB5))
#define Led_Rechts_UIT (PORTB |= (1<<PB5))


void init (void)
{
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	cd b7       	in	r28, 0x3d	; 61
 106:	de b7       	in	r29, 0x3e	; 62

00000108 <.Loc.1>:
    init_MotorLinks();
 108:	0e 94 28 03 	call	0x650	; 0x650 <init_MotorLinks>

0000010c <.Loc.2>:
    init_MotorRechts();
 10c:	0e 94 21 04 	call	0x842	; 0x842 <init_MotorRechts>

00000110 <.Loc.3>:
    DDRB |= (1<<PB6);     // LED pin output
 110:	84 e2       	ldi	r24, 0x24	; 36
 112:	90 e0       	ldi	r25, 0x00	; 0
 114:	fc 01       	movw	r30, r24
 116:	20 81       	ld	r18, Z
 118:	84 e2       	ldi	r24, 0x24	; 36
 11a:	90 e0       	ldi	r25, 0x00	; 0

0000011c <.Loc.4>:
 11c:	20 64       	ori	r18, 0x40	; 64
 11e:	fc 01       	movw	r30, r24
 120:	20 83       	st	Z, r18

00000122 <.Loc.5>:
    PORTB |= (1<<PB6);      // LED off
 122:	85 e2       	ldi	r24, 0x25	; 37
 124:	90 e0       	ldi	r25, 0x00	; 0
 126:	fc 01       	movw	r30, r24
 128:	20 81       	ld	r18, Z
 12a:	85 e2       	ldi	r24, 0x25	; 37
 12c:	90 e0       	ldi	r25, 0x00	; 0

0000012e <.Loc.6>:
 12e:	20 64       	ori	r18, 0x40	; 64
 130:	fc 01       	movw	r30, r24
 132:	20 83       	st	Z, r18

00000134 <.Loc.7>:
    DDRB |= (1<<PB5);     // LED pin output
 134:	84 e2       	ldi	r24, 0x24	; 36
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	fc 01       	movw	r30, r24
 13a:	20 81       	ld	r18, Z
 13c:	84 e2       	ldi	r24, 0x24	; 36
 13e:	90 e0       	ldi	r25, 0x00	; 0

00000140 <.Loc.8>:
 140:	20 62       	ori	r18, 0x20	; 32
 142:	fc 01       	movw	r30, r24
 144:	20 83       	st	Z, r18

00000146 <.Loc.9>:
    PORTB |= (1<<PB5);      // LED off
 146:	85 e2       	ldi	r24, 0x25	; 37
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	fc 01       	movw	r30, r24
 14c:	20 81       	ld	r18, Z
 14e:	85 e2       	ldi	r24, 0x25	; 37
 150:	90 e0       	ldi	r25, 0x00	; 0

00000152 <.Loc.10>:
 152:	20 62       	ori	r18, 0x20	; 32
 154:	fc 01       	movw	r30, r24
 156:	20 83       	st	Z, r18

00000158 <.Loc.11>:
    Led_Links_AAN;
 158:	85 e2       	ldi	r24, 0x25	; 37
 15a:	90 e0       	ldi	r25, 0x00	; 0
 15c:	fc 01       	movw	r30, r24
 15e:	20 81       	ld	r18, Z
 160:	85 e2       	ldi	r24, 0x25	; 37
 162:	90 e0       	ldi	r25, 0x00	; 0
 164:	2f 7b       	andi	r18, 0xBF	; 191
 166:	fc 01       	movw	r30, r24
 168:	20 83       	st	Z, r18

0000016a <.Loc.12>:
    Led_Rechts_AAN;
 16a:	85 e2       	ldi	r24, 0x25	; 37
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	fc 01       	movw	r30, r24
 170:	20 81       	ld	r18, Z
 172:	85 e2       	ldi	r24, 0x25	; 37
 174:	90 e0       	ldi	r25, 0x00	; 0
 176:	2f 7d       	andi	r18, 0xDF	; 223
 178:	fc 01       	movw	r30, r24
 17a:	20 83       	st	Z, r18

0000017c <.Loc.13>:
}
 17c:	00 00       	nop
 17e:	df 91       	pop	r29
 180:	cf 91       	pop	r28
 182:	08 95       	ret

00000184 <initTimer>:

void initTimer (void)
{
 184:	cf 93       	push	r28
 186:	df 93       	push	r29
 188:	cd b7       	in	r28, 0x3d	; 61
 18a:	de b7       	in	r29, 0x3e	; 62

0000018c <.Loc.15>:
    // Timer 5 is de systeemtimer (overflow)
    TCCR5A = 0;
 18c:	80 e2       	ldi	r24, 0x20	; 32
 18e:	91 e0       	ldi	r25, 0x01	; 1

00000190 <.Loc.16>:
 190:	fc 01       	movw	r30, r24
 192:	10 82       	st	Z, r1

00000194 <.Loc.17>:
    // Timer 8 kan niet ver genoeg tellen!
    // 8 bit timer 16000000 Hz / 64 / 256 = 976.56 Hz
    // 16 bit timer 16000000 Hz / 64 / 65.536 = 3.906,25 Hz
    // 16 bit timer 16000000 Hz / 65.536 = 244 Hz
    // start timer 0, prescaler = 64
    TCCR5B = TCCR5B | (0 << CS51) | (1 << CS50); //244,14 Hz
 194:	81 e2       	ldi	r24, 0x21	; 33
 196:	91 e0       	ldi	r25, 0x01	; 1
 198:	fc 01       	movw	r30, r24
 19a:	20 81       	ld	r18, Z

0000019c <.Loc.18>:
 19c:	81 e2       	ldi	r24, 0x21	; 33
 19e:	91 e0       	ldi	r25, 0x01	; 1

000001a0 <.Loc.19>:
 1a0:	21 60       	ori	r18, 0x01	; 1
 1a2:	fc 01       	movw	r30, r24
 1a4:	20 83       	st	Z, r18

000001a6 <.Loc.20>:
}
 1a6:	00 00       	nop
 1a8:	df 91       	pop	r29
 1aa:	cf 91       	pop	r28
 1ac:	08 95       	ret

000001ae <main>:

int main(void)
{
 1ae:	cf 93       	push	r28
 1b0:	df 93       	push	r29
 1b2:	cd b7       	in	r28, 0x3d	; 61
 1b4:	de b7       	in	r29, 0x3e	; 62
 1b6:	aa 97       	sbiw	r28, 0x2a	; 42
 1b8:	0f b6       	in	r0, 0x3f	; 63
 1ba:	f8 94       	cli
 1bc:	de bf       	out	0x3e, r29	; 62
 1be:	0f be       	out	0x3f, r0	; 63
 1c0:	cd bf       	out	0x3d, r28	; 61

000001c2 <.Loc.22>:
    init();
 1c2:	0e 94 80 00 	call	0x100	; 0x100 <init>

000001c6 <.Loc.23>:
    initTimer();
 1c6:	0e 94 c2 00 	call	0x184	; 0x184 <initTimer>

000001ca <.Loc.24>:
    int state = 1;
 1ca:	81 e0       	ldi	r24, 0x01	; 1
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	9a 83       	std	Y+2, r25	; 0x02
 1d0:	89 83       	std	Y+1, r24	; 0x01

000001d2 <.Loc.25>:
    int teller = 0;
 1d2:	1c 82       	std	Y+4, r1	; 0x04
 1d4:	1b 82       	std	Y+3, r1	; 0x03

000001d6 <.Loc.26>:
    int timer = 0;
 1d6:	1e 82       	std	Y+6, r1	; 0x06
 1d8:	1d 82       	std	Y+5, r1	; 0x05

000001da <.Loc.27>:
    int knopje_1 = 1;
 1da:	81 e0       	ldi	r24, 0x01	; 1
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	98 87       	std	Y+8, r25	; 0x08
 1e0:	8f 83       	std	Y+7, r24	; 0x07
 1e2:	80 e0       	ldi	r24, 0x00	; 0
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	aa e7       	ldi	r26, 0x7A	; 122
 1e8:	b5 e4       	ldi	r27, 0x45	; 69
 1ea:	89 87       	std	Y+9, r24	; 0x09
 1ec:	9a 87       	std	Y+10, r25	; 0x0a
 1ee:	ab 87       	std	Y+11, r26	; 0x0b
 1f0:	bc 87       	std	Y+12, r27	; 0x0c

000001f2 <.LBB18>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 1f2:	20 e0       	ldi	r18, 0x00	; 0
 1f4:	30 e0       	ldi	r19, 0x00	; 0
 1f6:	4a e7       	ldi	r20, 0x7A	; 122
 1f8:	55 e4       	ldi	r21, 0x45	; 69
 1fa:	69 85       	ldd	r22, Y+9	; 0x09
 1fc:	7a 85       	ldd	r23, Y+10	; 0x0a
 1fe:	8b 85       	ldd	r24, Y+11	; 0x0b
 200:	9c 85       	ldd	r25, Y+12	; 0x0c
 202:	0e 94 0f 05 	call	0xa1e	; 0xa1e <__mulsf3>
 206:	6b 8f       	std	Y+27, r22	; 0x1b
 208:	7c 8f       	std	Y+28, r23	; 0x1c
 20a:	8d 8f       	std	Y+29, r24	; 0x1d
 20c:	9e 8f       	std	Y+30, r25	; 0x1e
 20e:	8b 8d       	ldd	r24, Y+27	; 0x1b
 210:	9c 8d       	ldd	r25, Y+28	; 0x1c
 212:	ad 8d       	ldd	r26, Y+29	; 0x1d
 214:	be 8d       	ldd	r27, Y+30	; 0x1e
 216:	8d 87       	std	Y+13, r24	; 0x0d
 218:	9e 87       	std	Y+14, r25	; 0x0e
 21a:	af 87       	std	Y+15, r26	; 0x0f
 21c:	b8 8b       	std	Y+16, r27	; 0x10

0000021e <.Loc.29>:
	if (__tmp < 1.0)
 21e:	20 e0       	ldi	r18, 0x00	; 0
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	40 e8       	ldi	r20, 0x80	; 128
 224:	5f e3       	ldi	r21, 0x3F	; 63
 226:	6d 85       	ldd	r22, Y+13	; 0x0d
 228:	7e 85       	ldd	r23, Y+14	; 0x0e
 22a:	8f 85       	ldd	r24, Y+15	; 0x0f
 22c:	98 89       	ldd	r25, Y+16	; 0x10
 22e:	0e 94 89 04 	call	0x912	; 0x912 <__cmpsf2>
 232:	88 23       	and	r24, r24
 234:	2c f4       	brge	.+10     	; 0x240 <.L22>

00000236 <.Loc.30>:
		__ticks = 1;
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	9a 8b       	std	Y+18, r25	; 0x12
 23c:	89 8b       	std	Y+17, r24	; 0x11
 23e:	55 c0       	rjmp	.+170    	; 0x2ea <.L6>

00000240 <.L22>:
	else if (__tmp > 65535)
 240:	20 e0       	ldi	r18, 0x00	; 0
 242:	3f ef       	ldi	r19, 0xFF	; 255
 244:	4f e7       	ldi	r20, 0x7F	; 127
 246:	57 e4       	ldi	r21, 0x47	; 71
 248:	6d 85       	ldd	r22, Y+13	; 0x0d
 24a:	7e 85       	ldd	r23, Y+14	; 0x0e
 24c:	8f 85       	ldd	r24, Y+15	; 0x0f
 24e:	98 89       	ldd	r25, Y+16	; 0x10
 250:	0e 94 0a 05 	call	0xa14	; 0xa14 <__gesf2>
 254:	88 23       	and	r24, r24
 256:	d9 f1       	breq	.+118    	; 0x2ce <.L23>
 258:	d4 f1       	brlt	.+116    	; 0x2ce <.L23>

0000025a <.Loc.32>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 25a:	20 e0       	ldi	r18, 0x00	; 0
 25c:	30 e0       	ldi	r19, 0x00	; 0
 25e:	40 e2       	ldi	r20, 0x20	; 32
 260:	51 e4       	ldi	r21, 0x41	; 65
 262:	69 85       	ldd	r22, Y+9	; 0x09
 264:	7a 85       	ldd	r23, Y+10	; 0x0a
 266:	8b 85       	ldd	r24, Y+11	; 0x0b
 268:	9c 85       	ldd	r25, Y+12	; 0x0c
 26a:	0e 94 0f 05 	call	0xa1e	; 0xa1e <__mulsf3>
 26e:	6f 8f       	std	Y+31, r22	; 0x1f
 270:	78 a3       	std	Y+32, r23	; 0x20
 272:	89 a3       	std	Y+33, r24	; 0x21
 274:	9a a3       	std	Y+34, r25	; 0x22
 276:	8f 8d       	ldd	r24, Y+31	; 0x1f
 278:	98 a1       	ldd	r25, Y+32	; 0x20
 27a:	a9 a1       	ldd	r26, Y+33	; 0x21
 27c:	ba a1       	ldd	r27, Y+34	; 0x22
 27e:	8f 8b       	std	Y+23, r24	; 0x17
 280:	98 8f       	std	Y+24, r25	; 0x18
 282:	a9 8f       	std	Y+25, r26	; 0x19
 284:	ba 8f       	std	Y+26, r27	; 0x1a

00000286 <.Loc.33>:
 286:	6f 89       	ldd	r22, Y+23	; 0x17
 288:	78 8d       	ldd	r23, Y+24	; 0x18
 28a:	89 8d       	ldd	r24, Y+25	; 0x19
 28c:	9a 8d       	ldd	r25, Y+26	; 0x1a
 28e:	0e 94 8e 04 	call	0x91c	; 0x91c <__fixunssfsi>
 292:	6b a3       	std	Y+35, r22	; 0x23
 294:	7c a3       	std	Y+36, r23	; 0x24
 296:	8d a3       	std	Y+37, r24	; 0x25
 298:	9e a3       	std	Y+38, r25	; 0x26
 29a:	ab a1       	ldd	r26, Y+35	; 0x23
 29c:	bc a1       	ldd	r27, Y+36	; 0x24
 29e:	ba 8b       	std	Y+18, r27	; 0x12
 2a0:	a9 8b       	std	Y+17, r26	; 0x11

000002a2 <.Loc.34>:
		while(__ticks)
 2a2:	10 c0       	rjmp	.+32     	; 0x2c4 <.L9>

000002a4 <.L10>:
 2a4:	80 e9       	ldi	r24, 0x90	; 144
 2a6:	91 e0       	ldi	r25, 0x01	; 1
 2a8:	9c 8b       	std	Y+20, r25	; 0x14
 2aa:	8b 8b       	std	Y+19, r24	; 0x13

000002ac <.LBB20>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
 2ac:	8b 89       	ldd	r24, Y+19	; 0x13
 2ae:	9c 89       	ldd	r25, Y+20	; 0x14

000002b0 <.L1^B1>:
 2b0:	01 97       	sbiw	r24, 0x01	; 1
 2b2:	f1 f7       	brne	.-4      	; 0x2b0 <.L1^B1>
 2b4:	9c 8b       	std	Y+20, r25	; 0x14
 2b6:	8b 8b       	std	Y+19, r24	; 0x13

000002b8 <.Loc.36>:
	...

000002ba <.LBE20>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 2ba:	89 89       	ldd	r24, Y+17	; 0x11
 2bc:	9a 89       	ldd	r25, Y+18	; 0x12
 2be:	01 97       	sbiw	r24, 0x01	; 1
 2c0:	9a 8b       	std	Y+18, r25	; 0x12
 2c2:	89 8b       	std	Y+17, r24	; 0x11

000002c4 <.L9>:
		while(__ticks)
 2c4:	89 89       	ldd	r24, Y+17	; 0x11
 2c6:	9a 89       	ldd	r25, Y+18	; 0x12
 2c8:	00 97       	sbiw	r24, 0x00	; 0
 2ca:	61 f7       	brne	.-40     	; 0x2a4 <.L10>

000002cc <.Loc.39>:
		}
		return;
 2cc:	19 c0       	rjmp	.+50     	; 0x300 <.L19>

000002ce <.L23>:
	}
	else
		__ticks = (uint16_t)__tmp;
 2ce:	6d 85       	ldd	r22, Y+13	; 0x0d
 2d0:	7e 85       	ldd	r23, Y+14	; 0x0e
 2d2:	8f 85       	ldd	r24, Y+15	; 0x0f
 2d4:	98 89       	ldd	r25, Y+16	; 0x10
 2d6:	0e 94 8e 04 	call	0x91c	; 0x91c <__fixunssfsi>
 2da:	6f a3       	std	Y+39, r22	; 0x27
 2dc:	78 a7       	std	Y+40, r23	; 0x28
 2de:	89 a7       	std	Y+41, r24	; 0x29
 2e0:	9a a7       	std	Y+42, r25	; 0x2a
 2e2:	ef a1       	ldd	r30, Y+39	; 0x27
 2e4:	f8 a5       	ldd	r31, Y+40	; 0x28
 2e6:	fa 8b       	std	Y+18, r31	; 0x12
 2e8:	e9 8b       	std	Y+17, r30	; 0x11

000002ea <.L6>:
 2ea:	89 89       	ldd	r24, Y+17	; 0x11
 2ec:	9a 89       	ldd	r25, Y+18	; 0x12
 2ee:	9e 8b       	std	Y+22, r25	; 0x16
 2f0:	8d 8b       	std	Y+21, r24	; 0x15

000002f2 <.LBB22>:
 2f2:	8d 89       	ldd	r24, Y+21	; 0x15
 2f4:	9e 89       	ldd	r25, Y+22	; 0x16

000002f6 <.L1^B2>:
 2f6:	01 97       	sbiw	r24, 0x01	; 1
 2f8:	f1 f7       	brne	.-4      	; 0x2f6 <.L1^B2>
 2fa:	9e 8b       	std	Y+22, r25	; 0x16
 2fc:	8d 8b       	std	Y+21, r24	; 0x15

000002fe <.Loc.42>:
	...

00000300 <.L19>:

    _delay_ms(4000);
    while(1)
    {

        if (TIFR5 & (1<<TOV5))  //elke keer als de timer overflowt
 300:	8a e3       	ldi	r24, 0x3A	; 58
 302:	90 e0       	ldi	r25, 0x00	; 0
 304:	dc 01       	movw	r26, r24
 306:	8c 91       	ld	r24, X

00000308 <.Loc.44>:
 308:	88 2f       	mov	r24, r24
 30a:	90 e0       	ldi	r25, 0x00	; 0
 30c:	81 70       	andi	r24, 0x01	; 1
 30e:	99 27       	eor	r25, r25

00000310 <.Loc.45>:
 310:	00 97       	sbiw	r24, 0x00	; 0
 312:	51 f0       	breq	.+20     	; 0x328 <.L12>

00000314 <.Loc.46>:
        {
            // Timer overflow, +/- 1 ms voorbij
            TIFR5 = (1<<TOV5);  // Wis flag
 314:	8a e3       	ldi	r24, 0x3A	; 58
 316:	90 e0       	ldi	r25, 0x00	; 0

00000318 <.Loc.47>:
 318:	21 e0       	ldi	r18, 0x01	; 1
 31a:	fc 01       	movw	r30, r24
 31c:	20 83       	st	Z, r18

0000031e <.Loc.48>:
            teller++;           //Verhoog teller met 1 iedere overflow (244Hz)
 31e:	8b 81       	ldd	r24, Y+3	; 0x03
 320:	9c 81       	ldd	r25, Y+4	; 0x04
 322:	01 96       	adiw	r24, 0x01	; 1
 324:	9c 83       	std	Y+4, r25	; 0x04
 326:	8b 83       	std	Y+3, r24	; 0x03

00000328 <.L12>:
        }
        //rijd rechtdoor (50%vermogen)
        if(state==0)
 328:	89 81       	ldd	r24, Y+1	; 0x01
 32a:	9a 81       	ldd	r25, Y+2	; 0x02
 32c:	00 97       	sbiw	r24, 0x00	; 0
 32e:	41 f4       	brne	.+16     	; 0x340 <.L13>

00000330 <.LBB24>:
        {
            MotorLinks_set_percentage(0);
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <MotorLinks_set_percentage>

00000338 <.Loc.51>:
            MotorRechts_set_percentage(0);
 338:	80 e0       	ldi	r24, 0x00	; 0
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	0e 94 3f 04 	call	0x87e	; 0x87e <MotorRechts_set_percentage>

00000340 <.L13>:
        }
        if(state==1 && knopje_1)        //als state = 0 en de startknop is ingedrukt
 340:	89 81       	ldd	r24, Y+1	; 0x01
 342:	9a 81       	ldd	r25, Y+2	; 0x02
 344:	81 30       	cpi	r24, 0x01	; 1
 346:	91 05       	cpc	r25, r1
 348:	59 f5       	brne	.+86     	; 0x3a0 <.L14>

0000034a <.Loc.53>:
 34a:	8f 81       	ldd	r24, Y+7	; 0x07
 34c:	98 85       	ldd	r25, Y+8	; 0x08
 34e:	00 97       	sbiw	r24, 0x00	; 0
 350:	39 f1       	breq	.+78     	; 0x3a0 <.L14>

00000352 <.LBB25>:
        {
            Led_Links_AAN;
 352:	85 e2       	ldi	r24, 0x25	; 37
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	dc 01       	movw	r26, r24
 358:	2c 91       	ld	r18, X
 35a:	85 e2       	ldi	r24, 0x25	; 37
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	2f 7b       	andi	r18, 0xBF	; 191
 360:	fc 01       	movw	r30, r24
 362:	20 83       	st	Z, r18

00000364 <.Loc.55>:
            Led_Rechts_AAN;
 364:	85 e2       	ldi	r24, 0x25	; 37
 366:	90 e0       	ldi	r25, 0x00	; 0
 368:	dc 01       	movw	r26, r24
 36a:	2c 91       	ld	r18, X
 36c:	85 e2       	ldi	r24, 0x25	; 37
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	2f 7d       	andi	r18, 0xDF	; 223
 372:	fc 01       	movw	r30, r24
 374:	20 83       	st	Z, r18

00000376 <.Loc.56>:
            MotorLinks_set_percentage(46);
 376:	8e e2       	ldi	r24, 0x2E	; 46
 378:	90 e0       	ldi	r25, 0x00	; 0
 37a:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <MotorLinks_set_percentage>

0000037e <.Loc.57>:
            MotorRechts_set_percentage(50);
 37e:	82 e3       	ldi	r24, 0x32	; 50
 380:	90 e0       	ldi	r25, 0x00	; 0
 382:	0e 94 3f 04 	call	0x87e	; 0x87e <MotorRechts_set_percentage>

00000386 <.Loc.58>:
            if (teller > (5000/4))            //Hoeveel ms/4 het duurt voordat het naar de volgende staat gaat
 386:	8b 81       	ldd	r24, Y+3	; 0x03
 388:	9c 81       	ldd	r25, Y+4	; 0x04
 38a:	82 3e       	cpi	r24, 0xE2	; 226
 38c:	f4 e0       	ldi	r31, 0x04	; 4
 38e:	9f 07       	cpc	r25, r31
 390:	39 f0       	breq	.+14     	; 0x3a0 <.L14>
 392:	34 f0       	brlt	.+12     	; 0x3a0 <.L14>

00000394 <.Loc.59>:
            {
                state = 2;
 394:	82 e0       	ldi	r24, 0x02	; 2
 396:	90 e0       	ldi	r25, 0x00	; 0
 398:	9a 83       	std	Y+2, r25	; 0x02
 39a:	89 83       	std	Y+1, r24	; 0x01

0000039c <.Loc.60>:
                teller = 0;
 39c:	1c 82       	std	Y+4, r1	; 0x04
 39e:	1b 82       	std	Y+3, r1	; 0x03

000003a0 <.L14>:
            }
        }
        //draai linksom volle snelheid
        if(state==2)
 3a0:	89 81       	ldd	r24, Y+1	; 0x01
 3a2:	9a 81       	ldd	r25, Y+2	; 0x02
 3a4:	82 30       	cpi	r24, 0x02	; 2
 3a6:	91 05       	cpc	r25, r1
 3a8:	39 f5       	brne	.+78     	; 0x3f8 <.L15>

000003aa <.LBB26>:
        {
            Led_Links_UIT;
 3aa:	85 e2       	ldi	r24, 0x25	; 37
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	dc 01       	movw	r26, r24
 3b0:	2c 91       	ld	r18, X
 3b2:	85 e2       	ldi	r24, 0x25	; 37
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	20 64       	ori	r18, 0x40	; 64
 3b8:	fc 01       	movw	r30, r24
 3ba:	20 83       	st	Z, r18

000003bc <.Loc.63>:
            Led_Rechts_AAN;
 3bc:	85 e2       	ldi	r24, 0x25	; 37
 3be:	90 e0       	ldi	r25, 0x00	; 0
 3c0:	dc 01       	movw	r26, r24
 3c2:	2c 91       	ld	r18, X
 3c4:	85 e2       	ldi	r24, 0x25	; 37
 3c6:	90 e0       	ldi	r25, 0x00	; 0
 3c8:	2f 7d       	andi	r18, 0xDF	; 223
 3ca:	fc 01       	movw	r30, r24
 3cc:	20 83       	st	Z, r18

000003ce <.Loc.64>:
            MotorLinks_set_percentage(0);
 3ce:	80 e0       	ldi	r24, 0x00	; 0
 3d0:	90 e0       	ldi	r25, 0x00	; 0
 3d2:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <MotorLinks_set_percentage>

000003d6 <.Loc.65>:
            MotorRechts_set_percentage(50);
 3d6:	82 e3       	ldi	r24, 0x32	; 50
 3d8:	90 e0       	ldi	r25, 0x00	; 0
 3da:	0e 94 3f 04 	call	0x87e	; 0x87e <MotorRechts_set_percentage>

000003de <.Loc.66>:
            if (teller > (1450/4))            // hoeveel seconden wachten voordat state veranderd
 3de:	8b 81       	ldd	r24, Y+3	; 0x03
 3e0:	9c 81       	ldd	r25, Y+4	; 0x04
 3e2:	8a 36       	cpi	r24, 0x6A	; 106
 3e4:	f1 e0       	ldi	r31, 0x01	; 1
 3e6:	9f 07       	cpc	r25, r31
 3e8:	39 f0       	breq	.+14     	; 0x3f8 <.L15>
 3ea:	34 f0       	brlt	.+12     	; 0x3f8 <.L15>

000003ec <.Loc.67>:
            {
                state = 3;
 3ec:	83 e0       	ldi	r24, 0x03	; 3
 3ee:	90 e0       	ldi	r25, 0x00	; 0
 3f0:	9a 83       	std	Y+2, r25	; 0x02
 3f2:	89 83       	std	Y+1, r24	; 0x01

000003f4 <.Loc.68>:
                teller = 0;
 3f4:	1c 82       	std	Y+4, r1	; 0x04
 3f6:	1b 82       	std	Y+3, r1	; 0x03

000003f8 <.L15>:
            }
        }
        //rijd rechtdoor (50%vermogen)
        if(state==3)
 3f8:	89 81       	ldd	r24, Y+1	; 0x01
 3fa:	9a 81       	ldd	r25, Y+2	; 0x02
 3fc:	83 30       	cpi	r24, 0x03	; 3
 3fe:	91 05       	cpc	r25, r1
 400:	39 f5       	brne	.+78     	; 0x450 <.L16>

00000402 <.LBB27>:
        {
            Led_Links_AAN;
 402:	85 e2       	ldi	r24, 0x25	; 37
 404:	90 e0       	ldi	r25, 0x00	; 0
 406:	dc 01       	movw	r26, r24
 408:	2c 91       	ld	r18, X
 40a:	85 e2       	ldi	r24, 0x25	; 37
 40c:	90 e0       	ldi	r25, 0x00	; 0
 40e:	2f 7b       	andi	r18, 0xBF	; 191
 410:	fc 01       	movw	r30, r24
 412:	20 83       	st	Z, r18

00000414 <.Loc.71>:
            Led_Rechts_AAN;
 414:	85 e2       	ldi	r24, 0x25	; 37
 416:	90 e0       	ldi	r25, 0x00	; 0
 418:	dc 01       	movw	r26, r24
 41a:	2c 91       	ld	r18, X
 41c:	85 e2       	ldi	r24, 0x25	; 37
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	2f 7d       	andi	r18, 0xDF	; 223
 422:	fc 01       	movw	r30, r24
 424:	20 83       	st	Z, r18

00000426 <.Loc.72>:
            MotorLinks_set_percentage(35);
 426:	83 e2       	ldi	r24, 0x23	; 35
 428:	90 e0       	ldi	r25, 0x00	; 0
 42a:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <MotorLinks_set_percentage>

0000042e <.Loc.73>:
            MotorRechts_set_percentage(40);
 42e:	88 e2       	ldi	r24, 0x28	; 40
 430:	90 e0       	ldi	r25, 0x00	; 0
 432:	0e 94 3f 04 	call	0x87e	; 0x87e <MotorRechts_set_percentage>

00000436 <.Loc.74>:
            if (teller > (1400/4))            // hoeveel seconden wachten voordat state veranderd
 436:	8b 81       	ldd	r24, Y+3	; 0x03
 438:	9c 81       	ldd	r25, Y+4	; 0x04
 43a:	8e 35       	cpi	r24, 0x5E	; 94
 43c:	f1 e0       	ldi	r31, 0x01	; 1
 43e:	9f 07       	cpc	r25, r31
 440:	39 f0       	breq	.+14     	; 0x450 <.L16>
 442:	34 f0       	brlt	.+12     	; 0x450 <.L16>

00000444 <.Loc.75>:
            {
                state = 4;
 444:	84 e0       	ldi	r24, 0x04	; 4
 446:	90 e0       	ldi	r25, 0x00	; 0
 448:	9a 83       	std	Y+2, r25	; 0x02
 44a:	89 83       	std	Y+1, r24	; 0x01

0000044c <.Loc.76>:
                teller = 0;
 44c:	1c 82       	std	Y+4, r1	; 0x04
 44e:	1b 82       	std	Y+3, r1	; 0x03

00000450 <.L16>:
            }
        }
        //draai linksom volle snelheid
        if(state==4)
 450:	89 81       	ldd	r24, Y+1	; 0x01
 452:	9a 81       	ldd	r25, Y+2	; 0x02
 454:	84 30       	cpi	r24, 0x04	; 4
 456:	91 05       	cpc	r25, r1
 458:	a9 f4       	brne	.+42     	; 0x484 <.L17>

0000045a <.LBB28>:
        {
            MotorLinks_set_percentage(0);
 45a:	80 e0       	ldi	r24, 0x00	; 0
 45c:	90 e0       	ldi	r25, 0x00	; 0
 45e:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <MotorLinks_set_percentage>

00000462 <.Loc.79>:
            MotorRechts_set_percentage(50);
 462:	82 e3       	ldi	r24, 0x32	; 50
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	0e 94 3f 04 	call	0x87e	; 0x87e <MotorRechts_set_percentage>

0000046a <.Loc.80>:
            if (teller > (1400/4))            // hoeveel seconden wachten voordat state veranderd
 46a:	8b 81       	ldd	r24, Y+3	; 0x03
 46c:	9c 81       	ldd	r25, Y+4	; 0x04
 46e:	8e 35       	cpi	r24, 0x5E	; 94
 470:	21 e0       	ldi	r18, 0x01	; 1
 472:	92 07       	cpc	r25, r18
 474:	39 f0       	breq	.+14     	; 0x484 <.L17>
 476:	34 f0       	brlt	.+12     	; 0x484 <.L17>

00000478 <.Loc.81>:
            {
                state = 5;
 478:	85 e0       	ldi	r24, 0x05	; 5
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	9a 83       	std	Y+2, r25	; 0x02
 47e:	89 83       	std	Y+1, r24	; 0x01

00000480 <.Loc.82>:
                teller = 0;
 480:	1c 82       	std	Y+4, r1	; 0x04
 482:	1b 82       	std	Y+3, r1	; 0x03

00000484 <.L17>:
            }
        }
        if(state==5)
 484:	89 81       	ldd	r24, Y+1	; 0x01
 486:	9a 81       	ldd	r25, Y+2	; 0x02
 488:	85 30       	cpi	r24, 0x05	; 5
 48a:	91 05       	cpc	r25, r1
 48c:	09 f0       	breq	.+2      	; 0x490 <.LBB29>

0000048e <L0^A>:
 48e:	38 cf       	rjmp	.-400    	; 0x300 <.L19>

00000490 <.LBB29>:
        {
            MotorLinks_set_percentage(46);
 490:	8e e2       	ldi	r24, 0x2E	; 46
 492:	90 e0       	ldi	r25, 0x00	; 0
 494:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <MotorLinks_set_percentage>

00000498 <.Loc.85>:
            MotorRechts_set_percentage(50);
 498:	82 e3       	ldi	r24, 0x32	; 50
 49a:	90 e0       	ldi	r25, 0x00	; 0
 49c:	0e 94 3f 04 	call	0x87e	; 0x87e <MotorRechts_set_percentage>

000004a0 <.Loc.86>:
            if (teller > (4000/4))            // hoeveel seconden wachten voordat state veranderd
 4a0:	8b 81       	ldd	r24, Y+3	; 0x03
 4a2:	9c 81       	ldd	r25, Y+4	; 0x04
 4a4:	88 3e       	cpi	r24, 0xE8	; 232
 4a6:	a3 e0       	ldi	r26, 0x03	; 3
 4a8:	9a 07       	cpc	r25, r26
 4aa:	09 f0       	breq	.+2      	; 0x4ae <L0^A>

000004ac <L0^A>:
 4ac:	0c f4       	brge	.+2      	; 0x4b0 <.Loc.87>

000004ae <L0^A>:
 4ae:	28 cf       	rjmp	.-432    	; 0x300 <.L19>

000004b0 <.Loc.87>:
            {
                state = 0;
 4b0:	1a 82       	std	Y+2, r1	; 0x02
 4b2:	19 82       	std	Y+1, r1	; 0x01

000004b4 <.Loc.88>:
                teller = 0;
 4b4:	1c 82       	std	Y+4, r1	; 0x04
 4b6:	1b 82       	std	Y+3, r1	; 0x03

000004b8 <.LBE29>:
        if (TIFR5 & (1<<TOV5))  //elke keer als de timer overflowt
 4b8:	23 cf       	rjmp	.-442    	; 0x300 <.L19>

000004ba <__vector_23>:
 4ba:	1f 92       	push	r1
 4bc:	0f 92       	push	r0
 4be:	0f b6       	in	r0, 0x3f	; 63
 4c0:	0f 92       	push	r0
 4c2:	11 24       	eor	r1, r1
 4c4:	0b b6       	in	r0, 0x3b	; 59
 4c6:	0f 92       	push	r0
 4c8:	2f 93       	push	r18
 4ca:	8f 93       	push	r24
 4cc:	9f 93       	push	r25
 4ce:	ef 93       	push	r30
 4d0:	ff 93       	push	r31
 4d2:	cf 93       	push	r28
 4d4:	df 93       	push	r29
 4d6:	cd b7       	in	r28, 0x3d	; 61
 4d8:	de b7       	in	r29, 0x3e	; 62

000004da <.Loc.1>:
 4da:	87 e4       	ldi	r24, 0x47	; 71
 4dc:	90 e0       	ldi	r25, 0x00	; 0
 4de:	fc 01       	movw	r30, r24
 4e0:	80 81       	ld	r24, Z

000004e2 <.Loc.2>:
 4e2:	88 23       	and	r24, r24
 4e4:	c9 f4       	brne	.+50     	; 0x518 <.L2>

000004e6 <.Loc.3>:
 4e6:	88 e4       	ldi	r24, 0x48	; 72
 4e8:	90 e0       	ldi	r25, 0x00	; 0
 4ea:	fc 01       	movw	r30, r24
 4ec:	80 81       	ld	r24, Z

000004ee <.Loc.4>:
 4ee:	88 23       	and	r24, r24
 4f0:	99 f4       	brne	.+38     	; 0x518 <.L2>

000004f2 <.Loc.5>:
 4f2:	8b e0       	ldi	r24, 0x0B	; 11
 4f4:	91 e0       	ldi	r25, 0x01	; 1
 4f6:	fc 01       	movw	r30, r24
 4f8:	20 81       	ld	r18, Z

000004fa <.Loc.6>:
 4fa:	8b e0       	ldi	r24, 0x0B	; 11
 4fc:	91 e0       	ldi	r25, 0x01	; 1

000004fe <.Loc.7>:
 4fe:	2e 7f       	andi	r18, 0xFE	; 254
 500:	fc 01       	movw	r30, r24
 502:	20 83       	st	Z, r18

00000504 <.Loc.8>:
 504:	8b e0       	ldi	r24, 0x0B	; 11
 506:	91 e0       	ldi	r25, 0x01	; 1
 508:	fc 01       	movw	r30, r24
 50a:	20 81       	ld	r18, Z

0000050c <.Loc.9>:
 50c:	8b e0       	ldi	r24, 0x0B	; 11
 50e:	91 e0       	ldi	r25, 0x01	; 1

00000510 <.Loc.10>:
 510:	2d 7f       	andi	r18, 0xFD	; 253
 512:	fc 01       	movw	r30, r24
 514:	20 83       	st	Z, r18

00000516 <.Loc.11>:
 516:	31 c0       	rjmp	.+98     	; 0x57a <.L5>

00000518 <.L2>:
 518:	87 e4       	ldi	r24, 0x47	; 71
 51a:	90 e0       	ldi	r25, 0x00	; 0
 51c:	fc 01       	movw	r30, r24
 51e:	80 81       	ld	r24, Z

00000520 <.Loc.13>:
 520:	88 23       	and	r24, r24
 522:	99 f0       	breq	.+38     	; 0x54a <.L4>

00000524 <.Loc.14>:
 524:	8b e0       	ldi	r24, 0x0B	; 11
 526:	91 e0       	ldi	r25, 0x01	; 1
 528:	fc 01       	movw	r30, r24
 52a:	20 81       	ld	r18, Z

0000052c <.Loc.15>:
 52c:	8b e0       	ldi	r24, 0x0B	; 11
 52e:	91 e0       	ldi	r25, 0x01	; 1

00000530 <.Loc.16>:
 530:	2d 7f       	andi	r18, 0xFD	; 253
 532:	fc 01       	movw	r30, r24
 534:	20 83       	st	Z, r18

00000536 <.Loc.17>:
 536:	8b e0       	ldi	r24, 0x0B	; 11
 538:	91 e0       	ldi	r25, 0x01	; 1
 53a:	fc 01       	movw	r30, r24
 53c:	20 81       	ld	r18, Z
 53e:	8b e0       	ldi	r24, 0x0B	; 11
 540:	91 e0       	ldi	r25, 0x01	; 1

00000542 <.Loc.18>:
 542:	21 60       	ori	r18, 0x01	; 1
 544:	fc 01       	movw	r30, r24
 546:	20 83       	st	Z, r18

00000548 <.Loc.19>:
 548:	18 c0       	rjmp	.+48     	; 0x57a <.L5>

0000054a <.L4>:
 54a:	88 e4       	ldi	r24, 0x48	; 72
 54c:	90 e0       	ldi	r25, 0x00	; 0
 54e:	fc 01       	movw	r30, r24
 550:	80 81       	ld	r24, Z

00000552 <.Loc.21>:
 552:	88 23       	and	r24, r24
 554:	91 f0       	breq	.+36     	; 0x57a <.L5>

00000556 <.Loc.22>:
 556:	8b e0       	ldi	r24, 0x0B	; 11
 558:	91 e0       	ldi	r25, 0x01	; 1
 55a:	fc 01       	movw	r30, r24
 55c:	20 81       	ld	r18, Z

0000055e <.Loc.23>:
 55e:	8b e0       	ldi	r24, 0x0B	; 11
 560:	91 e0       	ldi	r25, 0x01	; 1

00000562 <.Loc.24>:
 562:	2e 7f       	andi	r18, 0xFE	; 254
 564:	fc 01       	movw	r30, r24
 566:	20 83       	st	Z, r18

00000568 <.Loc.25>:
 568:	8b e0       	ldi	r24, 0x0B	; 11
 56a:	91 e0       	ldi	r25, 0x01	; 1
 56c:	fc 01       	movw	r30, r24
 56e:	20 81       	ld	r18, Z
 570:	8b e0       	ldi	r24, 0x0B	; 11
 572:	91 e0       	ldi	r25, 0x01	; 1

00000574 <.Loc.26>:
 574:	22 60       	ori	r18, 0x02	; 2
 576:	fc 01       	movw	r30, r24
 578:	20 83       	st	Z, r18

0000057a <.L5>:
 57a:	00 00       	nop
 57c:	df 91       	pop	r29
 57e:	cf 91       	pop	r28
 580:	ff 91       	pop	r31
 582:	ef 91       	pop	r30
 584:	9f 91       	pop	r25
 586:	8f 91       	pop	r24
 588:	2f 91       	pop	r18
 58a:	0f 90       	pop	r0
 58c:	0b be       	out	0x3b, r0	; 59
 58e:	0f 90       	pop	r0
 590:	0f be       	out	0x3f, r0	; 63
 592:	0f 90       	pop	r0
 594:	1f 90       	pop	r1
 596:	18 95       	reti

00000598 <__vector_21>:
 598:	1f 92       	push	r1
 59a:	0f 92       	push	r0
 59c:	0f b6       	in	r0, 0x3f	; 63
 59e:	0f 92       	push	r0
 5a0:	11 24       	eor	r1, r1
 5a2:	0b b6       	in	r0, 0x3b	; 59
 5a4:	0f 92       	push	r0
 5a6:	2f 93       	push	r18
 5a8:	8f 93       	push	r24
 5aa:	9f 93       	push	r25
 5ac:	ef 93       	push	r30
 5ae:	ff 93       	push	r31
 5b0:	cf 93       	push	r28
 5b2:	df 93       	push	r29
 5b4:	cd b7       	in	r28, 0x3d	; 61
 5b6:	de b7       	in	r29, 0x3e	; 62

000005b8 <.Loc.29>:
 5b8:	87 e4       	ldi	r24, 0x47	; 71
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	fc 01       	movw	r30, r24
 5be:	80 81       	ld	r24, Z

000005c0 <.Loc.30>:
 5c0:	8f 3f       	cpi	r24, 0xFF	; 255
 5c2:	49 f0       	breq	.+18     	; 0x5d6 <.L8>

000005c4 <.Loc.31>:
 5c4:	8b e0       	ldi	r24, 0x0B	; 11
 5c6:	91 e0       	ldi	r25, 0x01	; 1
 5c8:	fc 01       	movw	r30, r24
 5ca:	20 81       	ld	r18, Z

000005cc <.Loc.32>:
 5cc:	8b e0       	ldi	r24, 0x0B	; 11
 5ce:	91 e0       	ldi	r25, 0x01	; 1

000005d0 <.Loc.33>:
 5d0:	2e 7f       	andi	r18, 0xFE	; 254
 5d2:	fc 01       	movw	r30, r24
 5d4:	20 83       	st	Z, r18

000005d6 <.L8>:
 5d6:	00 00       	nop
 5d8:	df 91       	pop	r29
 5da:	cf 91       	pop	r28
 5dc:	ff 91       	pop	r31
 5de:	ef 91       	pop	r30
 5e0:	9f 91       	pop	r25
 5e2:	8f 91       	pop	r24
 5e4:	2f 91       	pop	r18
 5e6:	0f 90       	pop	r0
 5e8:	0b be       	out	0x3b, r0	; 59
 5ea:	0f 90       	pop	r0
 5ec:	0f be       	out	0x3f, r0	; 63
 5ee:	0f 90       	pop	r0
 5f0:	1f 90       	pop	r1
 5f2:	18 95       	reti

000005f4 <__vector_22>:
 5f4:	1f 92       	push	r1
 5f6:	0f 92       	push	r0
 5f8:	0f b6       	in	r0, 0x3f	; 63
 5fa:	0f 92       	push	r0
 5fc:	11 24       	eor	r1, r1
 5fe:	0b b6       	in	r0, 0x3b	; 59
 600:	0f 92       	push	r0
 602:	2f 93       	push	r18
 604:	8f 93       	push	r24
 606:	9f 93       	push	r25
 608:	ef 93       	push	r30
 60a:	ff 93       	push	r31
 60c:	cf 93       	push	r28
 60e:	df 93       	push	r29
 610:	cd b7       	in	r28, 0x3d	; 61
 612:	de b7       	in	r29, 0x3e	; 62

00000614 <.Loc.36>:
 614:	88 e4       	ldi	r24, 0x48	; 72
 616:	90 e0       	ldi	r25, 0x00	; 0
 618:	fc 01       	movw	r30, r24
 61a:	80 81       	ld	r24, Z

0000061c <.Loc.37>:
 61c:	8f 3f       	cpi	r24, 0xFF	; 255
 61e:	49 f0       	breq	.+18     	; 0x632 <.L11>

00000620 <.Loc.38>:
 620:	8b e0       	ldi	r24, 0x0B	; 11
 622:	91 e0       	ldi	r25, 0x01	; 1
 624:	fc 01       	movw	r30, r24
 626:	20 81       	ld	r18, Z

00000628 <.Loc.39>:
 628:	8b e0       	ldi	r24, 0x0B	; 11
 62a:	91 e0       	ldi	r25, 0x01	; 1

0000062c <.Loc.40>:
 62c:	2d 7f       	andi	r18, 0xFD	; 253
 62e:	fc 01       	movw	r30, r24
 630:	20 83       	st	Z, r18

00000632 <.L11>:
 632:	00 00       	nop
 634:	df 91       	pop	r29
 636:	cf 91       	pop	r28
 638:	ff 91       	pop	r31
 63a:	ef 91       	pop	r30
 63c:	9f 91       	pop	r25
 63e:	8f 91       	pop	r24
 640:	2f 91       	pop	r18
 642:	0f 90       	pop	r0
 644:	0b be       	out	0x3b, r0	; 59
 646:	0f 90       	pop	r0
 648:	0f be       	out	0x3f, r0	; 63
 64a:	0f 90       	pop	r0
 64c:	1f 90       	pop	r1
 64e:	18 95       	reti

00000650 <init_MotorLinks>:
 650:	cf 93       	push	r28
 652:	df 93       	push	r29
 654:	cd b7       	in	r28, 0x3d	; 61
 656:	de b7       	in	r29, 0x3e	; 62

00000658 <.Loc.43>:
 658:	8a e0       	ldi	r24, 0x0A	; 10
 65a:	91 e0       	ldi	r25, 0x01	; 1
 65c:	fc 01       	movw	r30, r24
 65e:	20 81       	ld	r18, Z
 660:	8a e0       	ldi	r24, 0x0A	; 10
 662:	91 e0       	ldi	r25, 0x01	; 1

00000664 <.Loc.44>:
 664:	21 60       	ori	r18, 0x01	; 1
 666:	fc 01       	movw	r30, r24
 668:	20 83       	st	Z, r18

0000066a <.Loc.45>:
 66a:	8a e0       	ldi	r24, 0x0A	; 10
 66c:	91 e0       	ldi	r25, 0x01	; 1
 66e:	fc 01       	movw	r30, r24
 670:	20 81       	ld	r18, Z
 672:	8a e0       	ldi	r24, 0x0A	; 10
 674:	91 e0       	ldi	r25, 0x01	; 1

00000676 <.Loc.46>:
 676:	22 60       	ori	r18, 0x02	; 2
 678:	fc 01       	movw	r30, r24
 67a:	20 83       	st	Z, r18

0000067c <.Loc.47>:
 67c:	8b e0       	ldi	r24, 0x0B	; 11
 67e:	91 e0       	ldi	r25, 0x01	; 1
 680:	fc 01       	movw	r30, r24
 682:	20 81       	ld	r18, Z

00000684 <.Loc.48>:
 684:	8b e0       	ldi	r24, 0x0B	; 11
 686:	91 e0       	ldi	r25, 0x01	; 1

00000688 <.Loc.49>:
 688:	2e 7f       	andi	r18, 0xFE	; 254
 68a:	fc 01       	movw	r30, r24
 68c:	20 83       	st	Z, r18

0000068e <.Loc.50>:
 68e:	8b e0       	ldi	r24, 0x0B	; 11
 690:	91 e0       	ldi	r25, 0x01	; 1
 692:	fc 01       	movw	r30, r24
 694:	20 81       	ld	r18, Z

00000696 <.Loc.51>:
 696:	8b e0       	ldi	r24, 0x0B	; 11
 698:	91 e0       	ldi	r25, 0x01	; 1

0000069a <.Loc.52>:
 69a:	2d 7f       	andi	r18, 0xFD	; 253
 69c:	fc 01       	movw	r30, r24
 69e:	20 83       	st	Z, r18

000006a0 <.Loc.53>:
 6a0:	84 e4       	ldi	r24, 0x44	; 68
 6a2:	90 e0       	ldi	r25, 0x00	; 0

000006a4 <.Loc.54>:
 6a4:	fc 01       	movw	r30, r24
 6a6:	10 82       	st	Z, r1

000006a8 <.Loc.55>:
 6a8:	85 e4       	ldi	r24, 0x45	; 69
 6aa:	90 e0       	ldi	r25, 0x00	; 0

000006ac <.Loc.56>:
 6ac:	23 e0       	ldi	r18, 0x03	; 3
 6ae:	fc 01       	movw	r30, r24
 6b0:	20 83       	st	Z, r18

000006b2 <.Loc.57>:
 6b2:	87 e4       	ldi	r24, 0x47	; 71
 6b4:	90 e0       	ldi	r25, 0x00	; 0

000006b6 <.Loc.58>:
 6b6:	fc 01       	movw	r30, r24
 6b8:	10 82       	st	Z, r1

000006ba <.Loc.59>:
 6ba:	88 e4       	ldi	r24, 0x48	; 72
 6bc:	90 e0       	ldi	r25, 0x00	; 0

000006be <.Loc.60>:
 6be:	fc 01       	movw	r30, r24
 6c0:	10 82       	st	Z, r1

000006c2 <.Loc.61>:
 6c2:	8e e6       	ldi	r24, 0x6E	; 110
 6c4:	90 e0       	ldi	r25, 0x00	; 0

000006c6 <.Loc.62>:
 6c6:	27 e0       	ldi	r18, 0x07	; 7
 6c8:	fc 01       	movw	r30, r24
 6ca:	20 83       	st	Z, r18

000006cc <.Loc.63>:
 6cc:	78 94       	sei

000006ce <.Loc.64>:
 6ce:	00 00       	nop
 6d0:	df 91       	pop	r29
 6d2:	cf 91       	pop	r28
 6d4:	08 95       	ret

000006d6 <MotorLinks_set_percentage>:
 6d6:	cf 93       	push	r28
 6d8:	df 93       	push	r29
 6da:	0f 92       	push	r0
 6dc:	cd b7       	in	r28, 0x3d	; 61
 6de:	de b7       	in	r29, 0x3e	; 62
 6e0:	89 83       	std	Y+1, r24	; 0x01

000006e2 <.Loc.66>:
 6e2:	89 81       	ldd	r24, Y+1	; 0x01
 6e4:	8c 39       	cpi	r24, 0x9C	; 156
 6e6:	e4 f1       	brlt	.+120    	; 0x760 <.L16>

000006e8 <.Loc.67>:
 6e8:	89 81       	ldd	r24, Y+1	; 0x01
 6ea:	84 36       	cpi	r24, 0x64	; 100
 6ec:	09 f0       	breq	.+2      	; 0x6f0 <.Loc.68>

000006ee <L0^A>:
 6ee:	c4 f5       	brge	.+112    	; 0x760 <.L16>

000006f0 <.Loc.68>:
 6f0:	89 81       	ldd	r24, Y+1	; 0x01
 6f2:	88 23       	and	r24, r24
 6f4:	dc f0       	brlt	.+54     	; 0x72c <.L15>

000006f6 <.Loc.69>:
 6f6:	88 e4       	ldi	r24, 0x48	; 72
 6f8:	90 e0       	ldi	r25, 0x00	; 0

000006fa <.Loc.70>:
 6fa:	fc 01       	movw	r30, r24
 6fc:	10 82       	st	Z, r1

000006fe <.Loc.71>:
 6fe:	89 81       	ldd	r24, Y+1	; 0x01
 700:	08 2e       	mov	r0, r24
 702:	00 0c       	add	r0, r0
 704:	99 0b       	sbc	r25, r25
 706:	2f ef       	ldi	r18, 0xFF	; 255
 708:	28 9f       	mul	r18, r24
 70a:	a0 01       	movw	r20, r0
 70c:	29 9f       	mul	r18, r25
 70e:	50 0d       	add	r21, r0
 710:	11 24       	eor	r1, r1

00000712 <.Loc.72>:
 712:	24 e6       	ldi	r18, 0x64	; 100
 714:	30 e0       	ldi	r19, 0x00	; 0
 716:	ca 01       	movw	r24, r20
 718:	b9 01       	movw	r22, r18
 71a:	0e 94 61 04 	call	0x8c2	; 0x8c2 <__divmodhi4>
 71e:	cb 01       	movw	r24, r22
 720:	9c 01       	movw	r18, r24

00000722 <.Loc.73>:
 722:	87 e4       	ldi	r24, 0x47	; 71
 724:	90 e0       	ldi	r25, 0x00	; 0

00000726 <.Loc.74>:
 726:	fc 01       	movw	r30, r24
 728:	20 83       	st	Z, r18

0000072a <.Loc.75>:
 72a:	1a c0       	rjmp	.+52     	; 0x760 <.L16>

0000072c <.L15>:
 72c:	87 e4       	ldi	r24, 0x47	; 71
 72e:	90 e0       	ldi	r25, 0x00	; 0

00000730 <.Loc.77>:
 730:	fc 01       	movw	r30, r24
 732:	10 82       	st	Z, r1

00000734 <.Loc.78>:
 734:	89 81       	ldd	r24, Y+1	; 0x01
 736:	08 2e       	mov	r0, r24
 738:	00 0c       	add	r0, r0
 73a:	99 0b       	sbc	r25, r25
 73c:	2f ef       	ldi	r18, 0xFF	; 255
 73e:	28 9f       	mul	r18, r24
 740:	a0 01       	movw	r20, r0
 742:	29 9f       	mul	r18, r25
 744:	50 0d       	add	r21, r0
 746:	11 24       	eor	r1, r1

00000748 <.Loc.79>:
 748:	2c e9       	ldi	r18, 0x9C	; 156
 74a:	3f ef       	ldi	r19, 0xFF	; 255
 74c:	ca 01       	movw	r24, r20
 74e:	b9 01       	movw	r22, r18
 750:	0e 94 61 04 	call	0x8c2	; 0x8c2 <__divmodhi4>
 754:	cb 01       	movw	r24, r22
 756:	9c 01       	movw	r18, r24

00000758 <.Loc.80>:
 758:	88 e4       	ldi	r24, 0x48	; 72
 75a:	90 e0       	ldi	r25, 0x00	; 0

0000075c <.Loc.81>:
 75c:	fc 01       	movw	r30, r24
 75e:	20 83       	st	Z, r18

00000760 <.L16>:
 760:	00 00       	nop
 762:	0f 90       	pop	r0
 764:	df 91       	pop	r29
 766:	cf 91       	pop	r28
 768:	08 95       	ret

0000076a <__vector_15>:
 76a:	1f 92       	push	r1
 76c:	1f b6       	in	r1, 0x3f	; 63
 76e:	1f 92       	push	r1
 770:	11 24       	eor	r1, r1
 772:	8f 93       	push	r24
 774:	8b b7       	in	r24, 0x3b	; 59
 776:	8f 93       	push	r24
 778:	ef 93       	push	r30
 77a:	ff 93       	push	r31

0000077c <.Loc.1>:
 77c:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

00000780 <.Loc.3>:
 780:	81 11       	cpse	r24, r1
 782:	0d c0       	rjmp	.+26     	; 0x79e <.L2>

00000784 <.Loc.4>:
 784:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

00000788 <.Loc.5>:
 788:	81 11       	cpse	r24, r1
 78a:	09 c0       	rjmp	.+18     	; 0x79e <.L2>

0000078c <.Loc.6>:
 78c:	eb e0       	ldi	r30, 0x0B	; 11
 78e:	f1 e0       	ldi	r31, 0x01	; 1
 790:	80 81       	ld	r24, Z
 792:	8b 7f       	andi	r24, 0xFB	; 251
 794:	80 83       	st	Z, r24

00000796 <.Loc.8>:
 796:	80 81       	ld	r24, Z
 798:	87 7f       	andi	r24, 0xF7	; 247
 79a:	80 83       	st	Z, r24
 79c:	0c c0       	rjmp	.+24     	; 0x7b6 <.L1>

0000079e <.L2>:
 79e:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

000007a2 <.Loc.12>:
 7a2:	88 23       	and	r24, r24
 7a4:	89 f0       	breq	.+34     	; 0x7c8 <.L4>

000007a6 <.Loc.13>:
 7a6:	eb e0       	ldi	r30, 0x0B	; 11
 7a8:	f1 e0       	ldi	r31, 0x01	; 1
 7aa:	80 81       	ld	r24, Z
 7ac:	87 7f       	andi	r24, 0xF7	; 247
 7ae:	80 83       	st	Z, r24

000007b0 <.Loc.15>:
 7b0:	80 81       	ld	r24, Z

000007b2 <.Loc.16>:
 7b2:	84 60       	ori	r24, 0x04	; 4
 7b4:	80 83       	st	Z, r24

000007b6 <.L1>:
 7b6:	ff 91       	pop	r31
 7b8:	ef 91       	pop	r30
 7ba:	8f 91       	pop	r24
 7bc:	8b bf       	out	0x3b, r24	; 59
 7be:	8f 91       	pop	r24
 7c0:	1f 90       	pop	r1
 7c2:	1f be       	out	0x3f, r1	; 63
 7c4:	1f 90       	pop	r1
 7c6:	18 95       	reti

000007c8 <.L4>:
 7c8:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

000007cc <.Loc.20>:
 7cc:	88 23       	and	r24, r24
 7ce:	99 f3       	breq	.-26     	; 0x7b6 <.L1>

000007d0 <.Loc.21>:
 7d0:	eb e0       	ldi	r30, 0x0B	; 11
 7d2:	f1 e0       	ldi	r31, 0x01	; 1
 7d4:	80 81       	ld	r24, Z
 7d6:	8b 7f       	andi	r24, 0xFB	; 251
 7d8:	80 83       	st	Z, r24

000007da <.Loc.23>:
 7da:	80 81       	ld	r24, Z

000007dc <.Loc.24>:
 7dc:	88 60       	ori	r24, 0x08	; 8
 7de:	80 83       	st	Z, r24

000007e0 <.Loc.25>:
 7e0:	ea cf       	rjmp	.-44     	; 0x7b6 <.L1>

000007e2 <__vector_13>:
 7e2:	8f 93       	push	r24
 7e4:	8f b7       	in	r24, 0x3f	; 63
 7e6:	8f 93       	push	r24
 7e8:	8b b7       	in	r24, 0x3b	; 59
 7ea:	8f 93       	push	r24
 7ec:	ef 93       	push	r30
 7ee:	ff 93       	push	r31

000007f0 <.Loc.27>:
 7f0:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

000007f4 <.Loc.29>:
 7f4:	8f 3f       	cpi	r24, 0xFF	; 255
 7f6:	29 f0       	breq	.+10     	; 0x802 <.L5>

000007f8 <.Loc.30>:
 7f8:	eb e0       	ldi	r30, 0x0B	; 11
 7fa:	f1 e0       	ldi	r31, 0x01	; 1
 7fc:	80 81       	ld	r24, Z
 7fe:	8b 7f       	andi	r24, 0xFB	; 251
 800:	80 83       	st	Z, r24

00000802 <.L5>:
 802:	ff 91       	pop	r31
 804:	ef 91       	pop	r30
 806:	8f 91       	pop	r24
 808:	8b bf       	out	0x3b, r24	; 59
 80a:	8f 91       	pop	r24
 80c:	8f bf       	out	0x3f, r24	; 63
 80e:	8f 91       	pop	r24
 810:	18 95       	reti

00000812 <__vector_14>:
 812:	8f 93       	push	r24
 814:	8f b7       	in	r24, 0x3f	; 63
 816:	8f 93       	push	r24
 818:	8b b7       	in	r24, 0x3b	; 59
 81a:	8f 93       	push	r24
 81c:	ef 93       	push	r30
 81e:	ff 93       	push	r31

00000820 <.Loc.34>:
 820:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

00000824 <.Loc.36>:
 824:	8f 3f       	cpi	r24, 0xFF	; 255
 826:	29 f0       	breq	.+10     	; 0x832 <.L7>

00000828 <.Loc.37>:
 828:	eb e0       	ldi	r30, 0x0B	; 11
 82a:	f1 e0       	ldi	r31, 0x01	; 1
 82c:	80 81       	ld	r24, Z
 82e:	87 7f       	andi	r24, 0xF7	; 247
 830:	80 83       	st	Z, r24

00000832 <.L7>:
 832:	ff 91       	pop	r31
 834:	ef 91       	pop	r30
 836:	8f 91       	pop	r24
 838:	8b bf       	out	0x3b, r24	; 59
 83a:	8f 91       	pop	r24
 83c:	8f bf       	out	0x3f, r24	; 63
 83e:	8f 91       	pop	r24
 840:	18 95       	reti

00000842 <init_MotorRechts>:
 842:	ea e0       	ldi	r30, 0x0A	; 10
 844:	f1 e0       	ldi	r31, 0x01	; 1
 846:	80 81       	ld	r24, Z

00000848 <.Loc.42>:
 848:	84 60       	ori	r24, 0x04	; 4
 84a:	80 83       	st	Z, r24

0000084c <.Loc.43>:
 84c:	80 81       	ld	r24, Z

0000084e <.Loc.44>:
 84e:	88 60       	ori	r24, 0x08	; 8
 850:	80 83       	st	Z, r24

00000852 <.Loc.45>:
 852:	eb e0       	ldi	r30, 0x0B	; 11
 854:	f1 e0       	ldi	r31, 0x01	; 1
 856:	80 81       	ld	r24, Z
 858:	8b 7f       	andi	r24, 0xFB	; 251
 85a:	80 83       	st	Z, r24

0000085c <.Loc.47>:
 85c:	80 81       	ld	r24, Z
 85e:	87 7f       	andi	r24, 0xF7	; 247
 860:	80 83       	st	Z, r24

00000862 <.Loc.49>:
 862:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>

00000866 <.Loc.51>:
 866:	83 e0       	ldi	r24, 0x03	; 3
 868:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7000b1>

0000086c <.Loc.53>:
 86c:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

00000870 <.Loc.55>:
 870:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

00000874 <.Loc.57>:
 874:	87 e0       	ldi	r24, 0x07	; 7
 876:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>

0000087a <.Loc.59>:
 87a:	78 94       	sei

0000087c <.Loc.60>:
 87c:	08 95       	ret

0000087e <MotorRechts_set_percentage>:
 87e:	94 e6       	ldi	r25, 0x64	; 100
 880:	98 0f       	add	r25, r24

00000882 <.Loc.64>:
 882:	99 3c       	cpi	r25, 0xC9	; 201
 884:	e8 f4       	brcc	.+58     	; 0x8c0 <.L10>

00000886 <.Loc.65>:
 886:	88 23       	and	r24, r24
 888:	74 f0       	brlt	.+28     	; 0x8a6 <.L12>

0000088a <.Loc.67>:
 88a:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

0000088e <.Loc.69>:
 88e:	28 2f       	mov	r18, r24
 890:	3f ef       	ldi	r19, 0xFF	; 255
 892:	23 03       	mulsu	r18, r19
 894:	c0 01       	movw	r24, r0
 896:	11 24       	eor	r1, r1

00000898 <.Loc.71>:
 898:	64 e6       	ldi	r22, 0x64	; 100
 89a:	70 e0       	ldi	r23, 0x00	; 0
 89c:	0e 94 61 04 	call	0x8c2	; 0x8c2 <__divmodhi4>

000008a0 <.Loc.72>:
 8a0:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
 8a4:	08 95       	ret

000008a6 <.L12>:
 8a6:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

000008aa <.Loc.75>:
 8aa:	28 2f       	mov	r18, r24
 8ac:	3f ef       	ldi	r19, 0xFF	; 255
 8ae:	23 03       	mulsu	r18, r19
 8b0:	c0 01       	movw	r24, r0
 8b2:	11 24       	eor	r1, r1

000008b4 <.Loc.77>:
 8b4:	6c e9       	ldi	r22, 0x9C	; 156
 8b6:	7f ef       	ldi	r23, 0xFF	; 255
 8b8:	0e 94 61 04 	call	0x8c2	; 0x8c2 <__divmodhi4>

000008bc <.Loc.78>:
 8bc:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

000008c0 <.L10>:
 8c0:	08 95       	ret

000008c2 <__divmodhi4>:
 8c2:	97 fb       	bst	r25, 7

000008c4 <.Loc.1>:
 8c4:	07 2e       	mov	r0, r23

000008c6 <.Loc.2>:
 8c6:	16 f4       	brtc	.+4      	; 0x8cc <.L^B1>

000008c8 <.Loc.3>:
 8c8:	00 94       	com	r0

000008ca <.Loc.4>:
 8ca:	07 d0       	rcall	.+14     	; 0x8da <__divmodhi4_neg1>

000008cc <.L^B1>:
 8cc:	77 fd       	sbrc	r23, 7

000008ce <.Loc.6>:
 8ce:	09 d0       	rcall	.+18     	; 0x8e2 <__divmodhi4_neg2>

000008d0 <.Loc.7>:
 8d0:	0e 94 75 04 	call	0x8ea	; 0x8ea <__udivmodhi4>

000008d4 <.Loc.8>:
 8d4:	07 fc       	sbrc	r0, 7

000008d6 <.Loc.9>:
 8d6:	05 d0       	rcall	.+10     	; 0x8e2 <__divmodhi4_neg2>

000008d8 <.Loc.10>:
 8d8:	3e f4       	brtc	.+14     	; 0x8e8 <__divmodhi4_exit>

000008da <__divmodhi4_neg1>:
 8da:	90 95       	com	r25

000008dc <.Loc.12>:
 8dc:	81 95       	neg	r24

000008de <.Loc.13>:
 8de:	9f 4f       	sbci	r25, 0xFF	; 255

000008e0 <.Loc.14>:
 8e0:	08 95       	ret

000008e2 <__divmodhi4_neg2>:
 8e2:	70 95       	com	r23

000008e4 <.Loc.16>:
 8e4:	61 95       	neg	r22

000008e6 <.Loc.17>:
 8e6:	7f 4f       	sbci	r23, 0xFF	; 255

000008e8 <__divmodhi4_exit>:
 8e8:	08 95       	ret

000008ea <__udivmodhi4>:
 8ea:	aa 1b       	sub	r26, r26

000008ec <.Loc.1>:
 8ec:	bb 1b       	sub	r27, r27

000008ee <.Loc.2>:
 8ee:	51 e1       	ldi	r21, 0x11	; 17

000008f0 <.Loc.3>:
 8f0:	07 c0       	rjmp	.+14     	; 0x900 <__udivmodhi4_ep>

000008f2 <__udivmodhi4_loop>:
 8f2:	aa 1f       	adc	r26, r26

000008f4 <.Loc.5>:
 8f4:	bb 1f       	adc	r27, r27

000008f6 <.Loc.6>:
 8f6:	a6 17       	cp	r26, r22

000008f8 <.Loc.7>:
 8f8:	b7 07       	cpc	r27, r23

000008fa <.Loc.8>:
 8fa:	10 f0       	brcs	.+4      	; 0x900 <__udivmodhi4_ep>

000008fc <.Loc.9>:
 8fc:	a6 1b       	sub	r26, r22

000008fe <.Loc.10>:
 8fe:	b7 0b       	sbc	r27, r23

00000900 <__udivmodhi4_ep>:
 900:	88 1f       	adc	r24, r24

00000902 <.Loc.12>:
 902:	99 1f       	adc	r25, r25

00000904 <.Loc.13>:
 904:	5a 95       	dec	r21

00000906 <.Loc.14>:
 906:	a9 f7       	brne	.-22     	; 0x8f2 <__udivmodhi4_loop>

00000908 <.Loc.15>:
 908:	80 95       	com	r24

0000090a <.Loc.16>:
 90a:	90 95       	com	r25

0000090c <.Loc.17>:
 90c:	bc 01       	movw	r22, r24

0000090e <.Loc.18>:
 90e:	cd 01       	movw	r24, r26

00000910 <.Loc.19>:
 910:	08 95       	ret

00000912 <__cmpsf2>:
 912:	0e 94 bd 04 	call	0x97a	; 0x97a <__fp_cmp>
 916:	08 f4       	brcc	.+2      	; 0x91a <.L1^B1>
 918:	81 e0       	ldi	r24, 0x01	; 1

0000091a <.L1^B1>:
 91a:	08 95       	ret

0000091c <__fixunssfsi>:
 91c:	0e 94 e9 04 	call	0x9d2	; 0x9d2 <__fp_splitA>
 920:	88 f0       	brcs	.+34     	; 0x944 <.L_err>
 922:	9f 57       	subi	r25, 0x7F	; 127
 924:	98 f0       	brcs	.+38     	; 0x94c <.L_zr>
 926:	b9 2f       	mov	r27, r25
 928:	99 27       	eor	r25, r25
 92a:	b7 51       	subi	r27, 0x17	; 23
 92c:	b0 f0       	brcs	.+44     	; 0x95a <.L4^B1>
 92e:	e1 f0       	breq	.+56     	; 0x968 <.L_sign>

00000930 <.L1^B1>:
 930:	66 0f       	add	r22, r22
 932:	77 1f       	adc	r23, r23
 934:	88 1f       	adc	r24, r24
 936:	99 1f       	adc	r25, r25
 938:	1a f0       	brmi	.+6      	; 0x940 <.L2^B1>
 93a:	ba 95       	dec	r27
 93c:	c9 f7       	brne	.-14     	; 0x930 <.L1^B1>
 93e:	14 c0       	rjmp	.+40     	; 0x968 <.L_sign>

00000940 <.L2^B1>:
 940:	b1 30       	cpi	r27, 0x01	; 1
 942:	91 f0       	breq	.+36     	; 0x968 <.L_sign>

00000944 <.L_err>:
 944:	0e 94 03 05 	call	0xa06	; 0xa06 <__fp_zero>
 948:	b1 e0       	ldi	r27, 0x01	; 1
 94a:	08 95       	ret

0000094c <.L_zr>:
 94c:	0c 94 03 05 	jmp	0xa06	; 0xa06 <__fp_zero>

00000950 <.L3^B1>:
 950:	67 2f       	mov	r22, r23
 952:	78 2f       	mov	r23, r24
 954:	88 27       	eor	r24, r24
 956:	b8 5f       	subi	r27, 0xF8	; 248
 958:	39 f0       	breq	.+14     	; 0x968 <.L_sign>

0000095a <.L4^B1>:
 95a:	b9 3f       	cpi	r27, 0xF9	; 249
 95c:	cc f3       	brlt	.-14     	; 0x950 <.L3^B1>

0000095e <.L5^B1>:
 95e:	86 95       	lsr	r24
 960:	77 95       	ror	r23
 962:	67 95       	ror	r22
 964:	b3 95       	inc	r27
 966:	d9 f7       	brne	.-10     	; 0x95e <.L5^B1>

00000968 <.L_sign>:
 968:	3e f4       	brtc	.+14     	; 0x978 <.L6^B1>
 96a:	90 95       	com	r25
 96c:	80 95       	com	r24
 96e:	70 95       	com	r23
 970:	61 95       	neg	r22
 972:	7f 4f       	sbci	r23, 0xFF	; 255
 974:	8f 4f       	sbci	r24, 0xFF	; 255
 976:	9f 4f       	sbci	r25, 0xFF	; 255

00000978 <.L6^B1>:
 978:	08 95       	ret

0000097a <__fp_cmp>:
 97a:	99 0f       	add	r25, r25
 97c:	00 08       	sbc	r0, r0
 97e:	55 0f       	add	r21, r21
 980:	aa 0b       	sbc	r26, r26
 982:	e0 e8       	ldi	r30, 0x80	; 128
 984:	fe ef       	ldi	r31, 0xFE	; 254
 986:	16 16       	cp	r1, r22
 988:	17 06       	cpc	r1, r23
 98a:	e8 07       	cpc	r30, r24
 98c:	f9 07       	cpc	r31, r25
 98e:	c0 f0       	brcs	.+48     	; 0x9c0 <.L9^B1>
 990:	12 16       	cp	r1, r18
 992:	13 06       	cpc	r1, r19
 994:	e4 07       	cpc	r30, r20
 996:	f5 07       	cpc	r31, r21
 998:	98 f0       	brcs	.+38     	; 0x9c0 <.L9^B1>
 99a:	62 1b       	sub	r22, r18
 99c:	73 0b       	sbc	r23, r19
 99e:	84 0b       	sbc	r24, r20
 9a0:	95 0b       	sbc	r25, r21
 9a2:	39 f4       	brne	.+14     	; 0x9b2 <.L1^B1>
 9a4:	0a 26       	eor	r0, r26
 9a6:	61 f0       	breq	.+24     	; 0x9c0 <.L9^B1>
 9a8:	23 2b       	or	r18, r19
 9aa:	24 2b       	or	r18, r20
 9ac:	25 2b       	or	r18, r21
 9ae:	21 f4       	brne	.+8      	; 0x9b8 <.L2^B1>
 9b0:	08 95       	ret

000009b2 <.L1^B1>:
 9b2:	0a 26       	eor	r0, r26
 9b4:	09 f4       	brne	.+2      	; 0x9b8 <.L2^B1>
 9b6:	a1 40       	sbci	r26, 0x01	; 1

000009b8 <.L2^B1>:
 9b8:	a6 95       	lsr	r26
 9ba:	8f ef       	ldi	r24, 0xFF	; 255
 9bc:	81 1d       	adc	r24, r1
 9be:	81 1d       	adc	r24, r1

000009c0 <.L9^B1>:
 9c0:	08 95       	ret

000009c2 <__fp_split3>:
 9c2:	57 fd       	sbrc	r21, 7
 9c4:	90 58       	subi	r25, 0x80	; 128
 9c6:	44 0f       	add	r20, r20
 9c8:	55 1f       	adc	r21, r21
 9ca:	59 f0       	breq	.+22     	; 0x9e2 <.L4^B1>
 9cc:	5f 3f       	cpi	r21, 0xFF	; 255
 9ce:	71 f0       	breq	.+28     	; 0x9ec <.L5^B1>

000009d0 <.L1^B1>:
 9d0:	47 95       	ror	r20

000009d2 <__fp_splitA>:
 9d2:	88 0f       	add	r24, r24
 9d4:	97 fb       	bst	r25, 7
 9d6:	99 1f       	adc	r25, r25
 9d8:	61 f0       	breq	.+24     	; 0x9f2 <.L6^B1>
 9da:	9f 3f       	cpi	r25, 0xFF	; 255
 9dc:	79 f0       	breq	.+30     	; 0x9fc <.L7^B1>

000009de <.L3^B1>:
 9de:	87 95       	ror	r24
 9e0:	08 95       	ret

000009e2 <.L4^B1>:
 9e2:	12 16       	cp	r1, r18
 9e4:	13 06       	cpc	r1, r19
 9e6:	14 06       	cpc	r1, r20
 9e8:	55 1f       	adc	r21, r21
 9ea:	f2 cf       	rjmp	.-28     	; 0x9d0 <.L1^B1>

000009ec <.L5^B1>:
 9ec:	46 95       	lsr	r20
 9ee:	f1 df       	rcall	.-30     	; 0x9d2 <__fp_splitA>
 9f0:	08 c0       	rjmp	.+16     	; 0xa02 <.L8^B1>

000009f2 <.L6^B1>:
 9f2:	16 16       	cp	r1, r22
 9f4:	17 06       	cpc	r1, r23
 9f6:	18 06       	cpc	r1, r24
 9f8:	99 1f       	adc	r25, r25
 9fa:	f1 cf       	rjmp	.-30     	; 0x9de <.L3^B1>

000009fc <.L7^B1>:
 9fc:	86 95       	lsr	r24
 9fe:	71 05       	cpc	r23, r1
 a00:	61 05       	cpc	r22, r1

00000a02 <.L8^B1>:
 a02:	08 94       	sec
 a04:	08 95       	ret

00000a06 <__fp_zero>:
 a06:	e8 94       	clt

00000a08 <__fp_szero>:
 a08:	bb 27       	eor	r27, r27
 a0a:	66 27       	eor	r22, r22
 a0c:	77 27       	eor	r23, r23
 a0e:	cb 01       	movw	r24, r22
 a10:	97 f9       	bld	r25, 7
 a12:	08 95       	ret

00000a14 <__gesf2>:
 a14:	0e 94 bd 04 	call	0x97a	; 0x97a <__fp_cmp>
 a18:	08 f4       	brcc	.+2      	; 0xa1c <.L1^B1>
 a1a:	8f ef       	ldi	r24, 0xFF	; 255

00000a1c <.L1^B1>:
 a1c:	08 95       	ret

00000a1e <__mulsf3>:
 a1e:	0e 94 22 05 	call	0xa44	; 0xa44 <__mulsf3x>
 a22:	0c 94 93 05 	jmp	0xb26	; 0xb26 <__fp_round>

00000a26 <.L^B1>:
 a26:	0e 94 85 05 	call	0xb0a	; 0xb0a <__fp_pscA>
 a2a:	38 f0       	brcs	.+14     	; 0xa3a <.L1^B1>
 a2c:	0e 94 8c 05 	call	0xb18	; 0xb18 <__fp_pscB>
 a30:	20 f0       	brcs	.+8      	; 0xa3a <.L1^B1>
 a32:	95 23       	and	r25, r21
 a34:	11 f0       	breq	.+4      	; 0xa3a <.L1^B1>
 a36:	0c 94 7c 05 	jmp	0xaf8	; 0xaf8 <__fp_inf>

00000a3a <.L1^B1>:
 a3a:	0c 94 82 05 	jmp	0xb04	; 0xb04 <__fp_nan>

00000a3e <.L2^B1>:
 a3e:	11 24       	eor	r1, r1
 a40:	0c 94 04 05 	jmp	0xa08	; 0xa08 <__fp_szero>

00000a44 <__mulsf3x>:
 a44:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <__fp_split3>
 a48:	70 f3       	brcs	.-36     	; 0xa26 <.L^B1>

00000a4a <__mulsf3_pse>:
 a4a:	95 9f       	mul	r25, r21
 a4c:	c1 f3       	breq	.-16     	; 0xa3e <.L2^B1>
 a4e:	95 0f       	add	r25, r21
 a50:	50 e0       	ldi	r21, 0x00	; 0
 a52:	55 1f       	adc	r21, r21
 a54:	62 9f       	mul	r22, r18
 a56:	f0 01       	movw	r30, r0
 a58:	72 9f       	mul	r23, r18
 a5a:	bb 27       	eor	r27, r27
 a5c:	f0 0d       	add	r31, r0
 a5e:	b1 1d       	adc	r27, r1
 a60:	63 9f       	mul	r22, r19
 a62:	aa 27       	eor	r26, r26
 a64:	f0 0d       	add	r31, r0
 a66:	b1 1d       	adc	r27, r1
 a68:	aa 1f       	adc	r26, r26
 a6a:	64 9f       	mul	r22, r20
 a6c:	66 27       	eor	r22, r22
 a6e:	b0 0d       	add	r27, r0
 a70:	a1 1d       	adc	r26, r1
 a72:	66 1f       	adc	r22, r22
 a74:	82 9f       	mul	r24, r18
 a76:	22 27       	eor	r18, r18
 a78:	b0 0d       	add	r27, r0
 a7a:	a1 1d       	adc	r26, r1
 a7c:	62 1f       	adc	r22, r18
 a7e:	73 9f       	mul	r23, r19
 a80:	b0 0d       	add	r27, r0
 a82:	a1 1d       	adc	r26, r1
 a84:	62 1f       	adc	r22, r18
 a86:	83 9f       	mul	r24, r19
 a88:	a0 0d       	add	r26, r0
 a8a:	61 1d       	adc	r22, r1
 a8c:	22 1f       	adc	r18, r18
 a8e:	74 9f       	mul	r23, r20
 a90:	33 27       	eor	r19, r19
 a92:	a0 0d       	add	r26, r0
 a94:	61 1d       	adc	r22, r1
 a96:	23 1f       	adc	r18, r19
 a98:	84 9f       	mul	r24, r20
 a9a:	60 0d       	add	r22, r0
 a9c:	21 1d       	adc	r18, r1
 a9e:	82 2f       	mov	r24, r18
 aa0:	76 2f       	mov	r23, r22
 aa2:	6a 2f       	mov	r22, r26
 aa4:	11 24       	eor	r1, r1
 aa6:	9f 57       	subi	r25, 0x7F	; 127
 aa8:	50 40       	sbci	r21, 0x00	; 0
 aaa:	9a f0       	brmi	.+38     	; 0xad2 <.L13^B1>
 aac:	f1 f0       	breq	.+60     	; 0xaea <.L15^B1>

00000aae <.L10^B1>:
 aae:	88 23       	and	r24, r24
 ab0:	4a f0       	brmi	.+18     	; 0xac4 <.L11^B1>
 ab2:	ee 0f       	add	r30, r30
 ab4:	ff 1f       	adc	r31, r31
 ab6:	bb 1f       	adc	r27, r27
 ab8:	66 1f       	adc	r22, r22
 aba:	77 1f       	adc	r23, r23
 abc:	88 1f       	adc	r24, r24
 abe:	91 50       	subi	r25, 0x01	; 1
 ac0:	50 40       	sbci	r21, 0x00	; 0
 ac2:	a9 f7       	brne	.-22     	; 0xaae <.L10^B1>

00000ac4 <.L11^B1>:
 ac4:	9e 3f       	cpi	r25, 0xFE	; 254
 ac6:	51 05       	cpc	r21, r1
 ac8:	80 f0       	brcs	.+32     	; 0xaea <.L15^B1>
 aca:	0c 94 7c 05 	jmp	0xaf8	; 0xaf8 <__fp_inf>

00000ace <.L12^B1>:
 ace:	0c 94 04 05 	jmp	0xa08	; 0xa08 <__fp_szero>

00000ad2 <.L13^B1>:
 ad2:	5f 3f       	cpi	r21, 0xFF	; 255
 ad4:	e4 f3       	brlt	.-8      	; 0xace <.L12^B1>
 ad6:	98 3e       	cpi	r25, 0xE8	; 232
 ad8:	d4 f3       	brlt	.-12     	; 0xace <.L12^B1>

00000ada <.L14^B1>:
 ada:	86 95       	lsr	r24
 adc:	77 95       	ror	r23
 ade:	67 95       	ror	r22
 ae0:	b7 95       	ror	r27
 ae2:	f7 95       	ror	r31
 ae4:	e7 95       	ror	r30
 ae6:	9f 5f       	subi	r25, 0xFF	; 255
 ae8:	c1 f7       	brne	.-16     	; 0xada <.L14^B1>

00000aea <.L15^B1>:
 aea:	fe 2b       	or	r31, r30
 aec:	88 0f       	add	r24, r24
 aee:	91 1d       	adc	r25, r1
 af0:	96 95       	lsr	r25
 af2:	87 95       	ror	r24
 af4:	97 f9       	bld	r25, 7
 af6:	08 95       	ret

00000af8 <__fp_inf>:
 af8:	97 f9       	bld	r25, 7
 afa:	9f 67       	ori	r25, 0x7F	; 127
 afc:	80 e8       	ldi	r24, 0x80	; 128
 afe:	70 e0       	ldi	r23, 0x00	; 0
 b00:	60 e0       	ldi	r22, 0x00	; 0
 b02:	08 95       	ret

00000b04 <__fp_nan>:
 b04:	9f ef       	ldi	r25, 0xFF	; 255
 b06:	80 ec       	ldi	r24, 0xC0	; 192
 b08:	08 95       	ret

00000b0a <__fp_pscA>:
 b0a:	00 24       	eor	r0, r0
 b0c:	0a 94       	dec	r0
 b0e:	16 16       	cp	r1, r22
 b10:	17 06       	cpc	r1, r23
 b12:	18 06       	cpc	r1, r24
 b14:	09 06       	cpc	r0, r25
 b16:	08 95       	ret

00000b18 <__fp_pscB>:
 b18:	00 24       	eor	r0, r0
 b1a:	0a 94       	dec	r0
 b1c:	12 16       	cp	r1, r18
 b1e:	13 06       	cpc	r1, r19
 b20:	14 06       	cpc	r1, r20
 b22:	05 06       	cpc	r0, r21
 b24:	08 95       	ret

00000b26 <__fp_round>:
 b26:	09 2e       	mov	r0, r25
 b28:	03 94       	inc	r0
 b2a:	00 0c       	add	r0, r0
 b2c:	11 f4       	brne	.+4      	; 0xb32 <.L1^B1>
 b2e:	88 23       	and	r24, r24
 b30:	52 f0       	brmi	.+20     	; 0xb46 <.L3^B1>

00000b32 <.L1^B1>:
 b32:	bb 0f       	add	r27, r27
 b34:	40 f4       	brcc	.+16     	; 0xb46 <.L3^B1>
 b36:	bf 2b       	or	r27, r31
 b38:	11 f4       	brne	.+4      	; 0xb3e <.L2^B1>
 b3a:	60 ff       	sbrs	r22, 0
 b3c:	04 c0       	rjmp	.+8      	; 0xb46 <.L3^B1>

00000b3e <.L2^B1>:
 b3e:	6f 5f       	subi	r22, 0xFF	; 255
 b40:	7f 4f       	sbci	r23, 0xFF	; 255
 b42:	8f 4f       	sbci	r24, 0xFF	; 255
 b44:	9f 4f       	sbci	r25, 0xFF	; 255

00000b46 <.L3^B1>:
 b46:	08 95       	ret

00000b48 <_exit>:
 b48:	f8 94       	cli

00000b4a <__stop_program>:
 b4a:	ff cf       	rjmp	.-2      	; 0xb4a <__stop_program>
