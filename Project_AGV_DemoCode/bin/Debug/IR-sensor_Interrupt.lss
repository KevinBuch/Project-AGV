
bin\Debug\IR-sensor_Interrupt.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800200  00001664  00001718  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001664  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000008  00800202  00800202  0000171a  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  0000171a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  0000171d  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001730  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000138  00000000  00000000  00001770  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   000016d4  00000000  00000000  000018a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000f2f  00000000  00000000  00002f7c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   0000159a  00000000  00000000  00003eab  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000330  00000000  00000000  00005448  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000743  00000000  00000000  00005778  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 00000282  00000000  00000000  00005ebb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_loclists 0000007a  00000000  00000000  0000613d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 c9 01 	jmp	0x392	; 0x392 <__vector_1>
       8:	0c 94 c2 00 	jmp	0x184	; 0x184 <__vector_2>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 fe 08 	jmp	0x11fc	; 0x11fc <__vector_13>
      38:	0c 94 16 09 	jmp	0x122c	; 0x122c <__vector_14>
      3c:	0c 94 c2 08 	jmp	0x1184	; 0x1184 <__vector_15>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__vector_20>
      54:	0c 94 5c 08 	jmp	0x10b8	; 0x10b8 <__vector_21>
      58:	0c 94 73 08 	jmp	0x10e6	; 0x10e6 <__vector_22>
      5c:	0c 94 24 08 	jmp	0x1048	; 0x1048 <__vector_23>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
      f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
      f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
      fa:	e4 e6       	ldi	r30, 0x64	; 100

000000fc <.Loc.4>:
      fc:	f6 e1       	ldi	r31, 0x16	; 22

000000fe <.Loc.5>:
      fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
     100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
     102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
     104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
     106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
     108:	a2 30       	cpi	r26, 0x02	; 2

0000010a <.Loc.11>:
     10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
     10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2

00000110 <.Loc.1>:
     110:	a2 e0       	ldi	r26, 0x02	; 2

00000112 <.Loc.2>:
     112:	b2 e0       	ldi	r27, 0x02	; 2

00000114 <.Loc.3>:
     114:	01 c0       	rjmp	.+2      	; 0x118 <.Loc.5>

00000116 <.Loc.4>:
     116:	1d 92       	st	X+, r1

00000118 <.Loc.5>:
     118:	aa 30       	cpi	r26, 0x0A	; 10

0000011a <.Loc.6>:
     11a:	b2 07       	cpc	r27, r18

0000011c <.Loc.7>:
     11c:	e1 f7       	brne	.-8      	; 0x116 <.Loc.4>

0000011e <L0^A>:
     11e:	0e 94 21 03 	call	0x642	; 0x642 <main>
     122:	0c 94 30 0b 	jmp	0x1660	; 0x1660 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <init_Interrupt>:
static volatile int teller = 0;
static volatile int plantTeller = 0;
static volatile int laatsteBocht = Rechts;

void init_Interrupt (void)
{
     12a:	cf 93       	push	r28
     12c:	df 93       	push	r29
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62

00000132 <.Loc.1>:
    sei();
     132:	78 94       	sei

00000134 <.Loc.2>:
    EIMSK |= (1<<INT0);
     134:	8d e3       	ldi	r24, 0x3D	; 61
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	fc 01       	movw	r30, r24
     13a:	20 81       	ld	r18, Z
     13c:	8d e3       	ldi	r24, 0x3D	; 61
     13e:	90 e0       	ldi	r25, 0x00	; 0

00000140 <.Loc.3>:
     140:	21 60       	ori	r18, 0x01	; 1
     142:	fc 01       	movw	r30, r24
     144:	20 83       	st	Z, r18

00000146 <.Loc.4>:
    EICRA |= (1<<ISC01) | (0<<ISC00);
     146:	89 e6       	ldi	r24, 0x69	; 105
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	fc 01       	movw	r30, r24
     14c:	20 81       	ld	r18, Z
     14e:	89 e6       	ldi	r24, 0x69	; 105
     150:	90 e0       	ldi	r25, 0x00	; 0

00000152 <.Loc.5>:
     152:	22 60       	ori	r18, 0x02	; 2
     154:	fc 01       	movw	r30, r24
     156:	20 83       	st	Z, r18

00000158 <.Loc.6>:
    EIMSK |= (1<<INT1);
     158:	8d e3       	ldi	r24, 0x3D	; 61
     15a:	90 e0       	ldi	r25, 0x00	; 0
     15c:	fc 01       	movw	r30, r24
     15e:	20 81       	ld	r18, Z
     160:	8d e3       	ldi	r24, 0x3D	; 61
     162:	90 e0       	ldi	r25, 0x00	; 0

00000164 <.Loc.7>:
     164:	22 60       	ori	r18, 0x02	; 2
     166:	fc 01       	movw	r30, r24
     168:	20 83       	st	Z, r18

0000016a <.Loc.8>:
    EICRA |= (1<<ISC11) | (0<<ISC10);
     16a:	89 e6       	ldi	r24, 0x69	; 105
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	fc 01       	movw	r30, r24
     170:	20 81       	ld	r18, Z
     172:	89 e6       	ldi	r24, 0x69	; 105
     174:	90 e0       	ldi	r25, 0x00	; 0

00000176 <.Loc.9>:
     176:	28 60       	ori	r18, 0x08	; 8
     178:	fc 01       	movw	r30, r24
     17a:	20 83       	st	Z, r18

0000017c <.Loc.10>:
}
     17c:	00 00       	nop
     17e:	df 91       	pop	r29
     180:	cf 91       	pop	r28
     182:	08 95       	ret

00000184 <__vector_2>:

ISR(INT1_vect)
{
     184:	1f 92       	push	r1
     186:	0f 92       	push	r0
     188:	0f b6       	in	r0, 0x3f	; 63
     18a:	0f 92       	push	r0
     18c:	11 24       	eor	r1, r1
     18e:	0b b6       	in	r0, 0x3b	; 59
     190:	0f 92       	push	r0
     192:	2f 93       	push	r18
     194:	3f 93       	push	r19
     196:	4f 93       	push	r20
     198:	5f 93       	push	r21
     19a:	6f 93       	push	r22
     19c:	7f 93       	push	r23
     19e:	8f 93       	push	r24
     1a0:	9f 93       	push	r25
     1a2:	af 93       	push	r26
     1a4:	bf 93       	push	r27
     1a6:	ef 93       	push	r30
     1a8:	ff 93       	push	r31
     1aa:	cf 93       	push	r28
     1ac:	df 93       	push	r29
     1ae:	cd b7       	in	r28, 0x3d	; 61
     1b0:	de b7       	in	r29, 0x3e	; 62
     1b2:	a2 97       	sbiw	r28, 0x22	; 34
     1b4:	de bf       	out	0x3e, r29	; 62
     1b6:	cd bf       	out	0x3d, r28	; 61
     1b8:	80 e0       	ldi	r24, 0x00	; 0
     1ba:	90 e0       	ldi	r25, 0x00	; 0
     1bc:	a0 e2       	ldi	r26, 0x20	; 32
     1be:	b2 e4       	ldi	r27, 0x42	; 66
     1c0:	89 83       	std	Y+1, r24	; 0x01
     1c2:	9a 83       	std	Y+2, r25	; 0x02
     1c4:	ab 83       	std	Y+3, r26	; 0x03
     1c6:	bc 83       	std	Y+4, r27	; 0x04

000001c8 <.LBB52>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
     1c8:	20 e0       	ldi	r18, 0x00	; 0
     1ca:	30 e0       	ldi	r19, 0x00	; 0
     1cc:	4a e7       	ldi	r20, 0x7A	; 122
     1ce:	55 e4       	ldi	r21, 0x45	; 69
     1d0:	69 81       	ldd	r22, Y+1	; 0x01
     1d2:	7a 81       	ldd	r23, Y+2	; 0x02
     1d4:	8b 81       	ldd	r24, Y+3	; 0x03
     1d6:	9c 81       	ldd	r25, Y+4	; 0x04
     1d8:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__mulsf3>
     1dc:	6b 8b       	std	Y+19, r22	; 0x13
     1de:	7c 8b       	std	Y+20, r23	; 0x14
     1e0:	8d 8b       	std	Y+21, r24	; 0x15
     1e2:	9e 8b       	std	Y+22, r25	; 0x16
     1e4:	8b 89       	ldd	r24, Y+19	; 0x13
     1e6:	9c 89       	ldd	r25, Y+20	; 0x14
     1e8:	ad 89       	ldd	r26, Y+21	; 0x15
     1ea:	be 89       	ldd	r27, Y+22	; 0x16
     1ec:	8d 83       	std	Y+5, r24	; 0x05
     1ee:	9e 83       	std	Y+6, r25	; 0x06
     1f0:	af 83       	std	Y+7, r26	; 0x07
     1f2:	b8 87       	std	Y+8, r27	; 0x08

000001f4 <.Loc.13>:
	if (__tmp < 1.0)
     1f4:	20 e0       	ldi	r18, 0x00	; 0
     1f6:	30 e0       	ldi	r19, 0x00	; 0
     1f8:	40 e8       	ldi	r20, 0x80	; 128
     1fa:	5f e3       	ldi	r21, 0x3F	; 63
     1fc:	6d 81       	ldd	r22, Y+5	; 0x05
     1fe:	7e 81       	ldd	r23, Y+6	; 0x06
     200:	8f 81       	ldd	r24, Y+7	; 0x07
     202:	98 85       	ldd	r25, Y+8	; 0x08
     204:	0e 94 15 0a 	call	0x142a	; 0x142a <__cmpsf2>
     208:	88 23       	and	r24, r24
     20a:	2c f4       	brge	.+10     	; 0x216 <.L17>

0000020c <.Loc.14>:
		__ticks = 1;
     20c:	81 e0       	ldi	r24, 0x01	; 1
     20e:	90 e0       	ldi	r25, 0x00	; 0
     210:	9a 87       	std	Y+10, r25	; 0x0a
     212:	89 87       	std	Y+9, r24	; 0x09
     214:	55 c0       	rjmp	.+170    	; 0x2c0 <.L5>

00000216 <.L17>:
	else if (__tmp > 65535)
     216:	20 e0       	ldi	r18, 0x00	; 0
     218:	3f ef       	ldi	r19, 0xFF	; 255
     21a:	4f e7       	ldi	r20, 0x7F	; 127
     21c:	57 e4       	ldi	r21, 0x47	; 71
     21e:	6d 81       	ldd	r22, Y+5	; 0x05
     220:	7e 81       	ldd	r23, Y+6	; 0x06
     222:	8f 81       	ldd	r24, Y+7	; 0x07
     224:	98 85       	ldd	r25, Y+8	; 0x08
     226:	0e 94 96 0a 	call	0x152c	; 0x152c <__gesf2>
     22a:	88 23       	and	r24, r24
     22c:	d9 f1       	breq	.+118    	; 0x2a4 <.L18>
     22e:	d4 f1       	brlt	.+116    	; 0x2a4 <.L18>

00000230 <.Loc.16>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     230:	20 e0       	ldi	r18, 0x00	; 0
     232:	30 e0       	ldi	r19, 0x00	; 0
     234:	40 e2       	ldi	r20, 0x20	; 32
     236:	51 e4       	ldi	r21, 0x41	; 65
     238:	69 81       	ldd	r22, Y+1	; 0x01
     23a:	7a 81       	ldd	r23, Y+2	; 0x02
     23c:	8b 81       	ldd	r24, Y+3	; 0x03
     23e:	9c 81       	ldd	r25, Y+4	; 0x04
     240:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__mulsf3>
     244:	6f 8b       	std	Y+23, r22	; 0x17
     246:	78 8f       	std	Y+24, r23	; 0x18
     248:	89 8f       	std	Y+25, r24	; 0x19
     24a:	9a 8f       	std	Y+26, r25	; 0x1a
     24c:	8f 89       	ldd	r24, Y+23	; 0x17
     24e:	98 8d       	ldd	r25, Y+24	; 0x18
     250:	a9 8d       	ldd	r26, Y+25	; 0x19
     252:	ba 8d       	ldd	r27, Y+26	; 0x1a
     254:	8f 87       	std	Y+15, r24	; 0x0f
     256:	98 8b       	std	Y+16, r25	; 0x10
     258:	a9 8b       	std	Y+17, r26	; 0x11
     25a:	ba 8b       	std	Y+18, r27	; 0x12

0000025c <.Loc.17>:
     25c:	6f 85       	ldd	r22, Y+15	; 0x0f
     25e:	78 89       	ldd	r23, Y+16	; 0x10
     260:	89 89       	ldd	r24, Y+17	; 0x11
     262:	9a 89       	ldd	r25, Y+18	; 0x12
     264:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__fixunssfsi>
     268:	6b 8f       	std	Y+27, r22	; 0x1b
     26a:	7c 8f       	std	Y+28, r23	; 0x1c
     26c:	8d 8f       	std	Y+29, r24	; 0x1d
     26e:	9e 8f       	std	Y+30, r25	; 0x1e
     270:	ab 8d       	ldd	r26, Y+27	; 0x1b
     272:	bc 8d       	ldd	r27, Y+28	; 0x1c
     274:	ba 87       	std	Y+10, r27	; 0x0a
     276:	a9 87       	std	Y+9, r26	; 0x09

00000278 <.Loc.18>:
		while(__ticks)
     278:	10 c0       	rjmp	.+32     	; 0x29a <.L8>

0000027a <.L9>:
     27a:	80 e9       	ldi	r24, 0x90	; 144
     27c:	91 e0       	ldi	r25, 0x01	; 1
     27e:	9c 87       	std	Y+12, r25	; 0x0c
     280:	8b 87       	std	Y+11, r24	; 0x0b

00000282 <.LBB54>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     282:	8b 85       	ldd	r24, Y+11	; 0x0b
     284:	9c 85       	ldd	r25, Y+12	; 0x0c

00000286 <.L1^B1>:
     286:	01 97       	sbiw	r24, 0x01	; 1
     288:	f1 f7       	brne	.-4      	; 0x286 <.L1^B1>
     28a:	9c 87       	std	Y+12, r25	; 0x0c
     28c:	8b 87       	std	Y+11, r24	; 0x0b

0000028e <.Loc.20>:
	...

00000290 <.LBE54>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     290:	89 85       	ldd	r24, Y+9	; 0x09
     292:	9a 85       	ldd	r25, Y+10	; 0x0a
     294:	01 97       	sbiw	r24, 0x01	; 1
     296:	9a 87       	std	Y+10, r25	; 0x0a
     298:	89 87       	std	Y+9, r24	; 0x09

0000029a <.L8>:
		while(__ticks)
     29a:	89 85       	ldd	r24, Y+9	; 0x09
     29c:	9a 85       	ldd	r25, Y+10	; 0x0a
     29e:	00 97       	sbiw	r24, 0x00	; 0
     2a0:	61 f7       	brne	.-40     	; 0x27a <.L9>

000002a2 <.Loc.23>:
		}
		return;
     2a2:	19 c0       	rjmp	.+50     	; 0x2d6 <.L10>

000002a4 <.L18>:
	}
	else
		__ticks = (uint16_t)__tmp;
     2a4:	6d 81       	ldd	r22, Y+5	; 0x05
     2a6:	7e 81       	ldd	r23, Y+6	; 0x06
     2a8:	8f 81       	ldd	r24, Y+7	; 0x07
     2aa:	98 85       	ldd	r25, Y+8	; 0x08
     2ac:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__fixunssfsi>
     2b0:	6f 8f       	std	Y+31, r22	; 0x1f
     2b2:	78 a3       	std	Y+32, r23	; 0x20
     2b4:	89 a3       	std	Y+33, r24	; 0x21
     2b6:	9a a3       	std	Y+34, r25	; 0x22
     2b8:	8f 8d       	ldd	r24, Y+31	; 0x1f
     2ba:	98 a1       	ldd	r25, Y+32	; 0x20
     2bc:	9a 87       	std	Y+10, r25	; 0x0a
     2be:	89 87       	std	Y+9, r24	; 0x09

000002c0 <.L5>:
     2c0:	89 85       	ldd	r24, Y+9	; 0x09
     2c2:	9a 85       	ldd	r25, Y+10	; 0x0a
     2c4:	9e 87       	std	Y+14, r25	; 0x0e
     2c6:	8d 87       	std	Y+13, r24	; 0x0d

000002c8 <.LBB56>:
     2c8:	8d 85       	ldd	r24, Y+13	; 0x0d
     2ca:	9e 85       	ldd	r25, Y+14	; 0x0e

000002cc <.L1^B2>:
     2cc:	01 97       	sbiw	r24, 0x01	; 1
     2ce:	f1 f7       	brne	.-4      	; 0x2cc <.L1^B2>
     2d0:	9e 87       	std	Y+14, r25	; 0x0e
     2d2:	8d 87       	std	Y+13, r24	; 0x0d

000002d4 <.Loc.26>:
	...

000002d6 <.L10>:
    _delay_ms(40);
    teller = 0;
     2d6:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <teller+0x1>
     2da:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <teller>

000002de <.Loc.28>:
    if (plantTeller < 7)
     2de:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <plantTeller>
     2e2:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <plantTeller+0x1>

000002e6 <.Loc.29>:
     2e6:	86 30       	cpi	r24, 0x06	; 6
     2e8:	91 05       	cpc	r25, r1
     2ea:	09 f0       	breq	.+2      	; 0x2ee <.Loc.30>

000002ec <L0^A>:
     2ec:	34 f4       	brge	.+12     	; 0x2fa <.L11>

000002ee <.Loc.30>:
    {
        state = 2;  //Rechtdoor rijden
     2ee:	82 e0       	ldi	r24, 0x02	; 2
     2f0:	90 e0       	ldi	r25, 0x00	; 0
     2f2:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     2f6:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

000002fa <.L11>:
    }
    if(plantTeller==7)
     2fa:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <plantTeller>
     2fe:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <plantTeller+0x1>

00000302 <.Loc.32>:
     302:	87 30       	cpi	r24, 0x07	; 7
     304:	91 05       	cpc	r25, r1
     306:	31 f4       	brne	.+12     	; 0x314 <.L12>

00000308 <.Loc.33>:
    {
        state = 3;  //Bocht linksom
     308:	83 e0       	ldi	r24, 0x03	; 3
     30a:	90 e0       	ldi	r25, 0x00	; 0
     30c:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     310:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000314 <.L12>:
    }
    if (plantTeller > 15 && plantTeller < 31)
     314:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <plantTeller>
     318:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <plantTeller+0x1>

0000031c <.Loc.35>:
     31c:	8f 30       	cpi	r24, 0x0F	; 15
     31e:	91 05       	cpc	r25, r1
     320:	79 f0       	breq	.+30     	; 0x340 <.L13>
     322:	74 f0       	brlt	.+28     	; 0x340 <.L13>

00000324 <.Loc.36>:
     324:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <plantTeller>
     328:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <plantTeller+0x1>

0000032c <.Loc.37>:
     32c:	8e 31       	cpi	r24, 0x1E	; 30
     32e:	91 05       	cpc	r25, r1
     330:	09 f0       	breq	.+2      	; 0x334 <.Loc.38>

00000332 <L0^A>:
     332:	34 f4       	brge	.+12     	; 0x340 <.L13>

00000334 <.Loc.38>:
    {
        state = 2;  //Rechtdoor rijden
     334:	82 e0       	ldi	r24, 0x02	; 2
     336:	90 e0       	ldi	r25, 0x00	; 0
     338:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     33c:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000340 <.L13>:
    }
    if (plantTeller == 31)
     340:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <plantTeller>
     344:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <plantTeller+0x1>

00000348 <.Loc.40>:
     348:	8f 31       	cpi	r24, 0x1F	; 31
     34a:	91 05       	cpc	r25, r1
     34c:	31 f4       	brne	.+12     	; 0x35a <.L19>

0000034e <.Loc.41>:
    {
        state = 99;
     34e:	83 e6       	ldi	r24, 0x63	; 99
     350:	90 e0       	ldi	r25, 0x00	; 0
     352:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     356:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

0000035a <.L19>:
    }
}
     35a:	00 00       	nop
     35c:	a2 96       	adiw	r28, 0x22	; 34
     35e:	0f b6       	in	r0, 0x3f	; 63
     360:	f8 94       	cli
     362:	de bf       	out	0x3e, r29	; 62
     364:	0f be       	out	0x3f, r0	; 63
     366:	cd bf       	out	0x3d, r28	; 61
     368:	df 91       	pop	r29
     36a:	cf 91       	pop	r28
     36c:	ff 91       	pop	r31
     36e:	ef 91       	pop	r30
     370:	bf 91       	pop	r27
     372:	af 91       	pop	r26
     374:	9f 91       	pop	r25
     376:	8f 91       	pop	r24
     378:	7f 91       	pop	r23
     37a:	6f 91       	pop	r22
     37c:	5f 91       	pop	r21
     37e:	4f 91       	pop	r20
     380:	3f 91       	pop	r19
     382:	2f 91       	pop	r18
     384:	0f 90       	pop	r0
     386:	0b be       	out	0x3b, r0	; 59
     388:	0f 90       	pop	r0
     38a:	0f be       	out	0x3f, r0	; 63
     38c:	0f 90       	pop	r0
     38e:	1f 90       	pop	r1
     390:	18 95       	reti

00000392 <__vector_1>:

ISR(INT0_vect)
{
     392:	1f 92       	push	r1
     394:	0f 92       	push	r0
     396:	0f b6       	in	r0, 0x3f	; 63
     398:	0f 92       	push	r0
     39a:	11 24       	eor	r1, r1
     39c:	0b b6       	in	r0, 0x3b	; 59
     39e:	0f 92       	push	r0
     3a0:	2f 93       	push	r18
     3a2:	3f 93       	push	r19
     3a4:	4f 93       	push	r20
     3a6:	5f 93       	push	r21
     3a8:	6f 93       	push	r22
     3aa:	7f 93       	push	r23
     3ac:	8f 93       	push	r24
     3ae:	9f 93       	push	r25
     3b0:	af 93       	push	r26
     3b2:	bf 93       	push	r27
     3b4:	ef 93       	push	r30
     3b6:	ff 93       	push	r31
     3b8:	cf 93       	push	r28
     3ba:	df 93       	push	r29
     3bc:	cd b7       	in	r28, 0x3d	; 61
     3be:	de b7       	in	r29, 0x3e	; 62
     3c0:	a2 97       	sbiw	r28, 0x22	; 34
     3c2:	de bf       	out	0x3e, r29	; 62
     3c4:	cd bf       	out	0x3d, r28	; 61
     3c6:	80 e0       	ldi	r24, 0x00	; 0
     3c8:	90 e0       	ldi	r25, 0x00	; 0
     3ca:	a0 e2       	ldi	r26, 0x20	; 32
     3cc:	b2 e4       	ldi	r27, 0x42	; 66
     3ce:	89 83       	std	Y+1, r24	; 0x01
     3d0:	9a 83       	std	Y+2, r25	; 0x02
     3d2:	ab 83       	std	Y+3, r26	; 0x03
     3d4:	bc 83       	std	Y+4, r27	; 0x04

000003d6 <.LBB58>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     3d6:	20 e0       	ldi	r18, 0x00	; 0
     3d8:	30 e0       	ldi	r19, 0x00	; 0
     3da:	4a e7       	ldi	r20, 0x7A	; 122
     3dc:	55 e4       	ldi	r21, 0x45	; 69
     3de:	69 81       	ldd	r22, Y+1	; 0x01
     3e0:	7a 81       	ldd	r23, Y+2	; 0x02
     3e2:	8b 81       	ldd	r24, Y+3	; 0x03
     3e4:	9c 81       	ldd	r25, Y+4	; 0x04
     3e6:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__mulsf3>
     3ea:	6b 8b       	std	Y+19, r22	; 0x13
     3ec:	7c 8b       	std	Y+20, r23	; 0x14
     3ee:	8d 8b       	std	Y+21, r24	; 0x15
     3f0:	9e 8b       	std	Y+22, r25	; 0x16
     3f2:	8b 89       	ldd	r24, Y+19	; 0x13
     3f4:	9c 89       	ldd	r25, Y+20	; 0x14
     3f6:	ad 89       	ldd	r26, Y+21	; 0x15
     3f8:	be 89       	ldd	r27, Y+22	; 0x16
     3fa:	8d 83       	std	Y+5, r24	; 0x05
     3fc:	9e 83       	std	Y+6, r25	; 0x06
     3fe:	af 83       	std	Y+7, r26	; 0x07
     400:	b8 87       	std	Y+8, r27	; 0x08

00000402 <.Loc.45>:
	if (__tmp < 1.0)
     402:	20 e0       	ldi	r18, 0x00	; 0
     404:	30 e0       	ldi	r19, 0x00	; 0
     406:	40 e8       	ldi	r20, 0x80	; 128
     408:	5f e3       	ldi	r21, 0x3F	; 63
     40a:	6d 81       	ldd	r22, Y+5	; 0x05
     40c:	7e 81       	ldd	r23, Y+6	; 0x06
     40e:	8f 81       	ldd	r24, Y+7	; 0x07
     410:	98 85       	ldd	r25, Y+8	; 0x08
     412:	0e 94 15 0a 	call	0x142a	; 0x142a <__cmpsf2>
     416:	88 23       	and	r24, r24
     418:	2c f4       	brge	.+10     	; 0x424 <.L34>

0000041a <.Loc.46>:
		__ticks = 1;
     41a:	81 e0       	ldi	r24, 0x01	; 1
     41c:	90 e0       	ldi	r25, 0x00	; 0
     41e:	9a 87       	std	Y+10, r25	; 0x0a
     420:	89 87       	std	Y+9, r24	; 0x09
     422:	55 c0       	rjmp	.+170    	; 0x4ce <.L23>

00000424 <.L34>:
	else if (__tmp > 65535)
     424:	20 e0       	ldi	r18, 0x00	; 0
     426:	3f ef       	ldi	r19, 0xFF	; 255
     428:	4f e7       	ldi	r20, 0x7F	; 127
     42a:	57 e4       	ldi	r21, 0x47	; 71
     42c:	6d 81       	ldd	r22, Y+5	; 0x05
     42e:	7e 81       	ldd	r23, Y+6	; 0x06
     430:	8f 81       	ldd	r24, Y+7	; 0x07
     432:	98 85       	ldd	r25, Y+8	; 0x08
     434:	0e 94 96 0a 	call	0x152c	; 0x152c <__gesf2>
     438:	88 23       	and	r24, r24
     43a:	d9 f1       	breq	.+118    	; 0x4b2 <.L35>
     43c:	d4 f1       	brlt	.+116    	; 0x4b2 <.L35>

0000043e <.Loc.48>:
		__ticks = (uint16_t) (__ms * 10.0);
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	40 e2       	ldi	r20, 0x20	; 32
     444:	51 e4       	ldi	r21, 0x41	; 65
     446:	69 81       	ldd	r22, Y+1	; 0x01
     448:	7a 81       	ldd	r23, Y+2	; 0x02
     44a:	8b 81       	ldd	r24, Y+3	; 0x03
     44c:	9c 81       	ldd	r25, Y+4	; 0x04
     44e:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__mulsf3>
     452:	6f 8b       	std	Y+23, r22	; 0x17
     454:	78 8f       	std	Y+24, r23	; 0x18
     456:	89 8f       	std	Y+25, r24	; 0x19
     458:	9a 8f       	std	Y+26, r25	; 0x1a
     45a:	8f 89       	ldd	r24, Y+23	; 0x17
     45c:	98 8d       	ldd	r25, Y+24	; 0x18
     45e:	a9 8d       	ldd	r26, Y+25	; 0x19
     460:	ba 8d       	ldd	r27, Y+26	; 0x1a
     462:	8f 87       	std	Y+15, r24	; 0x0f
     464:	98 8b       	std	Y+16, r25	; 0x10
     466:	a9 8b       	std	Y+17, r26	; 0x11
     468:	ba 8b       	std	Y+18, r27	; 0x12

0000046a <.Loc.49>:
     46a:	6f 85       	ldd	r22, Y+15	; 0x0f
     46c:	78 89       	ldd	r23, Y+16	; 0x10
     46e:	89 89       	ldd	r24, Y+17	; 0x11
     470:	9a 89       	ldd	r25, Y+18	; 0x12
     472:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__fixunssfsi>
     476:	6b 8f       	std	Y+27, r22	; 0x1b
     478:	7c 8f       	std	Y+28, r23	; 0x1c
     47a:	8d 8f       	std	Y+29, r24	; 0x1d
     47c:	9e 8f       	std	Y+30, r25	; 0x1e
     47e:	ab 8d       	ldd	r26, Y+27	; 0x1b
     480:	bc 8d       	ldd	r27, Y+28	; 0x1c
     482:	ba 87       	std	Y+10, r27	; 0x0a
     484:	a9 87       	std	Y+9, r26	; 0x09

00000486 <.Loc.50>:
		while(__ticks)
     486:	10 c0       	rjmp	.+32     	; 0x4a8 <.L26>

00000488 <.L27>:
     488:	80 e9       	ldi	r24, 0x90	; 144
     48a:	91 e0       	ldi	r25, 0x01	; 1
     48c:	9c 87       	std	Y+12, r25	; 0x0c
     48e:	8b 87       	std	Y+11, r24	; 0x0b

00000490 <.LBB60>:
     490:	8b 85       	ldd	r24, Y+11	; 0x0b
     492:	9c 85       	ldd	r25, Y+12	; 0x0c

00000494 <.L1^B3>:
     494:	01 97       	sbiw	r24, 0x01	; 1
     496:	f1 f7       	brne	.-4      	; 0x494 <.L1^B3>
     498:	9c 87       	std	Y+12, r25	; 0x0c
     49a:	8b 87       	std	Y+11, r24	; 0x0b

0000049c <.Loc.52>:
	...

0000049e <.LBE60>:
			__ticks --;
     49e:	89 85       	ldd	r24, Y+9	; 0x09
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	01 97       	sbiw	r24, 0x01	; 1
     4a4:	9a 87       	std	Y+10, r25	; 0x0a
     4a6:	89 87       	std	Y+9, r24	; 0x09

000004a8 <.L26>:
		while(__ticks)
     4a8:	89 85       	ldd	r24, Y+9	; 0x09
     4aa:	9a 85       	ldd	r25, Y+10	; 0x0a
     4ac:	00 97       	sbiw	r24, 0x00	; 0
     4ae:	61 f7       	brne	.-40     	; 0x488 <.L27>

000004b0 <.Loc.55>:
		return;
     4b0:	19 c0       	rjmp	.+50     	; 0x4e4 <.L28>

000004b2 <.L35>:
		__ticks = (uint16_t)__tmp;
     4b2:	6d 81       	ldd	r22, Y+5	; 0x05
     4b4:	7e 81       	ldd	r23, Y+6	; 0x06
     4b6:	8f 81       	ldd	r24, Y+7	; 0x07
     4b8:	98 85       	ldd	r25, Y+8	; 0x08
     4ba:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__fixunssfsi>
     4be:	6f 8f       	std	Y+31, r22	; 0x1f
     4c0:	78 a3       	std	Y+32, r23	; 0x20
     4c2:	89 a3       	std	Y+33, r24	; 0x21
     4c4:	9a a3       	std	Y+34, r25	; 0x22
     4c6:	8f 8d       	ldd	r24, Y+31	; 0x1f
     4c8:	98 a1       	ldd	r25, Y+32	; 0x20
     4ca:	9a 87       	std	Y+10, r25	; 0x0a
     4cc:	89 87       	std	Y+9, r24	; 0x09

000004ce <.L23>:
     4ce:	89 85       	ldd	r24, Y+9	; 0x09
     4d0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4d2:	9e 87       	std	Y+14, r25	; 0x0e
     4d4:	8d 87       	std	Y+13, r24	; 0x0d

000004d6 <.LBB62>:
     4d6:	8d 85       	ldd	r24, Y+13	; 0x0d
     4d8:	9e 85       	ldd	r25, Y+14	; 0x0e

000004da <.L1^B4>:
     4da:	01 97       	sbiw	r24, 0x01	; 1
     4dc:	f1 f7       	brne	.-4      	; 0x4da <.L1^B4>
     4de:	9e 87       	std	Y+14, r25	; 0x0e
     4e0:	8d 87       	std	Y+13, r24	; 0x0d

000004e2 <.Loc.58>:
	...

000004e4 <.L28>:
    _delay_ms(40);
    teller = 0;
     4e4:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <teller+0x1>
     4e8:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <teller>

000004ec <.Loc.60>:
    if (plantTeller > 3 && plantTeller < 31)
     4ec:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <plantTeller>
     4f0:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <plantTeller+0x1>

000004f4 <.Loc.61>:
     4f4:	83 30       	cpi	r24, 0x03	; 3
     4f6:	91 05       	cpc	r25, r1
     4f8:	79 f0       	breq	.+30     	; 0x518 <.L29>
     4fa:	74 f0       	brlt	.+28     	; 0x518 <.L29>

000004fc <.Loc.62>:
     4fc:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <plantTeller>
     500:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <plantTeller+0x1>

00000504 <.Loc.63>:
     504:	8e 31       	cpi	r24, 0x1E	; 30
     506:	91 05       	cpc	r25, r1
     508:	09 f0       	breq	.+2      	; 0x50c <.Loc.64>

0000050a <L0^A>:
     50a:	34 f4       	brge	.+12     	; 0x518 <.L29>

0000050c <.Loc.64>:
    {
        state = 2;  //Rechtdoor rijden
     50c:	82 e0       	ldi	r24, 0x02	; 2
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     514:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000518 <.L29>:
    }
    if (plantTeller==15)
     518:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <plantTeller>
     51c:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <plantTeller+0x1>

00000520 <.Loc.66>:
     520:	8f 30       	cpi	r24, 0x0F	; 15
     522:	91 05       	cpc	r25, r1
     524:	31 f4       	brne	.+12     	; 0x532 <.L30>

00000526 <.Loc.67>:
    {
        state = 4;  //Bocht rechtsom
     526:	84 e0       	ldi	r24, 0x04	; 4
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     52e:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000532 <.L30>:
    }
    if (plantTeller == 31)
     532:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <plantTeller>
     536:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <plantTeller+0x1>

0000053a <.Loc.69>:
     53a:	8f 31       	cpi	r24, 0x1F	; 31
     53c:	91 05       	cpc	r25, r1
     53e:	31 f4       	brne	.+12     	; 0x54c <.L36>

00000540 <.Loc.70>:
    {
        state = 99;
     540:	83 e6       	ldi	r24, 0x63	; 99
     542:	90 e0       	ldi	r25, 0x00	; 0
     544:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     548:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

0000054c <.L36>:
    }
}
     54c:	00 00       	nop
     54e:	a2 96       	adiw	r28, 0x22	; 34
     550:	0f b6       	in	r0, 0x3f	; 63
     552:	f8 94       	cli
     554:	de bf       	out	0x3e, r29	; 62
     556:	0f be       	out	0x3f, r0	; 63
     558:	cd bf       	out	0x3d, r28	; 61
     55a:	df 91       	pop	r29
     55c:	cf 91       	pop	r28
     55e:	ff 91       	pop	r31
     560:	ef 91       	pop	r30
     562:	bf 91       	pop	r27
     564:	af 91       	pop	r26
     566:	9f 91       	pop	r25
     568:	8f 91       	pop	r24
     56a:	7f 91       	pop	r23
     56c:	6f 91       	pop	r22
     56e:	5f 91       	pop	r21
     570:	4f 91       	pop	r20
     572:	3f 91       	pop	r19
     574:	2f 91       	pop	r18
     576:	0f 90       	pop	r0
     578:	0b be       	out	0x3b, r0	; 59
     57a:	0f 90       	pop	r0
     57c:	0f be       	out	0x3f, r0	; 63
     57e:	0f 90       	pop	r0
     580:	1f 90       	pop	r1
     582:	18 95       	reti

00000584 <init>:

void init (void)
{
     584:	cf 93       	push	r28
     586:	df 93       	push	r29
     588:	cd b7       	in	r28, 0x3d	; 61
     58a:	de b7       	in	r29, 0x3e	; 62

0000058c <.Loc.73>:
    initTimer();
     58c:	0e 94 0c 03 	call	0x618	; 0x618 <initTimer>

00000590 <.Loc.74>:
    RotaryInit();
     590:	0e 94 6e 09 	call	0x12dc	; 0x12dc <RotaryInit>

00000594 <.Loc.75>:
    init_Interrupt();
     594:	0e 94 95 00 	call	0x12a	; 0x12a <init_Interrupt>

00000598 <.Loc.76>:
    init_MotorLinks();
     598:	0e 94 8a 08 	call	0x1114	; 0x1114 <init_MotorLinks>

0000059c <.Loc.77>:
    init_MotorRechts();
     59c:	0e 94 2e 09 	call	0x125c	; 0x125c <init_MotorRechts>

000005a0 <.Loc.78>:

    Timer1_Start();
     5a0:	0e 94 ba 09 	call	0x1374	; 0x1374 <Timer1_Start>

000005a4 <.Loc.79>:

    DDRB |= (1<<PB6);       // LED pin output
     5a4:	84 e2       	ldi	r24, 0x24	; 36
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	fc 01       	movw	r30, r24
     5aa:	20 81       	ld	r18, Z
     5ac:	84 e2       	ldi	r24, 0x24	; 36
     5ae:	90 e0       	ldi	r25, 0x00	; 0

000005b0 <.Loc.80>:
     5b0:	20 64       	ori	r18, 0x40	; 64
     5b2:	fc 01       	movw	r30, r24
     5b4:	20 83       	st	Z, r18

000005b6 <.Loc.81>:
    DDRB |= (1<<PB5);       // LED pin output
     5b6:	84 e2       	ldi	r24, 0x24	; 36
     5b8:	90 e0       	ldi	r25, 0x00	; 0
     5ba:	fc 01       	movw	r30, r24
     5bc:	20 81       	ld	r18, Z
     5be:	84 e2       	ldi	r24, 0x24	; 36
     5c0:	90 e0       	ldi	r25, 0x00	; 0

000005c2 <.Loc.82>:
     5c2:	20 62       	ori	r18, 0x20	; 32
     5c4:	fc 01       	movw	r30, r24
     5c6:	20 83       	st	Z, r18

000005c8 <.Loc.83>:
    DDRB |= (1<<PB3);       // LED pin output
     5c8:	84 e2       	ldi	r24, 0x24	; 36
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	fc 01       	movw	r30, r24
     5ce:	20 81       	ld	r18, Z
     5d0:	84 e2       	ldi	r24, 0x24	; 36
     5d2:	90 e0       	ldi	r25, 0x00	; 0

000005d4 <.Loc.84>:
     5d4:	28 60       	ori	r18, 0x08	; 8
     5d6:	fc 01       	movw	r30, r24
     5d8:	20 83       	st	Z, r18

000005da <.Loc.85>:

    PORTB |= (1<<PB6);      // LED off
     5da:	85 e2       	ldi	r24, 0x25	; 37
     5dc:	90 e0       	ldi	r25, 0x00	; 0
     5de:	fc 01       	movw	r30, r24
     5e0:	20 81       	ld	r18, Z
     5e2:	85 e2       	ldi	r24, 0x25	; 37
     5e4:	90 e0       	ldi	r25, 0x00	; 0

000005e6 <.Loc.86>:
     5e6:	20 64       	ori	r18, 0x40	; 64
     5e8:	fc 01       	movw	r30, r24
     5ea:	20 83       	st	Z, r18

000005ec <.Loc.87>:
    PORTB |= (1<<PB5);      // LED off
     5ec:	85 e2       	ldi	r24, 0x25	; 37
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	fc 01       	movw	r30, r24
     5f2:	20 81       	ld	r18, Z
     5f4:	85 e2       	ldi	r24, 0x25	; 37
     5f6:	90 e0       	ldi	r25, 0x00	; 0

000005f8 <.Loc.88>:
     5f8:	20 62       	ori	r18, 0x20	; 32
     5fa:	fc 01       	movw	r30, r24
     5fc:	20 83       	st	Z, r18

000005fe <.Loc.89>:
    waarschuwLampjes_UIT;
     5fe:	85 e2       	ldi	r24, 0x25	; 37
     600:	90 e0       	ldi	r25, 0x00	; 0
     602:	fc 01       	movw	r30, r24
     604:	20 81       	ld	r18, Z
     606:	85 e2       	ldi	r24, 0x25	; 37
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	27 7f       	andi	r18, 0xF7	; 247
     60c:	fc 01       	movw	r30, r24
     60e:	20 83       	st	Z, r18

00000610 <.Loc.90>:
}
     610:	00 00       	nop
     612:	df 91       	pop	r29
     614:	cf 91       	pop	r28
     616:	08 95       	ret

00000618 <initTimer>:

void initTimer (void)
{
     618:	cf 93       	push	r28
     61a:	df 93       	push	r29
     61c:	cd b7       	in	r28, 0x3d	; 61
     61e:	de b7       	in	r29, 0x3e	; 62

00000620 <.Loc.92>:
    // Timer 5 is de systeemtimer (overflow)
    TCCR5A = 0;
     620:	80 e2       	ldi	r24, 0x20	; 32
     622:	91 e0       	ldi	r25, 0x01	; 1

00000624 <.Loc.93>:
     624:	fc 01       	movw	r30, r24
     626:	10 82       	st	Z, r1

00000628 <.Loc.94>:
    // Timer 8 kan niet ver genoeg tellen!
    // 8 bit timer 16000000 Hz / 64 / 256 = 976.56 Hz
    // 16 bit timer 16000000 Hz / 64 / 65.536 = 3.906,25 Hz
    // 16 bit timer 16000000 Hz / 65.536 = 244 Hz
    // start timer 0, prescaler = 64
    TCCR5B = TCCR5B | (0 << CS51) | (1 << CS50); //244,14 Hz
     628:	81 e2       	ldi	r24, 0x21	; 33
     62a:	91 e0       	ldi	r25, 0x01	; 1
     62c:	fc 01       	movw	r30, r24
     62e:	20 81       	ld	r18, Z

00000630 <.Loc.95>:
     630:	81 e2       	ldi	r24, 0x21	; 33
     632:	91 e0       	ldi	r25, 0x01	; 1

00000634 <.Loc.96>:
     634:	21 60       	ori	r18, 0x01	; 1
     636:	fc 01       	movw	r30, r24
     638:	20 83       	st	Z, r18

0000063a <.Loc.97>:
}
     63a:	00 00       	nop
     63c:	df 91       	pop	r29
     63e:	cf 91       	pop	r28
     640:	08 95       	ret

00000642 <main>:

int main(void)
{
     642:	cf 93       	push	r28
     644:	df 93       	push	r29
     646:	cd b7       	in	r28, 0x3d	; 61
     648:	de b7       	in	r29, 0x3e	; 62
     64a:	c2 57       	subi	r28, 0x72	; 114
     64c:	d1 09       	sbc	r29, r1
     64e:	0f b6       	in	r0, 0x3f	; 63
     650:	f8 94       	cli
     652:	de bf       	out	0x3e, r29	; 62
     654:	0f be       	out	0x3f, r0	; 63
     656:	cd bf       	out	0x3d, r28	; 61

00000658 <.Loc.99>:
    init();
     658:	0e 94 c2 02 	call	0x584	; 0x584 <init>

0000065c <.Loc.100>:
    int timer = 0;
     65c:	18 86       	std	Y+8, r1	; 0x08
     65e:	1f 82       	std	Y+7, r1	; 0x07

00000660 <.Loc.101>:
    int knopje_1 = 1;
     660:	81 e0       	ldi	r24, 0x01	; 1
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	9a 87       	std	Y+10, r25	; 0x0a
     666:	89 87       	std	Y+9, r24	; 0x09

00000668 <.Loc.102>:

    int rotary_1 = 0;
     668:	1a 82       	std	Y+2, r1	; 0x02
     66a:	19 82       	std	Y+1, r1	; 0x01

0000066c <.Loc.103>:
    int waarde_rot_1 = 50;
     66c:	82 e3       	ldi	r24, 0x32	; 50
     66e:	90 e0       	ldi	r25, 0x00	; 0
     670:	9c 83       	std	Y+4, r25	; 0x04
     672:	8b 83       	std	Y+3, r24	; 0x03

00000674 <.Loc.104>:
    int waarde_rot_2 = 50;
     674:	82 e3       	ldi	r24, 0x32	; 50
     676:	90 e0       	ldi	r25, 0x00	; 0
     678:	9c 87       	std	Y+12, r25	; 0x0c
     67a:	8b 87       	std	Y+11, r24	; 0x0b

0000067c <.Loc.105>:
    int knopIngedrukt = 0;
     67c:	1e 82       	std	Y+6, r1	; 0x06
     67e:	1d 82       	std	Y+5, r1	; 0x05

00000680 <.L85>:
            State == 3: Bocht Links maken
            State == 4: Bocht Recht smaken
    */
    while(1)
    {
        if (startKnopNietGedrukt)
     680:	80 e2       	ldi	r24, 0x20	; 32
     682:	90 e0       	ldi	r25, 0x00	; 0
     684:	dc 01       	movw	r26, r24
     686:	8c 91       	ld	r24, X
     688:	88 2f       	mov	r24, r24
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	80 74       	andi	r24, 0x40	; 64
     68e:	99 27       	eor	r25, r25

00000690 <.Loc.107>:
     690:	00 97       	sbiw	r24, 0x00	; 0
     692:	09 f0       	breq	.+2      	; 0x696 <.Loc.108>

00000694 <L0^A>:
     694:	a9 c0       	rjmp	.+338    	; 0x7e8 <.L40>

00000696 <.Loc.108>:
        {
            if (knopIngedrukt == 0)
     696:	8d 81       	ldd	r24, Y+5	; 0x05
     698:	9e 81       	ldd	r25, Y+6	; 0x06
     69a:	00 97       	sbiw	r24, 0x00	; 0
     69c:	09 f0       	breq	.+2      	; 0x6a0 <L0^A+0x2>

0000069e <L0^A>:
     69e:	a4 c0       	rjmp	.+328    	; 0x7e8 <.L40>
     6a0:	80 e0       	ldi	r24, 0x00	; 0
     6a2:	90 e0       	ldi	r25, 0x00	; 0
     6a4:	a0 ea       	ldi	r26, 0xA0	; 160
     6a6:	b1 e4       	ldi	r27, 0x41	; 65
     6a8:	8d 87       	std	Y+13, r24	; 0x0d
     6aa:	9e 87       	std	Y+14, r25	; 0x0e
     6ac:	af 87       	std	Y+15, r26	; 0x0f
     6ae:	b8 8b       	std	Y+16, r27	; 0x10

000006b0 <.LBB64>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     6b0:	20 e0       	ldi	r18, 0x00	; 0
     6b2:	30 e0       	ldi	r19, 0x00	; 0
     6b4:	4a e7       	ldi	r20, 0x7A	; 122
     6b6:	55 e4       	ldi	r21, 0x45	; 69
     6b8:	6d 85       	ldd	r22, Y+13	; 0x0d
     6ba:	7e 85       	ldd	r23, Y+14	; 0x0e
     6bc:	8f 85       	ldd	r24, Y+15	; 0x0f
     6be:	98 89       	ldd	r25, Y+16	; 0x10
     6c0:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__mulsf3>
     6c4:	27 96       	adiw	r28, 0x07	; 7
     6c6:	6c af       	std	Y+60, r22	; 0x3c
     6c8:	7d af       	std	Y+61, r23	; 0x3d
     6ca:	8e af       	std	Y+62, r24	; 0x3e
     6cc:	9f af       	std	Y+63, r25	; 0x3f
     6ce:	27 97       	sbiw	r28, 0x07	; 7
     6d0:	27 96       	adiw	r28, 0x07	; 7
     6d2:	8c ad       	ldd	r24, Y+60	; 0x3c
     6d4:	9d ad       	ldd	r25, Y+61	; 0x3d
     6d6:	ae ad       	ldd	r26, Y+62	; 0x3e
     6d8:	bf ad       	ldd	r27, Y+63	; 0x3f
     6da:	27 97       	sbiw	r28, 0x07	; 7
     6dc:	89 8b       	std	Y+17, r24	; 0x11
     6de:	9a 8b       	std	Y+18, r25	; 0x12
     6e0:	ab 8b       	std	Y+19, r26	; 0x13
     6e2:	bc 8b       	std	Y+20, r27	; 0x14

000006e4 <.Loc.110>:
	if (__tmp < 1.0)
     6e4:	20 e0       	ldi	r18, 0x00	; 0
     6e6:	30 e0       	ldi	r19, 0x00	; 0
     6e8:	40 e8       	ldi	r20, 0x80	; 128
     6ea:	5f e3       	ldi	r21, 0x3F	; 63
     6ec:	69 89       	ldd	r22, Y+17	; 0x11
     6ee:	7a 89       	ldd	r23, Y+18	; 0x12
     6f0:	8b 89       	ldd	r24, Y+19	; 0x13
     6f2:	9c 89       	ldd	r25, Y+20	; 0x14
     6f4:	0e 94 15 0a 	call	0x142a	; 0x142a <__cmpsf2>
     6f8:	88 23       	and	r24, r24
     6fa:	2c f4       	brge	.+10     	; 0x706 <.L92>

000006fc <.Loc.111>:
		__ticks = 1;
     6fc:	81 e0       	ldi	r24, 0x01	; 1
     6fe:	90 e0       	ldi	r25, 0x00	; 0
     700:	9e 8b       	std	Y+22, r25	; 0x16
     702:	8d 8b       	std	Y+21, r24	; 0x15
     704:	62 c0       	rjmp	.+196    	; 0x7ca <.L43>

00000706 <.L92>:
	else if (__tmp > 65535)
     706:	20 e0       	ldi	r18, 0x00	; 0
     708:	3f ef       	ldi	r19, 0xFF	; 255
     70a:	4f e7       	ldi	r20, 0x7F	; 127
     70c:	57 e4       	ldi	r21, 0x47	; 71
     70e:	69 89       	ldd	r22, Y+17	; 0x11
     710:	7a 89       	ldd	r23, Y+18	; 0x12
     712:	8b 89       	ldd	r24, Y+19	; 0x13
     714:	9c 89       	ldd	r25, Y+20	; 0x14
     716:	0e 94 96 0a 	call	0x152c	; 0x152c <__gesf2>
     71a:	88 23       	and	r24, r24
     71c:	09 f0       	breq	.+2      	; 0x720 <L0^A>

0000071e <L0^A>:
     71e:	0c f4       	brge	.+2      	; 0x722 <.Loc.113>

00000720 <L0^A>:
     720:	42 c0       	rjmp	.+132    	; 0x7a6 <.L93>

00000722 <.Loc.113>:
		__ticks = (uint16_t) (__ms * 10.0);
     722:	20 e0       	ldi	r18, 0x00	; 0
     724:	30 e0       	ldi	r19, 0x00	; 0
     726:	40 e2       	ldi	r20, 0x20	; 32
     728:	51 e4       	ldi	r21, 0x41	; 65
     72a:	6d 85       	ldd	r22, Y+13	; 0x0d
     72c:	7e 85       	ldd	r23, Y+14	; 0x0e
     72e:	8f 85       	ldd	r24, Y+15	; 0x0f
     730:	98 89       	ldd	r25, Y+16	; 0x10
     732:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__mulsf3>
     736:	2b 96       	adiw	r28, 0x0b	; 11
     738:	6c af       	std	Y+60, r22	; 0x3c
     73a:	7d af       	std	Y+61, r23	; 0x3d
     73c:	8e af       	std	Y+62, r24	; 0x3e
     73e:	9f af       	std	Y+63, r25	; 0x3f
     740:	2b 97       	sbiw	r28, 0x0b	; 11
     742:	2b 96       	adiw	r28, 0x0b	; 11
     744:	8c ad       	ldd	r24, Y+60	; 0x3c
     746:	9d ad       	ldd	r25, Y+61	; 0x3d
     748:	ae ad       	ldd	r26, Y+62	; 0x3e
     74a:	bf ad       	ldd	r27, Y+63	; 0x3f
     74c:	2b 97       	sbiw	r28, 0x0b	; 11
     74e:	8f ab       	std	Y+55, r24	; 0x37
     750:	98 af       	std	Y+56, r25	; 0x38
     752:	a9 af       	std	Y+57, r26	; 0x39
     754:	ba af       	std	Y+58, r27	; 0x3a

00000756 <.Loc.114>:
     756:	6f a9       	ldd	r22, Y+55	; 0x37
     758:	78 ad       	ldd	r23, Y+56	; 0x38
     75a:	89 ad       	ldd	r24, Y+57	; 0x39
     75c:	9a ad       	ldd	r25, Y+58	; 0x3a
     75e:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__fixunssfsi>
     762:	2f 96       	adiw	r28, 0x0f	; 15
     764:	6c af       	std	Y+60, r22	; 0x3c
     766:	7d af       	std	Y+61, r23	; 0x3d
     768:	8e af       	std	Y+62, r24	; 0x3e
     76a:	9f af       	std	Y+63, r25	; 0x3f
     76c:	2f 97       	sbiw	r28, 0x0f	; 15
     76e:	2d 96       	adiw	r28, 0x0d	; 13
     770:	ae ad       	ldd	r26, Y+62	; 0x3e
     772:	bf ad       	ldd	r27, Y+63	; 0x3f
     774:	2d 97       	sbiw	r28, 0x0d	; 13
     776:	be 8b       	std	Y+22, r27	; 0x16
     778:	ad 8b       	std	Y+21, r26	; 0x15

0000077a <.Loc.115>:
		while(__ticks)
     77a:	10 c0       	rjmp	.+32     	; 0x79c <.L46>

0000077c <.L47>:
     77c:	80 e9       	ldi	r24, 0x90	; 144
     77e:	91 e0       	ldi	r25, 0x01	; 1
     780:	98 8f       	std	Y+24, r25	; 0x18
     782:	8f 8b       	std	Y+23, r24	; 0x17

00000784 <.LBB66>:
     784:	8f 89       	ldd	r24, Y+23	; 0x17
     786:	98 8d       	ldd	r25, Y+24	; 0x18

00000788 <.L1^B5>:
     788:	01 97       	sbiw	r24, 0x01	; 1
     78a:	f1 f7       	brne	.-4      	; 0x788 <.L1^B5>
     78c:	98 8f       	std	Y+24, r25	; 0x18
     78e:	8f 8b       	std	Y+23, r24	; 0x17

00000790 <.Loc.117>:
	...

00000792 <.LBE66>:
			__ticks --;
     792:	8d 89       	ldd	r24, Y+21	; 0x15
     794:	9e 89       	ldd	r25, Y+22	; 0x16
     796:	01 97       	sbiw	r24, 0x01	; 1
     798:	9e 8b       	std	Y+22, r25	; 0x16
     79a:	8d 8b       	std	Y+21, r24	; 0x15

0000079c <.L46>:
		while(__ticks)
     79c:	8d 89       	ldd	r24, Y+21	; 0x15
     79e:	9e 89       	ldd	r25, Y+22	; 0x16
     7a0:	00 97       	sbiw	r24, 0x00	; 0
     7a2:	61 f7       	brne	.-40     	; 0x77c <.L47>

000007a4 <.Loc.120>:
		return;
     7a4:	1d c0       	rjmp	.+58     	; 0x7e0 <.L48>

000007a6 <.L93>:
		__ticks = (uint16_t)__tmp;
     7a6:	69 89       	ldd	r22, Y+17	; 0x11
     7a8:	7a 89       	ldd	r23, Y+18	; 0x12
     7aa:	8b 89       	ldd	r24, Y+19	; 0x13
     7ac:	9c 89       	ldd	r25, Y+20	; 0x14
     7ae:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__fixunssfsi>
     7b2:	63 96       	adiw	r28, 0x13	; 19
     7b4:	6c af       	std	Y+60, r22	; 0x3c
     7b6:	7d af       	std	Y+61, r23	; 0x3d
     7b8:	8e af       	std	Y+62, r24	; 0x3e
     7ba:	9f af       	std	Y+63, r25	; 0x3f
     7bc:	63 97       	sbiw	r28, 0x13	; 19
     7be:	61 96       	adiw	r28, 0x11	; 17
     7c0:	ee ad       	ldd	r30, Y+62	; 0x3e
     7c2:	ff ad       	ldd	r31, Y+63	; 0x3f
     7c4:	61 97       	sbiw	r28, 0x11	; 17
     7c6:	fe 8b       	std	Y+22, r31	; 0x16
     7c8:	ed 8b       	std	Y+21, r30	; 0x15

000007ca <.L43>:
     7ca:	8d 89       	ldd	r24, Y+21	; 0x15
     7cc:	9e 89       	ldd	r25, Y+22	; 0x16
     7ce:	9a 8f       	std	Y+26, r25	; 0x1a
     7d0:	89 8f       	std	Y+25, r24	; 0x19

000007d2 <.LBB68>:
     7d2:	89 8d       	ldd	r24, Y+25	; 0x19
     7d4:	9a 8d       	ldd	r25, Y+26	; 0x1a

000007d6 <.L1^B6>:
     7d6:	01 97       	sbiw	r24, 0x01	; 1
     7d8:	f1 f7       	brne	.-4      	; 0x7d6 <.L1^B6>
     7da:	9a 8f       	std	Y+26, r25	; 0x1a
     7dc:	89 8f       	std	Y+25, r24	; 0x19

000007de <.Loc.123>:
	...

000007e0 <.L48>:
            {
                _delay_ms(20);
                knopIngedrukt = 1;
     7e0:	81 e0       	ldi	r24, 0x01	; 1
     7e2:	90 e0       	ldi	r25, 0x00	; 0
     7e4:	9e 83       	std	Y+6, r25	; 0x06
     7e6:	8d 83       	std	Y+5, r24	; 0x05

000007e8 <.L40>:
            }
        }
        if (startKnopIngedrukt)
     7e8:	80 e2       	ldi	r24, 0x20	; 32
     7ea:	90 e0       	ldi	r25, 0x00	; 0
     7ec:	dc 01       	movw	r26, r24
     7ee:	8c 91       	ld	r24, X
     7f0:	88 2f       	mov	r24, r24
     7f2:	90 e0       	ldi	r25, 0x00	; 0
     7f4:	80 74       	andi	r24, 0x40	; 64
     7f6:	99 27       	eor	r25, r25

000007f8 <.Loc.126>:
     7f8:	00 97       	sbiw	r24, 0x00	; 0
     7fa:	09 f4       	brne	.+2      	; 0x7fe <.Loc.127>

000007fc <L0^A>:
     7fc:	64 c1       	rjmp	.+712    	; 0xac6 <.L49>

000007fe <.Loc.127>:
        {
            if (knopIngedrukt == 1)
     7fe:	8d 81       	ldd	r24, Y+5	; 0x05
     800:	9e 81       	ldd	r25, Y+6	; 0x06
     802:	81 30       	cpi	r24, 0x01	; 1
     804:	91 05       	cpc	r25, r1
     806:	09 f0       	breq	.+2      	; 0x80a <L0^A+0x2>

00000808 <L0^A>:
     808:	5e c1       	rjmp	.+700    	; 0xac6 <.L49>
     80a:	80 e0       	ldi	r24, 0x00	; 0
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	a0 ea       	ldi	r26, 0xA0	; 160
     810:	b1 e4       	ldi	r27, 0x41	; 65
     812:	89 a7       	std	Y+41, r24	; 0x29
     814:	9a a7       	std	Y+42, r25	; 0x2a
     816:	ab a7       	std	Y+43, r26	; 0x2b
     818:	bc a7       	std	Y+44, r27	; 0x2c

0000081a <.LBB70>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     81a:	20 e0       	ldi	r18, 0x00	; 0
     81c:	30 e0       	ldi	r19, 0x00	; 0
     81e:	4a e7       	ldi	r20, 0x7A	; 122
     820:	55 e4       	ldi	r21, 0x45	; 69
     822:	69 a5       	ldd	r22, Y+41	; 0x29
     824:	7a a5       	ldd	r23, Y+42	; 0x2a
     826:	8b a5       	ldd	r24, Y+43	; 0x2b
     828:	9c a5       	ldd	r25, Y+44	; 0x2c
     82a:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__mulsf3>
     82e:	67 96       	adiw	r28, 0x17	; 23
     830:	6c af       	std	Y+60, r22	; 0x3c
     832:	7d af       	std	Y+61, r23	; 0x3d
     834:	8e af       	std	Y+62, r24	; 0x3e
     836:	9f af       	std	Y+63, r25	; 0x3f
     838:	67 97       	sbiw	r28, 0x17	; 23
     83a:	67 96       	adiw	r28, 0x17	; 23
     83c:	8c ad       	ldd	r24, Y+60	; 0x3c
     83e:	9d ad       	ldd	r25, Y+61	; 0x3d
     840:	ae ad       	ldd	r26, Y+62	; 0x3e
     842:	bf ad       	ldd	r27, Y+63	; 0x3f
     844:	67 97       	sbiw	r28, 0x17	; 23
     846:	8d a7       	std	Y+45, r24	; 0x2d
     848:	9e a7       	std	Y+46, r25	; 0x2e
     84a:	af a7       	std	Y+47, r26	; 0x2f
     84c:	b8 ab       	std	Y+48, r27	; 0x30

0000084e <.Loc.129>:
	if (__tmp < 1.0)
     84e:	20 e0       	ldi	r18, 0x00	; 0
     850:	30 e0       	ldi	r19, 0x00	; 0
     852:	40 e8       	ldi	r20, 0x80	; 128
     854:	5f e3       	ldi	r21, 0x3F	; 63
     856:	6d a5       	ldd	r22, Y+45	; 0x2d
     858:	7e a5       	ldd	r23, Y+46	; 0x2e
     85a:	8f a5       	ldd	r24, Y+47	; 0x2f
     85c:	98 a9       	ldd	r25, Y+48	; 0x30
     85e:	0e 94 15 0a 	call	0x142a	; 0x142a <__cmpsf2>
     862:	88 23       	and	r24, r24
     864:	2c f4       	brge	.+10     	; 0x870 <.L94>

00000866 <.Loc.130>:
		__ticks = 1;
     866:	81 e0       	ldi	r24, 0x01	; 1
     868:	90 e0       	ldi	r25, 0x00	; 0
     86a:	9a ab       	std	Y+50, r25	; 0x32
     86c:	89 ab       	std	Y+49, r24	; 0x31
     86e:	66 c0       	rjmp	.+204    	; 0x93c <.L52>

00000870 <.L94>:
	else if (__tmp > 65535)
     870:	20 e0       	ldi	r18, 0x00	; 0
     872:	3f ef       	ldi	r19, 0xFF	; 255
     874:	4f e7       	ldi	r20, 0x7F	; 127
     876:	57 e4       	ldi	r21, 0x47	; 71
     878:	6d a5       	ldd	r22, Y+45	; 0x2d
     87a:	7e a5       	ldd	r23, Y+46	; 0x2e
     87c:	8f a5       	ldd	r24, Y+47	; 0x2f
     87e:	98 a9       	ldd	r25, Y+48	; 0x30
     880:	0e 94 96 0a 	call	0x152c	; 0x152c <__gesf2>
     884:	88 23       	and	r24, r24
     886:	09 f0       	breq	.+2      	; 0x88a <L0^A>

00000888 <L0^A>:
     888:	0c f4       	brge	.+2      	; 0x88c <.Loc.132>

0000088a <L0^A>:
     88a:	46 c0       	rjmp	.+140    	; 0x918 <.L95>

0000088c <.Loc.132>:
		__ticks = (uint16_t) (__ms * 10.0);
     88c:	20 e0       	ldi	r18, 0x00	; 0
     88e:	30 e0       	ldi	r19, 0x00	; 0
     890:	40 e2       	ldi	r20, 0x20	; 32
     892:	51 e4       	ldi	r21, 0x41	; 65
     894:	69 a5       	ldd	r22, Y+41	; 0x29
     896:	7a a5       	ldd	r23, Y+42	; 0x2a
     898:	8b a5       	ldd	r24, Y+43	; 0x2b
     89a:	9c a5       	ldd	r25, Y+44	; 0x2c
     89c:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__mulsf3>
     8a0:	6b 96       	adiw	r28, 0x1b	; 27
     8a2:	6c af       	std	Y+60, r22	; 0x3c
     8a4:	7d af       	std	Y+61, r23	; 0x3d
     8a6:	8e af       	std	Y+62, r24	; 0x3e
     8a8:	9f af       	std	Y+63, r25	; 0x3f
     8aa:	6b 97       	sbiw	r28, 0x1b	; 27
     8ac:	6b 96       	adiw	r28, 0x1b	; 27
     8ae:	8c ad       	ldd	r24, Y+60	; 0x3c
     8b0:	9d ad       	ldd	r25, Y+61	; 0x3d
     8b2:	ae ad       	ldd	r26, Y+62	; 0x3e
     8b4:	bf ad       	ldd	r27, Y+63	; 0x3f
     8b6:	6b 97       	sbiw	r28, 0x1b	; 27
     8b8:	23 96       	adiw	r28, 0x03	; 3
     8ba:	8c af       	std	Y+60, r24	; 0x3c
     8bc:	9d af       	std	Y+61, r25	; 0x3d
     8be:	ae af       	std	Y+62, r26	; 0x3e
     8c0:	bf af       	std	Y+63, r27	; 0x3f
     8c2:	23 97       	sbiw	r28, 0x03	; 3

000008c4 <.Loc.133>:
     8c4:	23 96       	adiw	r28, 0x03	; 3
     8c6:	6c ad       	ldd	r22, Y+60	; 0x3c
     8c8:	7d ad       	ldd	r23, Y+61	; 0x3d
     8ca:	8e ad       	ldd	r24, Y+62	; 0x3e
     8cc:	9f ad       	ldd	r25, Y+63	; 0x3f
     8ce:	23 97       	sbiw	r28, 0x03	; 3
     8d0:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__fixunssfsi>
     8d4:	6f 96       	adiw	r28, 0x1f	; 31
     8d6:	6c af       	std	Y+60, r22	; 0x3c
     8d8:	7d af       	std	Y+61, r23	; 0x3d
     8da:	8e af       	std	Y+62, r24	; 0x3e
     8dc:	9f af       	std	Y+63, r25	; 0x3f
     8de:	6f 97       	sbiw	r28, 0x1f	; 31
     8e0:	6d 96       	adiw	r28, 0x1d	; 29
     8e2:	ae ad       	ldd	r26, Y+62	; 0x3e
     8e4:	bf ad       	ldd	r27, Y+63	; 0x3f
     8e6:	6d 97       	sbiw	r28, 0x1d	; 29
     8e8:	ba ab       	std	Y+50, r27	; 0x32
     8ea:	a9 ab       	std	Y+49, r26	; 0x31

000008ec <.Loc.134>:
		while(__ticks)
     8ec:	10 c0       	rjmp	.+32     	; 0x90e <.L55>

000008ee <.L56>:
     8ee:	80 e9       	ldi	r24, 0x90	; 144
     8f0:	91 e0       	ldi	r25, 0x01	; 1
     8f2:	9c ab       	std	Y+52, r25	; 0x34
     8f4:	8b ab       	std	Y+51, r24	; 0x33

000008f6 <.LBB72>:
     8f6:	8b a9       	ldd	r24, Y+51	; 0x33
     8f8:	9c a9       	ldd	r25, Y+52	; 0x34

000008fa <.L1^B7>:
     8fa:	01 97       	sbiw	r24, 0x01	; 1
     8fc:	f1 f7       	brne	.-4      	; 0x8fa <.L1^B7>
     8fe:	9c ab       	std	Y+52, r25	; 0x34
     900:	8b ab       	std	Y+51, r24	; 0x33

00000902 <.Loc.136>:
	...

00000904 <.LBE72>:
			__ticks --;
     904:	89 a9       	ldd	r24, Y+49	; 0x31
     906:	9a a9       	ldd	r25, Y+50	; 0x32
     908:	01 97       	sbiw	r24, 0x01	; 1
     90a:	9a ab       	std	Y+50, r25	; 0x32
     90c:	89 ab       	std	Y+49, r24	; 0x31

0000090e <.L55>:
		while(__ticks)
     90e:	89 a9       	ldd	r24, Y+49	; 0x31
     910:	9a a9       	ldd	r25, Y+50	; 0x32
     912:	00 97       	sbiw	r24, 0x00	; 0
     914:	61 f7       	brne	.-40     	; 0x8ee <.L56>

00000916 <.Loc.139>:
		return;
     916:	1d c0       	rjmp	.+58     	; 0x952 <.L57>

00000918 <.L95>:
		__ticks = (uint16_t)__tmp;
     918:	6d a5       	ldd	r22, Y+45	; 0x2d
     91a:	7e a5       	ldd	r23, Y+46	; 0x2e
     91c:	8f a5       	ldd	r24, Y+47	; 0x2f
     91e:	98 a9       	ldd	r25, Y+48	; 0x30
     920:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__fixunssfsi>
     924:	a3 96       	adiw	r28, 0x23	; 35
     926:	6c af       	std	Y+60, r22	; 0x3c
     928:	7d af       	std	Y+61, r23	; 0x3d
     92a:	8e af       	std	Y+62, r24	; 0x3e
     92c:	9f af       	std	Y+63, r25	; 0x3f
     92e:	a3 97       	sbiw	r28, 0x23	; 35
     930:	a1 96       	adiw	r28, 0x21	; 33
     932:	ee ad       	ldd	r30, Y+62	; 0x3e
     934:	ff ad       	ldd	r31, Y+63	; 0x3f
     936:	a1 97       	sbiw	r28, 0x21	; 33
     938:	fa ab       	std	Y+50, r31	; 0x32
     93a:	e9 ab       	std	Y+49, r30	; 0x31

0000093c <.L52>:
     93c:	89 a9       	ldd	r24, Y+49	; 0x31
     93e:	9a a9       	ldd	r25, Y+50	; 0x32
     940:	9e ab       	std	Y+54, r25	; 0x36
     942:	8d ab       	std	Y+53, r24	; 0x35

00000944 <.LBB74>:
     944:	8d a9       	ldd	r24, Y+53	; 0x35
     946:	9e a9       	ldd	r25, Y+54	; 0x36

00000948 <.L1^B8>:
     948:	01 97       	sbiw	r24, 0x01	; 1
     94a:	f1 f7       	brne	.-4      	; 0x948 <.L1^B8>
     94c:	9e ab       	std	Y+54, r25	; 0x36
     94e:	8d ab       	std	Y+53, r24	; 0x35

00000950 <.Loc.142>:
	...

00000952 <.L57>:
            {
                _delay_ms(20);
                waarschuwLampjes_AAN;
     952:	85 e2       	ldi	r24, 0x25	; 37
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	dc 01       	movw	r26, r24
     958:	2c 91       	ld	r18, X
     95a:	85 e2       	ldi	r24, 0x25	; 37
     95c:	90 e0       	ldi	r25, 0x00	; 0
     95e:	28 60       	ori	r18, 0x08	; 8
     960:	fc 01       	movw	r30, r24
     962:	20 83       	st	Z, r18
     964:	80 e0       	ldi	r24, 0x00	; 0
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	aa ef       	ldi	r26, 0xFA	; 250
     96a:	b4 e4       	ldi	r27, 0x44	; 68
     96c:	8b 8f       	std	Y+27, r24	; 0x1b
     96e:	9c 8f       	std	Y+28, r25	; 0x1c
     970:	ad 8f       	std	Y+29, r26	; 0x1d
     972:	be 8f       	std	Y+30, r27	; 0x1e

00000974 <.LBB76>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     974:	20 e0       	ldi	r18, 0x00	; 0
     976:	30 e0       	ldi	r19, 0x00	; 0
     978:	4a e7       	ldi	r20, 0x7A	; 122
     97a:	55 e4       	ldi	r21, 0x45	; 69
     97c:	6b 8d       	ldd	r22, Y+27	; 0x1b
     97e:	7c 8d       	ldd	r23, Y+28	; 0x1c
     980:	8d 8d       	ldd	r24, Y+29	; 0x1d
     982:	9e 8d       	ldd	r25, Y+30	; 0x1e
     984:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__mulsf3>
     988:	a7 96       	adiw	r28, 0x27	; 39
     98a:	6c af       	std	Y+60, r22	; 0x3c
     98c:	7d af       	std	Y+61, r23	; 0x3d
     98e:	8e af       	std	Y+62, r24	; 0x3e
     990:	9f af       	std	Y+63, r25	; 0x3f
     992:	a7 97       	sbiw	r28, 0x27	; 39
     994:	a7 96       	adiw	r28, 0x27	; 39
     996:	8c ad       	ldd	r24, Y+60	; 0x3c
     998:	9d ad       	ldd	r25, Y+61	; 0x3d
     99a:	ae ad       	ldd	r26, Y+62	; 0x3e
     99c:	bf ad       	ldd	r27, Y+63	; 0x3f
     99e:	a7 97       	sbiw	r28, 0x27	; 39
     9a0:	8f 8f       	std	Y+31, r24	; 0x1f
     9a2:	98 a3       	std	Y+32, r25	; 0x20
     9a4:	a9 a3       	std	Y+33, r26	; 0x21
     9a6:	ba a3       	std	Y+34, r27	; 0x22

000009a8 <.Loc.145>:
	if (__tmp < 1.0)
     9a8:	20 e0       	ldi	r18, 0x00	; 0
     9aa:	30 e0       	ldi	r19, 0x00	; 0
     9ac:	40 e8       	ldi	r20, 0x80	; 128
     9ae:	5f e3       	ldi	r21, 0x3F	; 63
     9b0:	6f 8d       	ldd	r22, Y+31	; 0x1f
     9b2:	78 a1       	ldd	r23, Y+32	; 0x20
     9b4:	89 a1       	ldd	r24, Y+33	; 0x21
     9b6:	9a a1       	ldd	r25, Y+34	; 0x22
     9b8:	0e 94 15 0a 	call	0x142a	; 0x142a <__cmpsf2>
     9bc:	88 23       	and	r24, r24
     9be:	2c f4       	brge	.+10     	; 0x9ca <.L96>

000009c0 <.Loc.146>:
		__ticks = 1;
     9c0:	81 e0       	ldi	r24, 0x01	; 1
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	9c a3       	std	Y+36, r25	; 0x24
     9c6:	8b a3       	std	Y+35, r24	; 0x23
     9c8:	62 c0       	rjmp	.+196    	; 0xa8e <.L60>

000009ca <.L96>:
	else if (__tmp > 65535)
     9ca:	20 e0       	ldi	r18, 0x00	; 0
     9cc:	3f ef       	ldi	r19, 0xFF	; 255
     9ce:	4f e7       	ldi	r20, 0x7F	; 127
     9d0:	57 e4       	ldi	r21, 0x47	; 71
     9d2:	6f 8d       	ldd	r22, Y+31	; 0x1f
     9d4:	78 a1       	ldd	r23, Y+32	; 0x20
     9d6:	89 a1       	ldd	r24, Y+33	; 0x21
     9d8:	9a a1       	ldd	r25, Y+34	; 0x22
     9da:	0e 94 96 0a 	call	0x152c	; 0x152c <__gesf2>
     9de:	88 23       	and	r24, r24
     9e0:	09 f0       	breq	.+2      	; 0x9e4 <L0^A>

000009e2 <L0^A>:
     9e2:	0c f4       	brge	.+2      	; 0x9e6 <.Loc.148>

000009e4 <L0^A>:
     9e4:	42 c0       	rjmp	.+132    	; 0xa6a <.L97>

000009e6 <.Loc.148>:
		__ticks = (uint16_t) (__ms * 10.0);
     9e6:	20 e0       	ldi	r18, 0x00	; 0
     9e8:	30 e0       	ldi	r19, 0x00	; 0
     9ea:	40 e2       	ldi	r20, 0x20	; 32
     9ec:	51 e4       	ldi	r21, 0x41	; 65
     9ee:	6b 8d       	ldd	r22, Y+27	; 0x1b
     9f0:	7c 8d       	ldd	r23, Y+28	; 0x1c
     9f2:	8d 8d       	ldd	r24, Y+29	; 0x1d
     9f4:	9e 8d       	ldd	r25, Y+30	; 0x1e
     9f6:	0e 94 9b 0a 	call	0x1536	; 0x1536 <__mulsf3>
     9fa:	ab 96       	adiw	r28, 0x2b	; 43
     9fc:	6c af       	std	Y+60, r22	; 0x3c
     9fe:	7d af       	std	Y+61, r23	; 0x3d
     a00:	8e af       	std	Y+62, r24	; 0x3e
     a02:	9f af       	std	Y+63, r25	; 0x3f
     a04:	ab 97       	sbiw	r28, 0x2b	; 43
     a06:	ab 96       	adiw	r28, 0x2b	; 43
     a08:	8c ad       	ldd	r24, Y+60	; 0x3c
     a0a:	9d ad       	ldd	r25, Y+61	; 0x3d
     a0c:	ae ad       	ldd	r26, Y+62	; 0x3e
     a0e:	bf ad       	ldd	r27, Y+63	; 0x3f
     a10:	ab 97       	sbiw	r28, 0x2b	; 43
     a12:	8b af       	std	Y+59, r24	; 0x3b
     a14:	9c af       	std	Y+60, r25	; 0x3c
     a16:	ad af       	std	Y+61, r26	; 0x3d
     a18:	be af       	std	Y+62, r27	; 0x3e

00000a1a <.Loc.149>:
     a1a:	6b ad       	ldd	r22, Y+59	; 0x3b
     a1c:	7c ad       	ldd	r23, Y+60	; 0x3c
     a1e:	8d ad       	ldd	r24, Y+61	; 0x3d
     a20:	9e ad       	ldd	r25, Y+62	; 0x3e
     a22:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__fixunssfsi>
     a26:	af 96       	adiw	r28, 0x2f	; 47
     a28:	6c af       	std	Y+60, r22	; 0x3c
     a2a:	7d af       	std	Y+61, r23	; 0x3d
     a2c:	8e af       	std	Y+62, r24	; 0x3e
     a2e:	9f af       	std	Y+63, r25	; 0x3f
     a30:	af 97       	sbiw	r28, 0x2f	; 47
     a32:	ad 96       	adiw	r28, 0x2d	; 45
     a34:	ae ad       	ldd	r26, Y+62	; 0x3e
     a36:	bf ad       	ldd	r27, Y+63	; 0x3f
     a38:	ad 97       	sbiw	r28, 0x2d	; 45
     a3a:	bc a3       	std	Y+36, r27	; 0x24
     a3c:	ab a3       	std	Y+35, r26	; 0x23

00000a3e <.Loc.150>:
		while(__ticks)
     a3e:	10 c0       	rjmp	.+32     	; 0xa60 <.L63>

00000a40 <.L64>:
     a40:	80 e9       	ldi	r24, 0x90	; 144
     a42:	91 e0       	ldi	r25, 0x01	; 1
     a44:	9e a3       	std	Y+38, r25	; 0x26
     a46:	8d a3       	std	Y+37, r24	; 0x25

00000a48 <.LBB78>:
     a48:	8d a1       	ldd	r24, Y+37	; 0x25
     a4a:	9e a1       	ldd	r25, Y+38	; 0x26

00000a4c <.L1^B9>:
     a4c:	01 97       	sbiw	r24, 0x01	; 1
     a4e:	f1 f7       	brne	.-4      	; 0xa4c <.L1^B9>
     a50:	9e a3       	std	Y+38, r25	; 0x26
     a52:	8d a3       	std	Y+37, r24	; 0x25

00000a54 <.Loc.152>:
	...

00000a56 <.LBE78>:
			__ticks --;
     a56:	8b a1       	ldd	r24, Y+35	; 0x23
     a58:	9c a1       	ldd	r25, Y+36	; 0x24
     a5a:	01 97       	sbiw	r24, 0x01	; 1
     a5c:	9c a3       	std	Y+36, r25	; 0x24
     a5e:	8b a3       	std	Y+35, r24	; 0x23

00000a60 <.L63>:
		while(__ticks)
     a60:	8b a1       	ldd	r24, Y+35	; 0x23
     a62:	9c a1       	ldd	r25, Y+36	; 0x24
     a64:	00 97       	sbiw	r24, 0x00	; 0
     a66:	61 f7       	brne	.-40     	; 0xa40 <.L64>

00000a68 <.Loc.155>:
		return;
     a68:	1d c0       	rjmp	.+58     	; 0xaa4 <.L65>

00000a6a <.L97>:
		__ticks = (uint16_t)__tmp;
     a6a:	6f 8d       	ldd	r22, Y+31	; 0x1f
     a6c:	78 a1       	ldd	r23, Y+32	; 0x20
     a6e:	89 a1       	ldd	r24, Y+33	; 0x21
     a70:	9a a1       	ldd	r25, Y+34	; 0x22
     a72:	0e 94 1a 0a 	call	0x1434	; 0x1434 <__fixunssfsi>
     a76:	e3 96       	adiw	r28, 0x33	; 51
     a78:	6c af       	std	Y+60, r22	; 0x3c
     a7a:	7d af       	std	Y+61, r23	; 0x3d
     a7c:	8e af       	std	Y+62, r24	; 0x3e
     a7e:	9f af       	std	Y+63, r25	; 0x3f
     a80:	e3 97       	sbiw	r28, 0x33	; 51
     a82:	e1 96       	adiw	r28, 0x31	; 49
     a84:	ee ad       	ldd	r30, Y+62	; 0x3e
     a86:	ff ad       	ldd	r31, Y+63	; 0x3f
     a88:	e1 97       	sbiw	r28, 0x31	; 49
     a8a:	fc a3       	std	Y+36, r31	; 0x24
     a8c:	eb a3       	std	Y+35, r30	; 0x23

00000a8e <.L60>:
     a8e:	8b a1       	ldd	r24, Y+35	; 0x23
     a90:	9c a1       	ldd	r25, Y+36	; 0x24
     a92:	98 a7       	std	Y+40, r25	; 0x28
     a94:	8f a3       	std	Y+39, r24	; 0x27

00000a96 <.LBB80>:
     a96:	8f a1       	ldd	r24, Y+39	; 0x27
     a98:	98 a5       	ldd	r25, Y+40	; 0x28

00000a9a <.L1^B10>:
     a9a:	01 97       	sbiw	r24, 0x01	; 1
     a9c:	f1 f7       	brne	.-4      	; 0xa9a <.L1^B10>
     a9e:	98 a7       	std	Y+40, r25	; 0x28
     aa0:	8f a3       	std	Y+39, r24	; 0x27

00000aa2 <.Loc.158>:
	...

00000aa4 <.L65>:
                _delay_ms(2000);
                state = 1;
     aa4:	81 e0       	ldi	r24, 0x01	; 1
     aa6:	90 e0       	ldi	r25, 0x00	; 0
     aa8:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     aac:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000ab0 <.Loc.160>:
                waarschuwLampjes_UIT;
     ab0:	85 e2       	ldi	r24, 0x25	; 37
     ab2:	90 e0       	ldi	r25, 0x00	; 0
     ab4:	dc 01       	movw	r26, r24
     ab6:	2c 91       	ld	r18, X
     ab8:	85 e2       	ldi	r24, 0x25	; 37
     aba:	90 e0       	ldi	r25, 0x00	; 0
     abc:	27 7f       	andi	r18, 0xF7	; 247
     abe:	fc 01       	movw	r30, r24
     ac0:	20 83       	st	Z, r18

00000ac2 <.Loc.161>:
                knopIngedrukt = 0;
     ac2:	1e 82       	std	Y+6, r1	; 0x06
     ac4:	1d 82       	std	Y+5, r1	; 0x05

00000ac6 <.L49>:
            }
        }
        //Rotary encoder code
        rotary_1 = RotaryGetStatus();       //rotary_1 krijgt de waarde 0 1 of 2 van de rotary encoder uit rotary.c
     ac6:	0e 94 b0 09 	call	0x1360	; 0x1360 <RotaryGetStatus>

00000aca <.Loc.163>:
     aca:	88 2f       	mov	r24, r24
     acc:	90 e0       	ldi	r25, 0x00	; 0
     ace:	9a 83       	std	Y+2, r25	; 0x02
     ad0:	89 83       	std	Y+1, r24	; 0x01

00000ad2 <.Loc.164>:
        if(rotary_1 == 1)
     ad2:	89 81       	ldd	r24, Y+1	; 0x01
     ad4:	9a 81       	ldd	r25, Y+2	; 0x02
     ad6:	81 30       	cpi	r24, 0x01	; 1
     ad8:	91 05       	cpc	r25, r1
     ada:	49 f4       	brne	.+18     	; 0xaee <.L66>

00000adc <.Loc.165>:
        {
            rotary_1 = 0;
     adc:	1a 82       	std	Y+2, r1	; 0x02
     ade:	19 82       	std	Y+1, r1	; 0x01

00000ae0 <.Loc.166>:
            waarde_rot_1--;
     ae0:	8b 81       	ldd	r24, Y+3	; 0x03
     ae2:	9c 81       	ldd	r25, Y+4	; 0x04
     ae4:	01 97       	sbiw	r24, 0x01	; 1
     ae6:	9c 83       	std	Y+4, r25	; 0x04
     ae8:	8b 83       	std	Y+3, r24	; 0x03

00000aea <.Loc.167>:
            RotaryResetStatus();
     aea:	0e 94 b5 09 	call	0x136a	; 0x136a <RotaryResetStatus>

00000aee <.L66>:
        }
        if(rotary_1 == 2)
     aee:	89 81       	ldd	r24, Y+1	; 0x01
     af0:	9a 81       	ldd	r25, Y+2	; 0x02
     af2:	82 30       	cpi	r24, 0x02	; 2
     af4:	91 05       	cpc	r25, r1
     af6:	49 f4       	brne	.+18     	; 0xb0a <.L67>

00000af8 <.Loc.169>:
        {
            rotary_1 = 0;
     af8:	1a 82       	std	Y+2, r1	; 0x02
     afa:	19 82       	std	Y+1, r1	; 0x01

00000afc <.Loc.170>:
            waarde_rot_1++;
     afc:	8b 81       	ldd	r24, Y+3	; 0x03
     afe:	9c 81       	ldd	r25, Y+4	; 0x04
     b00:	01 96       	adiw	r24, 0x01	; 1
     b02:	9c 83       	std	Y+4, r25	; 0x04
     b04:	8b 83       	std	Y+3, r24	; 0x03

00000b06 <.Loc.171>:
            RotaryResetStatus();
     b06:	0e 94 b5 09 	call	0x136a	; 0x136a <RotaryResetStatus>

00000b0a <.L67>:
        }

        //Timer code
        if (TIFR5 & (1<<TOV5))  //elke keer als de timer overflowt
     b0a:	8a e3       	ldi	r24, 0x3A	; 58
     b0c:	90 e0       	ldi	r25, 0x00	; 0
     b0e:	dc 01       	movw	r26, r24
     b10:	8c 91       	ld	r24, X

00000b12 <.Loc.173>:
     b12:	88 2f       	mov	r24, r24
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	81 70       	andi	r24, 0x01	; 1
     b18:	99 27       	eor	r25, r25

00000b1a <.Loc.174>:
     b1a:	00 97       	sbiw	r24, 0x00	; 0
     b1c:	71 f0       	breq	.+28     	; 0xb3a <.L68>

00000b1e <.Loc.175>:
        {
            // Timer overflow, +/- 1 ms voorbij
            TIFR5 = (1<<TOV5);  // Wis flag
     b1e:	8a e3       	ldi	r24, 0x3A	; 58
     b20:	90 e0       	ldi	r25, 0x00	; 0

00000b22 <.Loc.176>:
     b22:	21 e0       	ldi	r18, 0x01	; 1
     b24:	fc 01       	movw	r30, r24
     b26:	20 83       	st	Z, r18

00000b28 <.Loc.177>:
            teller++;           //Verhoog teller met 1 iedere overflow (244Hz)
     b28:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <teller>
     b2c:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <teller+0x1>
     b30:	01 96       	adiw	r24, 0x01	; 1
     b32:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <teller+0x1>
     b36:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <teller>

00000b3a <.L68>:
        }

        // in deze state stopt AGV hier staat deze permanent uit
        if(state == 0)
     b3a:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     b3e:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000b42 <.Loc.179>:
     b42:	00 97       	sbiw	r24, 0x00	; 0
     b44:	41 f4       	brne	.+16     	; 0xb56 <.L69>

00000b46 <.LBB82>:
        {
            MotorLinks_set_percentage(0);
     b46:	80 e0       	ldi	r24, 0x00	; 0
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000b4e <.Loc.181>:
            MotorRechts_set_percentage(0);
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000b56 <.L69>:
        }
        //Blijf rechtdoor rijden tot external interrupt state veranderd naar state 2
        if(state==1)
     b56:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     b5a:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000b5e <.Loc.183>:
     b5e:	81 30       	cpi	r24, 0x01	; 1
     b60:	91 05       	cpc	r25, r1
     b62:	d9 f4       	brne	.+54     	; 0xb9a <.L70>

00000b64 <.LBB83>:
        {
            MotorLinks_set_percentage(57+(waarde_rot_2-waarde_rot_1));
     b64:	2b 85       	ldd	r18, Y+11	; 0x0b
     b66:	3c 85       	ldd	r19, Y+12	; 0x0c
     b68:	8b 81       	ldd	r24, Y+3	; 0x03
     b6a:	9c 81       	ldd	r25, Y+4	; 0x04
     b6c:	a9 01       	movw	r20, r18
     b6e:	48 1b       	sub	r20, r24
     b70:	59 0b       	sbc	r21, r25
     b72:	ca 01       	movw	r24, r20

00000b74 <.Loc.185>:
     b74:	c9 96       	adiw	r24, 0x39	; 57
     b76:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000b7a <.Loc.186>:
            MotorRechts_set_percentage(70-(waarde_rot_2-waarde_rot_1));
     b7a:	2b 85       	ldd	r18, Y+11	; 0x0b
     b7c:	3c 85       	ldd	r19, Y+12	; 0x0c
     b7e:	8b 81       	ldd	r24, Y+3	; 0x03
     b80:	9c 81       	ldd	r25, Y+4	; 0x04
     b82:	d9 01       	movw	r26, r18
     b84:	a8 1b       	sub	r26, r24
     b86:	b9 0b       	sbc	r27, r25
     b88:	cd 01       	movw	r24, r26

00000b8a <.Loc.187>:
     b8a:	26 e4       	ldi	r18, 0x46	; 70
     b8c:	30 e0       	ldi	r19, 0x00	; 0
     b8e:	f9 01       	movw	r30, r18
     b90:	e8 1b       	sub	r30, r24
     b92:	f9 0b       	sbc	r31, r25
     b94:	cf 01       	movw	r24, r30
     b96:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000b9a <.L70>:
        }
        //wacht 2 seconden en rijdt door door te veranderen naar state 1
        if(state==2)
     b9a:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     b9e:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000ba2 <.Loc.189>:
     ba2:	82 30       	cpi	r24, 0x02	; 2
     ba4:	91 05       	cpc	r25, r1
     ba6:	91 f5       	brne	.+100    	; 0xc0c <.L71>

00000ba8 <.LBB84>:
        {
            MotorLinks_set_percentage(0);
     ba8:	80 e0       	ldi	r24, 0x00	; 0
     baa:	90 e0       	ldi	r25, 0x00	; 0
     bac:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000bb0 <.Loc.191>:
            MotorRechts_set_percentage(0);
     bb0:	80 e0       	ldi	r24, 0x00	; 0
     bb2:	90 e0       	ldi	r25, 0x00	; 0
     bb4:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000bb8 <.Loc.192>:
            waarschuwLampjes_AAN;
     bb8:	85 e2       	ldi	r24, 0x25	; 37
     bba:	90 e0       	ldi	r25, 0x00	; 0
     bbc:	dc 01       	movw	r26, r24
     bbe:	2c 91       	ld	r18, X
     bc0:	85 e2       	ldi	r24, 0x25	; 37
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	28 60       	ori	r18, 0x08	; 8
     bc6:	fc 01       	movw	r30, r24
     bc8:	20 83       	st	Z, r18

00000bca <.Loc.193>:
            if (teller > (2000/4))
     bca:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <teller>
     bce:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <teller+0x1>

00000bd2 <.Loc.194>:
     bd2:	84 3f       	cpi	r24, 0xF4	; 244
     bd4:	f1 e0       	ldi	r31, 0x01	; 1
     bd6:	9f 07       	cpc	r25, r31
     bd8:	c9 f0       	breq	.+50     	; 0xc0c <.L71>
     bda:	c4 f0       	brlt	.+48     	; 0xc0c <.L71>

00000bdc <.Loc.195>:
            {
                plantTeller++;
     bdc:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <plantTeller>
     be0:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <plantTeller+0x1>
     be4:	01 96       	adiw	r24, 0x01	; 1
     be6:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <plantTeller+0x1>
     bea:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <plantTeller>

00000bee <.Loc.196>:
                state = 1;
     bee:	81 e0       	ldi	r24, 0x01	; 1
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     bf6:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000bfa <.Loc.197>:
                waarschuwLampjes_UIT;
     bfa:	85 e2       	ldi	r24, 0x25	; 37
     bfc:	90 e0       	ldi	r25, 0x00	; 0
     bfe:	dc 01       	movw	r26, r24
     c00:	2c 91       	ld	r18, X
     c02:	85 e2       	ldi	r24, 0x25	; 37
     c04:	90 e0       	ldi	r25, 0x00	; 0
     c06:	27 7f       	andi	r18, 0xF7	; 247
     c08:	fc 01       	movw	r30, r24
     c0a:	20 83       	st	Z, r18

00000c0c <.L71>:
            }
        }
        if(state==3)    //Bocht Linksom
     c0c:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     c10:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000c14 <.Loc.199>:
     c14:	83 30       	cpi	r24, 0x03	; 3
     c16:	91 05       	cpc	r25, r1
     c18:	b1 f5       	brne	.+108    	; 0xc86 <.L72>

00000c1a <.LBB85>:
        {
            MotorLinks_set_percentage(0);
     c1a:	80 e0       	ldi	r24, 0x00	; 0
     c1c:	90 e0       	ldi	r25, 0x00	; 0
     c1e:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000c22 <.Loc.201>:
            MotorRechts_set_percentage(0);
     c22:	80 e0       	ldi	r24, 0x00	; 0
     c24:	90 e0       	ldi	r25, 0x00	; 0
     c26:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000c2a <.Loc.202>:
            waarschuwLampjes_AAN;
     c2a:	85 e2       	ldi	r24, 0x25	; 37
     c2c:	90 e0       	ldi	r25, 0x00	; 0
     c2e:	dc 01       	movw	r26, r24
     c30:	2c 91       	ld	r18, X
     c32:	85 e2       	ldi	r24, 0x25	; 37
     c34:	90 e0       	ldi	r25, 0x00	; 0
     c36:	28 60       	ori	r18, 0x08	; 8
     c38:	fc 01       	movw	r30, r24
     c3a:	20 83       	st	Z, r18

00000c3c <.Loc.203>:
            if (teller > (2000/4))            //Hoeveel ms/4 het duurt voordat het naar de volgende staat gaat
     c3c:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <teller>
     c40:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <teller+0x1>

00000c44 <.Loc.204>:
     c44:	84 3f       	cpi	r24, 0xF4	; 244
     c46:	f1 e0       	ldi	r31, 0x01	; 1
     c48:	9f 07       	cpc	r25, r31
     c4a:	e9 f0       	breq	.+58     	; 0xc86 <.L72>
     c4c:	e4 f0       	brlt	.+56     	; 0xc86 <.L72>

00000c4e <.Loc.205>:
            {
                plantTeller++;
     c4e:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <plantTeller>
     c52:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <plantTeller+0x1>
     c56:	01 96       	adiw	r24, 0x01	; 1
     c58:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <plantTeller+0x1>
     c5c:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <plantTeller>

00000c60 <.Loc.206>:
                state = 5;
     c60:	85 e0       	ldi	r24, 0x05	; 5
     c62:	90 e0       	ldi	r25, 0x00	; 0
     c64:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     c68:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000c6c <.Loc.207>:
                teller = 0;
     c6c:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <teller+0x1>
     c70:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <teller>

00000c74 <.Loc.208>:
                waarschuwLampjes_UIT;
     c74:	85 e2       	ldi	r24, 0x25	; 37
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	dc 01       	movw	r26, r24
     c7a:	2c 91       	ld	r18, X
     c7c:	85 e2       	ldi	r24, 0x25	; 37
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	27 7f       	andi	r18, 0xF7	; 247
     c82:	fc 01       	movw	r30, r24
     c84:	20 83       	st	Z, r18

00000c86 <.L72>:
            }
        }
        if(state==4)    //Bocht Rechtsom
     c86:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     c8a:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000c8e <.Loc.210>:
     c8e:	84 30       	cpi	r24, 0x04	; 4
     c90:	91 05       	cpc	r25, r1
     c92:	b1 f5       	brne	.+108    	; 0xd00 <.L73>

00000c94 <.LBB86>:
        {
            MotorLinks_set_percentage(0);
     c94:	80 e0       	ldi	r24, 0x00	; 0
     c96:	90 e0       	ldi	r25, 0x00	; 0
     c98:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000c9c <.Loc.212>:
            MotorRechts_set_percentage(0);
     c9c:	80 e0       	ldi	r24, 0x00	; 0
     c9e:	90 e0       	ldi	r25, 0x00	; 0
     ca0:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000ca4 <.Loc.213>:
            waarschuwLampjes_AAN;
     ca4:	85 e2       	ldi	r24, 0x25	; 37
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	dc 01       	movw	r26, r24
     caa:	2c 91       	ld	r18, X
     cac:	85 e2       	ldi	r24, 0x25	; 37
     cae:	90 e0       	ldi	r25, 0x00	; 0
     cb0:	28 60       	ori	r18, 0x08	; 8
     cb2:	fc 01       	movw	r30, r24
     cb4:	20 83       	st	Z, r18

00000cb6 <.Loc.214>:
            if (teller > (2000/4))            // hoeveel seconden wachten voordat state veranderd
     cb6:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <teller>
     cba:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <teller+0x1>

00000cbe <.Loc.215>:
     cbe:	84 3f       	cpi	r24, 0xF4	; 244
     cc0:	f1 e0       	ldi	r31, 0x01	; 1
     cc2:	9f 07       	cpc	r25, r31
     cc4:	e9 f0       	breq	.+58     	; 0xd00 <.L73>
     cc6:	e4 f0       	brlt	.+56     	; 0xd00 <.L73>

00000cc8 <.Loc.216>:
            {
                plantTeller++;
     cc8:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <plantTeller>
     ccc:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <plantTeller+0x1>
     cd0:	01 96       	adiw	r24, 0x01	; 1
     cd2:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <plantTeller+0x1>
     cd6:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <plantTeller>

00000cda <.Loc.217>:
                state = 9;
     cda:	89 e0       	ldi	r24, 0x09	; 9
     cdc:	90 e0       	ldi	r25, 0x00	; 0
     cde:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     ce2:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000ce6 <.Loc.218>:
                teller = 0;
     ce6:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <teller+0x1>
     cea:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <teller>

00000cee <.Loc.219>:
                waarschuwLampjes_UIT;
     cee:	85 e2       	ldi	r24, 0x25	; 37
     cf0:	90 e0       	ldi	r25, 0x00	; 0
     cf2:	dc 01       	movw	r26, r24
     cf4:	2c 91       	ld	r18, X
     cf6:	85 e2       	ldi	r24, 0x25	; 37
     cf8:	90 e0       	ldi	r25, 0x00	; 0
     cfa:	27 7f       	andi	r18, 0xF7	; 247
     cfc:	fc 01       	movw	r30, r24
     cfe:	20 83       	st	Z, r18

00000d00 <.L73>:
            }
        }
        if(state==5)
     d00:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     d04:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000d08 <.Loc.221>:
     d08:	85 30       	cpi	r24, 0x05	; 5
     d0a:	91 05       	cpc	r25, r1
     d0c:	d9 f4       	brne	.+54     	; 0xd44 <.L74>

00000d0e <.LBB87>:
        {
            MotorLinks_set_percentage(60);
     d0e:	8c e3       	ldi	r24, 0x3C	; 60
     d10:	90 e0       	ldi	r25, 0x00	; 0
     d12:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000d16 <.Loc.223>:
            MotorRechts_set_percentage(70);
     d16:	86 e4       	ldi	r24, 0x46	; 70
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000d1e <.Loc.224>:
            if (teller > (3000/4))            //Hoeveel ms/4 het duurt voordat het naar de volgende staat gaat
     d1e:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <teller>
     d22:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <teller+0x1>

00000d26 <.Loc.225>:
     d26:	8e 3e       	cpi	r24, 0xEE	; 238
     d28:	f2 e0       	ldi	r31, 0x02	; 2
     d2a:	9f 07       	cpc	r25, r31
     d2c:	59 f0       	breq	.+22     	; 0xd44 <.L74>
     d2e:	54 f0       	brlt	.+20     	; 0xd44 <.L74>

00000d30 <.Loc.226>:
            {
                state = 6;
     d30:	86 e0       	ldi	r24, 0x06	; 6
     d32:	90 e0       	ldi	r25, 0x00	; 0
     d34:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     d38:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000d3c <.Loc.227>:
                teller = 0;
     d3c:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <teller+0x1>
     d40:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <teller>

00000d44 <.L74>:
            }
        }
        //draai linksom volle snelheid
        if(state==6)
     d44:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     d48:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000d4c <.Loc.229>:
     d4c:	86 30       	cpi	r24, 0x06	; 6
     d4e:	91 05       	cpc	r25, r1
     d50:	d9 f4       	brne	.+54     	; 0xd88 <.L75>

00000d52 <.LBB88>:
        {
            MotorLinks_set_percentage(0);
     d52:	80 e0       	ldi	r24, 0x00	; 0
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000d5a <.Loc.231>:
            MotorRechts_set_percentage(80);
     d5a:	80 e5       	ldi	r24, 0x50	; 80
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000d62 <.Loc.232>:
            if (teller > (1450/4))            // hoeveel seconden wachten voordat state veranderd
     d62:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <teller>
     d66:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <teller+0x1>

00000d6a <.Loc.233>:
     d6a:	8a 36       	cpi	r24, 0x6A	; 106
     d6c:	21 e0       	ldi	r18, 0x01	; 1
     d6e:	92 07       	cpc	r25, r18
     d70:	59 f0       	breq	.+22     	; 0xd88 <.L75>
     d72:	54 f0       	brlt	.+20     	; 0xd88 <.L75>

00000d74 <.Loc.234>:
            {
                state = 7;
     d74:	87 e0       	ldi	r24, 0x07	; 7
     d76:	90 e0       	ldi	r25, 0x00	; 0
     d78:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     d7c:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000d80 <.Loc.235>:
                teller = 0;
     d80:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <teller+0x1>
     d84:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <teller>

00000d88 <.L75>:
            }
        }
        //rijd rechtdoor (40%vermogen)
        if(state==7)
     d88:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     d8c:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000d90 <.Loc.237>:
     d90:	87 30       	cpi	r24, 0x07	; 7
     d92:	91 05       	cpc	r25, r1
     d94:	69 f5       	brne	.+90     	; 0xdf0 <.L76>

00000d96 <.LBB89>:
        {
            Led_Links_AAN;
     d96:	85 e2       	ldi	r24, 0x25	; 37
     d98:	90 e0       	ldi	r25, 0x00	; 0
     d9a:	dc 01       	movw	r26, r24
     d9c:	2c 91       	ld	r18, X
     d9e:	85 e2       	ldi	r24, 0x25	; 37
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	2f 7b       	andi	r18, 0xBF	; 191
     da4:	fc 01       	movw	r30, r24
     da6:	20 83       	st	Z, r18

00000da8 <.Loc.239>:
            Led_Rechts_AAN;
     da8:	85 e2       	ldi	r24, 0x25	; 37
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	dc 01       	movw	r26, r24
     dae:	2c 91       	ld	r18, X
     db0:	85 e2       	ldi	r24, 0x25	; 37
     db2:	90 e0       	ldi	r25, 0x00	; 0
     db4:	2f 7d       	andi	r18, 0xDF	; 223
     db6:	fc 01       	movw	r30, r24
     db8:	20 83       	st	Z, r18

00000dba <.Loc.240>:
            MotorLinks_set_percentage(60);
     dba:	8c e3       	ldi	r24, 0x3C	; 60
     dbc:	90 e0       	ldi	r25, 0x00	; 0
     dbe:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000dc2 <.Loc.241>:
            MotorRechts_set_percentage(70);
     dc2:	86 e4       	ldi	r24, 0x46	; 70
     dc4:	90 e0       	ldi	r25, 0x00	; 0
     dc6:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000dca <.Loc.242>:
            if (teller > (1100/4))            // hoeveel seconden wachten voordat state veranderd
     dca:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <teller>
     dce:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <teller+0x1>

00000dd2 <.Loc.243>:
     dd2:	83 31       	cpi	r24, 0x13	; 19
     dd4:	f1 e0       	ldi	r31, 0x01	; 1
     dd6:	9f 07       	cpc	r25, r31
     dd8:	59 f0       	breq	.+22     	; 0xdf0 <.L76>
     dda:	54 f0       	brlt	.+20     	; 0xdf0 <.L76>

00000ddc <.Loc.244>:
            {
                state = 8;
     ddc:	88 e0       	ldi	r24, 0x08	; 8
     dde:	90 e0       	ldi	r25, 0x00	; 0
     de0:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     de4:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000de8 <.Loc.245>:
                teller = 0;
     de8:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <teller+0x1>
     dec:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <teller>

00000df0 <.L76>:
            }
        }
        //draai linksom volle snelheid
        if(state==8)
     df0:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     df4:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000df8 <.Loc.247>:
     df8:	88 30       	cpi	r24, 0x08	; 8
     dfa:	91 05       	cpc	r25, r1
     dfc:	09 f5       	brne	.+66     	; 0xe40 <.L77>

00000dfe <.LBB90>:
        {
            MotorLinks_set_percentage(0);
     dfe:	80 e0       	ldi	r24, 0x00	; 0
     e00:	90 e0       	ldi	r25, 0x00	; 0
     e02:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000e06 <.Loc.249>:
            MotorRechts_set_percentage(80);
     e06:	80 e5       	ldi	r24, 0x50	; 80
     e08:	90 e0       	ldi	r25, 0x00	; 0
     e0a:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000e0e <.Loc.250>:
            if (teller > (1400/4))            // hoeveel seconden wachten voordat state veranderd
     e0e:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <teller>
     e12:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <teller+0x1>

00000e16 <.Loc.251>:
     e16:	8e 35       	cpi	r24, 0x5E	; 94
     e18:	21 e0       	ldi	r18, 0x01	; 1
     e1a:	92 07       	cpc	r25, r18
     e1c:	89 f0       	breq	.+34     	; 0xe40 <.L77>
     e1e:	84 f0       	brlt	.+32     	; 0xe40 <.L77>

00000e20 <.Loc.252>:
            {
                state = 1;
     e20:	81 e0       	ldi	r24, 0x01	; 1
     e22:	90 e0       	ldi	r25, 0x00	; 0
     e24:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     e28:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000e2c <.Loc.253>:
                teller = 0;
     e2c:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <teller+0x1>
     e30:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <teller>

00000e34 <.Loc.254>:
                laatsteBocht = Links;
     e34:	81 e0       	ldi	r24, 0x01	; 1
     e36:	90 e0       	ldi	r25, 0x00	; 0
     e38:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <laatsteBocht+0x1>
     e3c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <laatsteBocht>

00000e40 <.L77>:
            }
        }
        if(state==9)
     e40:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     e44:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000e48 <.Loc.256>:
     e48:	89 30       	cpi	r24, 0x09	; 9
     e4a:	91 05       	cpc	r25, r1
     e4c:	d9 f4       	brne	.+54     	; 0xe84 <.L78>

00000e4e <.LBB91>:
        {
            MotorLinks_set_percentage(60);
     e4e:	8c e3       	ldi	r24, 0x3C	; 60
     e50:	90 e0       	ldi	r25, 0x00	; 0
     e52:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000e56 <.Loc.258>:
            MotorRechts_set_percentage(70);
     e56:	86 e4       	ldi	r24, 0x46	; 70
     e58:	90 e0       	ldi	r25, 0x00	; 0
     e5a:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000e5e <.Loc.259>:
            if (teller > (3000/4))            // hoeveel seconden wachten voordat state veranderd
     e5e:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <teller>
     e62:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <teller+0x1>

00000e66 <.Loc.260>:
     e66:	8e 3e       	cpi	r24, 0xEE	; 238
     e68:	42 e0       	ldi	r20, 0x02	; 2
     e6a:	94 07       	cpc	r25, r20
     e6c:	59 f0       	breq	.+22     	; 0xe84 <.L78>
     e6e:	54 f0       	brlt	.+20     	; 0xe84 <.L78>

00000e70 <.Loc.261>:
            {
                state = 10;
     e70:	8a e0       	ldi	r24, 0x0A	; 10
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     e78:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000e7c <.Loc.262>:
                teller = 0;
     e7c:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <teller+0x1>
     e80:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <teller>

00000e84 <.L78>:
            }
        }
        if(state==10)
     e84:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     e88:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000e8c <.Loc.264>:
     e8c:	8a 30       	cpi	r24, 0x0A	; 10
     e8e:	91 05       	cpc	r25, r1
     e90:	d9 f4       	brne	.+54     	; 0xec8 <.L79>

00000e92 <.LBB92>:
        {
            MotorLinks_set_percentage(60);
     e92:	8c e3       	ldi	r24, 0x3C	; 60
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000e9a <.Loc.266>:
            MotorRechts_set_percentage(0);
     e9a:	80 e0       	ldi	r24, 0x00	; 0
     e9c:	90 e0       	ldi	r25, 0x00	; 0
     e9e:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000ea2 <.Loc.267>:
            if (teller > (1450/4))
     ea2:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <teller>
     ea6:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <teller+0x1>

00000eaa <.Loc.268>:
     eaa:	8a 36       	cpi	r24, 0x6A	; 106
     eac:	51 e0       	ldi	r21, 0x01	; 1
     eae:	95 07       	cpc	r25, r21
     eb0:	59 f0       	breq	.+22     	; 0xec8 <.L79>
     eb2:	54 f0       	brlt	.+20     	; 0xec8 <.L79>

00000eb4 <.Loc.269>:
            {
                state = 11;
     eb4:	8b e0       	ldi	r24, 0x0B	; 11
     eb6:	90 e0       	ldi	r25, 0x00	; 0
     eb8:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     ebc:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000ec0 <.Loc.270>:
                teller = 0;
     ec0:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <teller+0x1>
     ec4:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <teller>

00000ec8 <.L79>:
            }
        }
        //rijd rechtdoor (40%vermogen)
        if(state==11)
     ec8:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     ecc:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000ed0 <.Loc.272>:
     ed0:	8b 30       	cpi	r24, 0x0B	; 11
     ed2:	91 05       	cpc	r25, r1
     ed4:	69 f5       	brne	.+90     	; 0xf30 <.L80>

00000ed6 <.LBB93>:
        {
            Led_Links_AAN;
     ed6:	85 e2       	ldi	r24, 0x25	; 37
     ed8:	90 e0       	ldi	r25, 0x00	; 0
     eda:	dc 01       	movw	r26, r24
     edc:	2c 91       	ld	r18, X
     ede:	85 e2       	ldi	r24, 0x25	; 37
     ee0:	90 e0       	ldi	r25, 0x00	; 0
     ee2:	2f 7b       	andi	r18, 0xBF	; 191
     ee4:	fc 01       	movw	r30, r24
     ee6:	20 83       	st	Z, r18

00000ee8 <.Loc.274>:
            Led_Rechts_AAN;
     ee8:	85 e2       	ldi	r24, 0x25	; 37
     eea:	90 e0       	ldi	r25, 0x00	; 0
     eec:	dc 01       	movw	r26, r24
     eee:	2c 91       	ld	r18, X
     ef0:	85 e2       	ldi	r24, 0x25	; 37
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	2f 7d       	andi	r18, 0xDF	; 223
     ef6:	fc 01       	movw	r30, r24
     ef8:	20 83       	st	Z, r18

00000efa <.Loc.275>:
            MotorLinks_set_percentage(60);
     efa:	8c e3       	ldi	r24, 0x3C	; 60
     efc:	90 e0       	ldi	r25, 0x00	; 0
     efe:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000f02 <.Loc.276>:
            MotorRechts_set_percentage(70);
     f02:	86 e4       	ldi	r24, 0x46	; 70
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000f0a <.Loc.277>:
            if (teller > (1400/4))            // hoeveel seconden wachten voordat state veranderd
     f0a:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <teller>
     f0e:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <teller+0x1>

00000f12 <.Loc.278>:
     f12:	8e 35       	cpi	r24, 0x5E	; 94
     f14:	f1 e0       	ldi	r31, 0x01	; 1
     f16:	9f 07       	cpc	r25, r31
     f18:	59 f0       	breq	.+22     	; 0xf30 <.L80>
     f1a:	54 f0       	brlt	.+20     	; 0xf30 <.L80>

00000f1c <.Loc.279>:
            {
                state = 12;
     f1c:	8c e0       	ldi	r24, 0x0C	; 12
     f1e:	90 e0       	ldi	r25, 0x00	; 0
     f20:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     f24:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000f28 <.Loc.280>:
                teller = 0;
     f28:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <teller+0x1>
     f2c:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <teller>

00000f30 <.L80>:
            }
        }
        //draai rechtsom volle snelheid
        if(state==12)
     f30:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     f34:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000f38 <.Loc.282>:
     f38:	8c 30       	cpi	r24, 0x0C	; 12
     f3a:	91 05       	cpc	r25, r1
     f3c:	09 f5       	brne	.+66     	; 0xf80 <.L81>

00000f3e <.LBB94>:
        {
            MotorLinks_set_percentage(80);
     f3e:	80 e5       	ldi	r24, 0x50	; 80
     f40:	90 e0       	ldi	r25, 0x00	; 0
     f42:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000f46 <.Loc.284>:
            MotorRechts_set_percentage(0);
     f46:	80 e0       	ldi	r24, 0x00	; 0
     f48:	90 e0       	ldi	r25, 0x00	; 0
     f4a:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000f4e <.Loc.285>:
            if (teller > (1100/4))            // hoeveel seconden wachten voordat state veranderd
     f4e:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <teller>
     f52:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <teller+0x1>

00000f56 <.Loc.286>:
     f56:	83 31       	cpi	r24, 0x13	; 19
     f58:	21 e0       	ldi	r18, 0x01	; 1
     f5a:	92 07       	cpc	r25, r18
     f5c:	89 f0       	breq	.+34     	; 0xf80 <.L81>
     f5e:	84 f0       	brlt	.+32     	; 0xf80 <.L81>

00000f60 <.Loc.287>:
            {
                state = 1;
     f60:	81 e0       	ldi	r24, 0x01	; 1
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     f68:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000f6c <.Loc.288>:
                teller = 0;
     f6c:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <teller+0x1>
     f70:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <teller>

00000f74 <.Loc.289>:
                laatsteBocht = Rechts;
     f74:	82 e0       	ldi	r24, 0x02	; 2
     f76:	90 e0       	ldi	r25, 0x00	; 0
     f78:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <laatsteBocht+0x1>
     f7c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <laatsteBocht>

00000f80 <.L81>:
            }
        }
        if(state==99)
     f80:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     f84:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000f88 <.Loc.291>:
     f88:	83 36       	cpi	r24, 0x63	; 99
     f8a:	91 05       	cpc	r25, r1
     f8c:	09 f5       	brne	.+66     	; 0xfd0 <.L82>

00000f8e <.LBB95>:
        {
            MotorLinks_set_percentage(0);
     f8e:	80 e0       	ldi	r24, 0x00	; 0
     f90:	90 e0       	ldi	r25, 0x00	; 0
     f92:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000f96 <.Loc.293>:
            MotorRechts_set_percentage(0);
     f96:	80 e0       	ldi	r24, 0x00	; 0
     f98:	90 e0       	ldi	r25, 0x00	; 0
     f9a:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000f9e <.Loc.294>:
            plantTeller = 100;
     f9e:	84 e6       	ldi	r24, 0x64	; 100
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <plantTeller+0x1>
     fa6:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <plantTeller>

00000faa <.Loc.295>:
            if (teller > (2000/4))
     faa:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <teller>
     fae:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <teller+0x1>

00000fb2 <.Loc.296>:
     fb2:	84 3f       	cpi	r24, 0xF4	; 244
     fb4:	41 e0       	ldi	r20, 0x01	; 1
     fb6:	94 07       	cpc	r25, r20
     fb8:	59 f0       	breq	.+22     	; 0xfd0 <.L82>
     fba:	54 f0       	brlt	.+20     	; 0xfd0 <.L82>

00000fbc <.Loc.297>:
            {
                state = 100;
     fbc:	84 e6       	ldi	r24, 0x64	; 100
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
     fc4:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

00000fc8 <.Loc.298>:
                teller = 0;
     fc8:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <teller+0x1>
     fcc:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <teller>

00000fd0 <.L82>:
            }
        }
        if(state==100)
     fd0:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
     fd4:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

00000fd8 <.Loc.300>:
     fd8:	84 36       	cpi	r24, 0x64	; 100
     fda:	91 05       	cpc	r25, r1
     fdc:	d9 f4       	brne	.+54     	; 0x1014 <.L83>

00000fde <.LBB96>:
        {
            MotorLinks_set_percentage(60);
     fde:	8c e3       	ldi	r24, 0x3C	; 60
     fe0:	90 e0       	ldi	r25, 0x00	; 0
     fe2:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

00000fe6 <.Loc.302>:
            MotorRechts_set_percentage(70);
     fe6:	86 e4       	ldi	r24, 0x46	; 70
     fe8:	90 e0       	ldi	r25, 0x00	; 0
     fea:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00000fee <.Loc.303>:
            if (teller > (2000/4))
     fee:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <teller>
     ff2:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <teller+0x1>

00000ff6 <.Loc.304>:
     ff6:	84 3f       	cpi	r24, 0xF4	; 244
     ff8:	51 e0       	ldi	r21, 0x01	; 1
     ffa:	95 07       	cpc	r25, r21
     ffc:	59 f0       	breq	.+22     	; 0x1014 <.L83>
     ffe:	54 f0       	brlt	.+20     	; 0x1014 <.L83>

00001000 <.Loc.305>:
            {
                state = 101;
    1000:	85 e6       	ldi	r24, 0x65	; 101
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <state+0x1>
    1008:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <state>

0000100c <.Loc.306>:
                teller = 0;
    100c:	10 92 05 02 	sts	0x0205, r1	; 0x800205 <teller+0x1>
    1010:	10 92 04 02 	sts	0x0204, r1	; 0x800204 <teller>

00001014 <.L83>:
            }
        }
        if(state==101)
    1014:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <state>
    1018:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <state+0x1>

0000101c <.Loc.308>:
    101c:	85 36       	cpi	r24, 0x65	; 101
    101e:	91 05       	cpc	r25, r1
    1020:	09 f0       	breq	.+2      	; 0x1024 <.LBB97>

00001022 <L0^A>:
    1022:	2e cb       	rjmp	.-2468   	; 0x680 <.L85>

00001024 <.LBB97>:
        {
            MotorLinks_set_percentage(0);
    1024:	80 e0       	ldi	r24, 0x00	; 0
    1026:	90 e0       	ldi	r25, 0x00	; 0
    1028:	0e 94 a4 08 	call	0x1148	; 0x1148 <MotorLinks_set_percentage>

0000102c <.Loc.310>:
            MotorRechts_set_percentage(0);
    102c:	80 e0       	ldi	r24, 0x00	; 0
    102e:	90 e0       	ldi	r25, 0x00	; 0
    1030:	0e 94 4c 09 	call	0x1298	; 0x1298 <MotorRechts_set_percentage>

00001034 <.Loc.311>:
            waarschuwLampjes_AAN;
    1034:	85 e2       	ldi	r24, 0x25	; 37
    1036:	90 e0       	ldi	r25, 0x00	; 0
    1038:	dc 01       	movw	r26, r24
    103a:	2c 91       	ld	r18, X
    103c:	85 e2       	ldi	r24, 0x25	; 37
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	28 60       	ori	r18, 0x08	; 8
    1042:	fc 01       	movw	r30, r24
    1044:	20 83       	st	Z, r18

00001046 <.LBE97>:
        if (startKnopNietGedrukt)
    1046:	1c cb       	rjmp	.-2504   	; 0x680 <.L85>

00001048 <__vector_23>:
    1048:	1f 92       	push	r1
    104a:	1f b6       	in	r1, 0x3f	; 63
    104c:	1f 92       	push	r1
    104e:	11 24       	eor	r1, r1
    1050:	8f 93       	push	r24
    1052:	8b b7       	in	r24, 0x3b	; 59
    1054:	8f 93       	push	r24
    1056:	ef 93       	push	r30
    1058:	ff 93       	push	r31

0000105a <.Loc.1>:
    105a:	87 b5       	in	r24, 0x27	; 39

0000105c <.Loc.3>:
    105c:	81 11       	cpse	r24, r1
    105e:	0c c0       	rjmp	.+24     	; 0x1078 <.L2>

00001060 <.Loc.4>:
    1060:	88 b5       	in	r24, 0x28	; 40

00001062 <.Loc.5>:
    1062:	81 11       	cpse	r24, r1
    1064:	09 c0       	rjmp	.+18     	; 0x1078 <.L2>

00001066 <.Loc.6>:
    1066:	eb e0       	ldi	r30, 0x0B	; 11
    1068:	f1 e0       	ldi	r31, 0x01	; 1
    106a:	80 81       	ld	r24, Z
    106c:	8e 7f       	andi	r24, 0xFE	; 254
    106e:	80 83       	st	Z, r24

00001070 <.Loc.8>:
    1070:	80 81       	ld	r24, Z
    1072:	8d 7f       	andi	r24, 0xFD	; 253
    1074:	80 83       	st	Z, r24
    1076:	0b c0       	rjmp	.+22     	; 0x108e <.L1>

00001078 <.L2>:
    1078:	87 b5       	in	r24, 0x27	; 39

0000107a <.Loc.12>:
    107a:	88 23       	and	r24, r24
    107c:	89 f0       	breq	.+34     	; 0x10a0 <.L4>

0000107e <.Loc.13>:
    107e:	eb e0       	ldi	r30, 0x0B	; 11
    1080:	f1 e0       	ldi	r31, 0x01	; 1
    1082:	80 81       	ld	r24, Z
    1084:	8d 7f       	andi	r24, 0xFD	; 253
    1086:	80 83       	st	Z, r24

00001088 <.Loc.15>:
    1088:	80 81       	ld	r24, Z

0000108a <.Loc.16>:
    108a:	81 60       	ori	r24, 0x01	; 1
    108c:	80 83       	st	Z, r24

0000108e <.L1>:
    108e:	ff 91       	pop	r31
    1090:	ef 91       	pop	r30
    1092:	8f 91       	pop	r24
    1094:	8b bf       	out	0x3b, r24	; 59
    1096:	8f 91       	pop	r24
    1098:	1f 90       	pop	r1
    109a:	1f be       	out	0x3f, r1	; 63
    109c:	1f 90       	pop	r1
    109e:	18 95       	reti

000010a0 <.L4>:
    10a0:	88 b5       	in	r24, 0x28	; 40

000010a2 <.Loc.20>:
    10a2:	88 23       	and	r24, r24
    10a4:	a1 f3       	breq	.-24     	; 0x108e <.L1>

000010a6 <.Loc.21>:
    10a6:	eb e0       	ldi	r30, 0x0B	; 11
    10a8:	f1 e0       	ldi	r31, 0x01	; 1
    10aa:	80 81       	ld	r24, Z
    10ac:	8e 7f       	andi	r24, 0xFE	; 254
    10ae:	80 83       	st	Z, r24

000010b0 <.Loc.23>:
    10b0:	80 81       	ld	r24, Z

000010b2 <.Loc.24>:
    10b2:	82 60       	ori	r24, 0x02	; 2
    10b4:	80 83       	st	Z, r24

000010b6 <.Loc.25>:
    10b6:	eb cf       	rjmp	.-42     	; 0x108e <.L1>

000010b8 <__vector_21>:
    10b8:	8f 93       	push	r24
    10ba:	8f b7       	in	r24, 0x3f	; 63
    10bc:	8f 93       	push	r24
    10be:	8b b7       	in	r24, 0x3b	; 59
    10c0:	8f 93       	push	r24
    10c2:	ef 93       	push	r30
    10c4:	ff 93       	push	r31

000010c6 <.Loc.27>:
    10c6:	87 b5       	in	r24, 0x27	; 39

000010c8 <.Loc.29>:
    10c8:	8f 3f       	cpi	r24, 0xFF	; 255
    10ca:	29 f0       	breq	.+10     	; 0x10d6 <.L5>

000010cc <.Loc.30>:
    10cc:	eb e0       	ldi	r30, 0x0B	; 11
    10ce:	f1 e0       	ldi	r31, 0x01	; 1
    10d0:	80 81       	ld	r24, Z
    10d2:	8e 7f       	andi	r24, 0xFE	; 254
    10d4:	80 83       	st	Z, r24

000010d6 <.L5>:
    10d6:	ff 91       	pop	r31
    10d8:	ef 91       	pop	r30
    10da:	8f 91       	pop	r24
    10dc:	8b bf       	out	0x3b, r24	; 59
    10de:	8f 91       	pop	r24
    10e0:	8f bf       	out	0x3f, r24	; 63
    10e2:	8f 91       	pop	r24
    10e4:	18 95       	reti

000010e6 <__vector_22>:
    10e6:	8f 93       	push	r24
    10e8:	8f b7       	in	r24, 0x3f	; 63
    10ea:	8f 93       	push	r24
    10ec:	8b b7       	in	r24, 0x3b	; 59
    10ee:	8f 93       	push	r24
    10f0:	ef 93       	push	r30
    10f2:	ff 93       	push	r31

000010f4 <.Loc.34>:
    10f4:	88 b5       	in	r24, 0x28	; 40

000010f6 <.Loc.36>:
    10f6:	8f 3f       	cpi	r24, 0xFF	; 255
    10f8:	29 f0       	breq	.+10     	; 0x1104 <.L7>

000010fa <.Loc.37>:
    10fa:	eb e0       	ldi	r30, 0x0B	; 11
    10fc:	f1 e0       	ldi	r31, 0x01	; 1
    10fe:	80 81       	ld	r24, Z
    1100:	8d 7f       	andi	r24, 0xFD	; 253
    1102:	80 83       	st	Z, r24

00001104 <.L7>:
    1104:	ff 91       	pop	r31
    1106:	ef 91       	pop	r30
    1108:	8f 91       	pop	r24
    110a:	8b bf       	out	0x3b, r24	; 59
    110c:	8f 91       	pop	r24
    110e:	8f bf       	out	0x3f, r24	; 63
    1110:	8f 91       	pop	r24
    1112:	18 95       	reti

00001114 <init_MotorLinks>:
    1114:	ea e0       	ldi	r30, 0x0A	; 10
    1116:	f1 e0       	ldi	r31, 0x01	; 1
    1118:	80 81       	ld	r24, Z

0000111a <.Loc.42>:
    111a:	81 60       	ori	r24, 0x01	; 1
    111c:	80 83       	st	Z, r24

0000111e <.Loc.43>:
    111e:	80 81       	ld	r24, Z

00001120 <.Loc.44>:
    1120:	82 60       	ori	r24, 0x02	; 2
    1122:	80 83       	st	Z, r24

00001124 <.Loc.45>:
    1124:	eb e0       	ldi	r30, 0x0B	; 11
    1126:	f1 e0       	ldi	r31, 0x01	; 1
    1128:	80 81       	ld	r24, Z
    112a:	8e 7f       	andi	r24, 0xFE	; 254
    112c:	80 83       	st	Z, r24

0000112e <.Loc.47>:
    112e:	80 81       	ld	r24, Z
    1130:	8d 7f       	andi	r24, 0xFD	; 253
    1132:	80 83       	st	Z, r24

00001134 <.Loc.49>:
    1134:	14 bc       	out	0x24, r1	; 36

00001136 <.Loc.51>:
    1136:	83 e0       	ldi	r24, 0x03	; 3
    1138:	85 bd       	out	0x25, r24	; 37

0000113a <.Loc.53>:
    113a:	17 bc       	out	0x27, r1	; 39

0000113c <.Loc.55>:
    113c:	18 bc       	out	0x28, r1	; 40

0000113e <.Loc.57>:
    113e:	87 e0       	ldi	r24, 0x07	; 7
    1140:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__TEXT_REGION_LENGTH__+0x70006e>

00001144 <.Loc.59>:
    1144:	78 94       	sei

00001146 <.Loc.60>:
    1146:	08 95       	ret

00001148 <MotorLinks_set_percentage>:
    1148:	94 e6       	ldi	r25, 0x64	; 100
    114a:	98 0f       	add	r25, r24

0000114c <.Loc.64>:
    114c:	99 3c       	cpi	r25, 0xC9	; 201
    114e:	c8 f4       	brcc	.+50     	; 0x1182 <.L10>

00001150 <.Loc.65>:
    1150:	88 23       	and	r24, r24
    1152:	64 f0       	brlt	.+24     	; 0x116c <.L12>

00001154 <.Loc.67>:
    1154:	18 bc       	out	0x28, r1	; 40

00001156 <.Loc.69>:
    1156:	28 2f       	mov	r18, r24
    1158:	3f ef       	ldi	r19, 0xFF	; 255
    115a:	23 03       	mulsu	r18, r19
    115c:	c0 01       	movw	r24, r0
    115e:	11 24       	eor	r1, r1

00001160 <.Loc.71>:
    1160:	64 e6       	ldi	r22, 0x64	; 100
    1162:	70 e0       	ldi	r23, 0x00	; 0
    1164:	0e 94 ed 09 	call	0x13da	; 0x13da <__divmodhi4>

00001168 <.Loc.72>:
    1168:	67 bd       	out	0x27, r22	; 39
    116a:	08 95       	ret

0000116c <.L12>:
    116c:	17 bc       	out	0x27, r1	; 39

0000116e <.Loc.75>:
    116e:	28 2f       	mov	r18, r24
    1170:	3f ef       	ldi	r19, 0xFF	; 255
    1172:	23 03       	mulsu	r18, r19
    1174:	c0 01       	movw	r24, r0
    1176:	11 24       	eor	r1, r1

00001178 <.Loc.77>:
    1178:	6c e9       	ldi	r22, 0x9C	; 156
    117a:	7f ef       	ldi	r23, 0xFF	; 255
    117c:	0e 94 ed 09 	call	0x13da	; 0x13da <__divmodhi4>

00001180 <.Loc.78>:
    1180:	68 bd       	out	0x28, r22	; 40

00001182 <.L10>:
    1182:	08 95       	ret

00001184 <__vector_15>:
    1184:	1f 92       	push	r1
    1186:	1f b6       	in	r1, 0x3f	; 63
    1188:	1f 92       	push	r1
    118a:	11 24       	eor	r1, r1
    118c:	8f 93       	push	r24
    118e:	8b b7       	in	r24, 0x3b	; 59
    1190:	8f 93       	push	r24
    1192:	ef 93       	push	r30
    1194:	ff 93       	push	r31

00001196 <.Loc.1>:
    1196:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

0000119a <.Loc.3>:
    119a:	81 11       	cpse	r24, r1
    119c:	0d c0       	rjmp	.+26     	; 0x11b8 <.L2>

0000119e <.Loc.4>:
    119e:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

000011a2 <.Loc.5>:
    11a2:	81 11       	cpse	r24, r1
    11a4:	09 c0       	rjmp	.+18     	; 0x11b8 <.L2>

000011a6 <.Loc.6>:
    11a6:	eb e0       	ldi	r30, 0x0B	; 11
    11a8:	f1 e0       	ldi	r31, 0x01	; 1
    11aa:	80 81       	ld	r24, Z
    11ac:	8b 7f       	andi	r24, 0xFB	; 251
    11ae:	80 83       	st	Z, r24

000011b0 <.Loc.8>:
    11b0:	80 81       	ld	r24, Z
    11b2:	87 7f       	andi	r24, 0xF7	; 247
    11b4:	80 83       	st	Z, r24
    11b6:	0c c0       	rjmp	.+24     	; 0x11d0 <.L1>

000011b8 <.L2>:
    11b8:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

000011bc <.Loc.12>:
    11bc:	88 23       	and	r24, r24
    11be:	89 f0       	breq	.+34     	; 0x11e2 <.L4>

000011c0 <.Loc.13>:
    11c0:	eb e0       	ldi	r30, 0x0B	; 11
    11c2:	f1 e0       	ldi	r31, 0x01	; 1
    11c4:	80 81       	ld	r24, Z
    11c6:	87 7f       	andi	r24, 0xF7	; 247
    11c8:	80 83       	st	Z, r24

000011ca <.Loc.15>:
    11ca:	80 81       	ld	r24, Z

000011cc <.Loc.16>:
    11cc:	84 60       	ori	r24, 0x04	; 4
    11ce:	80 83       	st	Z, r24

000011d0 <.L1>:
    11d0:	ff 91       	pop	r31
    11d2:	ef 91       	pop	r30
    11d4:	8f 91       	pop	r24
    11d6:	8b bf       	out	0x3b, r24	; 59
    11d8:	8f 91       	pop	r24
    11da:	1f 90       	pop	r1
    11dc:	1f be       	out	0x3f, r1	; 63
    11de:	1f 90       	pop	r1
    11e0:	18 95       	reti

000011e2 <.L4>:
    11e2:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

000011e6 <.Loc.20>:
    11e6:	88 23       	and	r24, r24
    11e8:	99 f3       	breq	.-26     	; 0x11d0 <.L1>

000011ea <.Loc.21>:
    11ea:	eb e0       	ldi	r30, 0x0B	; 11
    11ec:	f1 e0       	ldi	r31, 0x01	; 1
    11ee:	80 81       	ld	r24, Z
    11f0:	8b 7f       	andi	r24, 0xFB	; 251
    11f2:	80 83       	st	Z, r24

000011f4 <.Loc.23>:
    11f4:	80 81       	ld	r24, Z

000011f6 <.Loc.24>:
    11f6:	88 60       	ori	r24, 0x08	; 8
    11f8:	80 83       	st	Z, r24

000011fa <.Loc.25>:
    11fa:	ea cf       	rjmp	.-44     	; 0x11d0 <.L1>

000011fc <__vector_13>:
    11fc:	8f 93       	push	r24
    11fe:	8f b7       	in	r24, 0x3f	; 63
    1200:	8f 93       	push	r24
    1202:	8b b7       	in	r24, 0x3b	; 59
    1204:	8f 93       	push	r24
    1206:	ef 93       	push	r30
    1208:	ff 93       	push	r31

0000120a <.Loc.27>:
    120a:	80 91 b3 00 	lds	r24, 0x00B3	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

0000120e <.Loc.29>:
    120e:	8f 3f       	cpi	r24, 0xFF	; 255
    1210:	29 f0       	breq	.+10     	; 0x121c <.L5>

00001212 <.Loc.30>:
    1212:	eb e0       	ldi	r30, 0x0B	; 11
    1214:	f1 e0       	ldi	r31, 0x01	; 1
    1216:	80 81       	ld	r24, Z
    1218:	8b 7f       	andi	r24, 0xFB	; 251
    121a:	80 83       	st	Z, r24

0000121c <.L5>:
    121c:	ff 91       	pop	r31
    121e:	ef 91       	pop	r30
    1220:	8f 91       	pop	r24
    1222:	8b bf       	out	0x3b, r24	; 59
    1224:	8f 91       	pop	r24
    1226:	8f bf       	out	0x3f, r24	; 63
    1228:	8f 91       	pop	r24
    122a:	18 95       	reti

0000122c <__vector_14>:
    122c:	8f 93       	push	r24
    122e:	8f b7       	in	r24, 0x3f	; 63
    1230:	8f 93       	push	r24
    1232:	8b b7       	in	r24, 0x3b	; 59
    1234:	8f 93       	push	r24
    1236:	ef 93       	push	r30
    1238:	ff 93       	push	r31

0000123a <.Loc.34>:
    123a:	80 91 b4 00 	lds	r24, 0x00B4	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

0000123e <.Loc.36>:
    123e:	8f 3f       	cpi	r24, 0xFF	; 255
    1240:	29 f0       	breq	.+10     	; 0x124c <.L7>

00001242 <.Loc.37>:
    1242:	eb e0       	ldi	r30, 0x0B	; 11
    1244:	f1 e0       	ldi	r31, 0x01	; 1
    1246:	80 81       	ld	r24, Z
    1248:	87 7f       	andi	r24, 0xF7	; 247
    124a:	80 83       	st	Z, r24

0000124c <.L7>:
    124c:	ff 91       	pop	r31
    124e:	ef 91       	pop	r30
    1250:	8f 91       	pop	r24
    1252:	8b bf       	out	0x3b, r24	; 59
    1254:	8f 91       	pop	r24
    1256:	8f bf       	out	0x3f, r24	; 63
    1258:	8f 91       	pop	r24
    125a:	18 95       	reti

0000125c <init_MotorRechts>:
    125c:	ea e0       	ldi	r30, 0x0A	; 10
    125e:	f1 e0       	ldi	r31, 0x01	; 1
    1260:	80 81       	ld	r24, Z

00001262 <.Loc.42>:
    1262:	84 60       	ori	r24, 0x04	; 4
    1264:	80 83       	st	Z, r24

00001266 <.Loc.43>:
    1266:	80 81       	ld	r24, Z

00001268 <.Loc.44>:
    1268:	88 60       	ori	r24, 0x08	; 8
    126a:	80 83       	st	Z, r24

0000126c <.Loc.45>:
    126c:	eb e0       	ldi	r30, 0x0B	; 11
    126e:	f1 e0       	ldi	r31, 0x01	; 1
    1270:	80 81       	ld	r24, Z
    1272:	8b 7f       	andi	r24, 0xFB	; 251
    1274:	80 83       	st	Z, r24

00001276 <.Loc.47>:
    1276:	80 81       	ld	r24, Z
    1278:	87 7f       	andi	r24, 0xF7	; 247
    127a:	80 83       	st	Z, r24

0000127c <.Loc.49>:
    127c:	10 92 b0 00 	sts	0x00B0, r1	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>

00001280 <.Loc.51>:
    1280:	83 e0       	ldi	r24, 0x03	; 3
    1282:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7000b1>

00001286 <.Loc.53>:
    1286:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

0000128a <.Loc.55>:
    128a:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

0000128e <.Loc.57>:
    128e:	87 e0       	ldi	r24, 0x07	; 7
    1290:	80 93 70 00 	sts	0x0070, r24	; 0x800070 <__TEXT_REGION_LENGTH__+0x700070>

00001294 <.Loc.59>:
    1294:	78 94       	sei

00001296 <.Loc.60>:
    1296:	08 95       	ret

00001298 <MotorRechts_set_percentage>:
    1298:	94 e6       	ldi	r25, 0x64	; 100
    129a:	98 0f       	add	r25, r24

0000129c <.Loc.64>:
    129c:	99 3c       	cpi	r25, 0xC9	; 201
    129e:	e8 f4       	brcc	.+58     	; 0x12da <.L10>

000012a0 <.Loc.65>:
    12a0:	88 23       	and	r24, r24
    12a2:	74 f0       	brlt	.+28     	; 0x12c0 <.L12>

000012a4 <.Loc.67>:
    12a4:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

000012a8 <.Loc.69>:
    12a8:	28 2f       	mov	r18, r24
    12aa:	3f ef       	ldi	r19, 0xFF	; 255
    12ac:	23 03       	mulsu	r18, r19
    12ae:	c0 01       	movw	r24, r0
    12b0:	11 24       	eor	r1, r1

000012b2 <.Loc.71>:
    12b2:	64 e6       	ldi	r22, 0x64	; 100
    12b4:	70 e0       	ldi	r23, 0x00	; 0
    12b6:	0e 94 ed 09 	call	0x13da	; 0x13da <__divmodhi4>

000012ba <.Loc.72>:
    12ba:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>
    12be:	08 95       	ret

000012c0 <.L12>:
    12c0:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7000b3>

000012c4 <.Loc.75>:
    12c4:	28 2f       	mov	r18, r24
    12c6:	3f ef       	ldi	r19, 0xFF	; 255
    12c8:	23 03       	mulsu	r18, r19
    12ca:	c0 01       	movw	r24, r0
    12cc:	11 24       	eor	r1, r1

000012ce <.Loc.77>:
    12ce:	6c e9       	ldi	r22, 0x9C	; 156
    12d0:	7f ef       	ldi	r23, 0xFF	; 255
    12d2:	0e 94 ed 09 	call	0x13da	; 0x13da <__divmodhi4>

000012d6 <.Loc.78>:
    12d6:	60 93 b4 00 	sts	0x00B4, r22	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7000b4>

000012da <.L10>:
    12da:	08 95       	ret

000012dc <RotaryInit>:
    12dc:	81 b1       	in	r24, 0x01	; 1
    12de:	8a 7f       	andi	r24, 0xFA	; 250
    12e0:	81 b9       	out	0x01, r24	; 1

000012e2 <.Loc.3>:
    12e2:	82 b1       	in	r24, 0x02	; 2

000012e4 <.Loc.4>:
    12e4:	85 60       	ori	r24, 0x05	; 5
    12e6:	82 b9       	out	0x02, r24	; 2

000012e8 <.Loc.5>:
    12e8:	08 95       	ret

000012ea <RotaryCheckStatus>:
    12ea:	80 b1       	in	r24, 0x00	; 0

000012ec <.Loc.9>:
    12ec:	90 b1       	in	r25, 0x00	; 0

000012ee <.Loc.10>:
    12ee:	80 fd       	sbrc	r24, 0
    12f0:	0d c0       	rjmp	.+26     	; 0x130c <.L3>
    12f2:	92 ff       	sbrs	r25, 2
    12f4:	0b c0       	rjmp	.+22     	; 0x130c <.L3>

000012f6 <.L4>:
    12f6:	00 9b       	sbis	0x00, 0	; 0
    12f8:	fe cf       	rjmp	.-4      	; 0x12f6 <.L4>

000012fa <.Loc.14>:
    12fa:	02 99       	sbic	0x00, 2	; 0
    12fc:	30 c0       	rjmp	.+96     	; 0x135e <.L2>

000012fe <.Loc.16>:
    12fe:	81 e0       	ldi	r24, 0x01	; 1
    1300:	90 e0       	ldi	r25, 0x00	; 0
    1302:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <rotarystatus+0x1>
    1306:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <rotarystatus>
    130a:	08 95       	ret

0000130c <.L3>:
    130c:	80 b1       	in	r24, 0x00	; 0

0000130e <.Loc.20>:
    130e:	90 b1       	in	r25, 0x00	; 0

00001310 <.Loc.21>:
    1310:	82 fd       	sbrc	r24, 2
    1312:	0d c0       	rjmp	.+26     	; 0x132e <.L6>
    1314:	90 ff       	sbrs	r25, 0
    1316:	0b c0       	rjmp	.+22     	; 0x132e <.L6>

00001318 <.L7>:
    1318:	02 9b       	sbis	0x00, 2	; 0
    131a:	fe cf       	rjmp	.-4      	; 0x1318 <.L7>

0000131c <.Loc.25>:
    131c:	00 99       	sbic	0x00, 0	; 0
    131e:	1f c0       	rjmp	.+62     	; 0x135e <.L2>

00001320 <.Loc.27>:
    1320:	82 e0       	ldi	r24, 0x02	; 2
    1322:	90 e0       	ldi	r25, 0x00	; 0
    1324:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <rotarystatus+0x1>
    1328:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <rotarystatus>
    132c:	08 95       	ret

0000132e <.L6>:
    132e:	80 b1       	in	r24, 0x00	; 0

00001330 <.Loc.31>:
    1330:	90 b1       	in	r25, 0x00	; 0

00001332 <.Loc.32>:
    1332:	81 70       	andi	r24, 0x01	; 1
    1334:	94 70       	andi	r25, 0x04	; 4

00001336 <.Loc.33>:
    1336:	89 2b       	or	r24, r25
    1338:	81 11       	cpse	r24, r1
    133a:	11 c0       	rjmp	.+34     	; 0x135e <.L2>

0000133c <.L8>:
    133c:	00 9b       	sbis	0x00, 0	; 0
    133e:	fe cf       	rjmp	.-4      	; 0x133c <.L8>

00001340 <.Loc.37>:
    1340:	02 99       	sbic	0x00, 2	; 0
    1342:	07 c0       	rjmp	.+14     	; 0x1352 <.L9>

00001344 <.Loc.39>:
    1344:	81 e0       	ldi	r24, 0x01	; 1
    1346:	90 e0       	ldi	r25, 0x00	; 0
    1348:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <rotarystatus+0x1>
    134c:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <rotarystatus>
    1350:	08 95       	ret

00001352 <.L9>:
    1352:	82 e0       	ldi	r24, 0x02	; 2
    1354:	90 e0       	ldi	r25, 0x00	; 0
    1356:	90 93 09 02 	sts	0x0209, r25	; 0x800209 <rotarystatus+0x1>
    135a:	80 93 08 02 	sts	0x0208, r24	; 0x800208 <rotarystatus>

0000135e <.L2>:
    135e:	08 95       	ret

00001360 <RotaryGetStatus>:
    1360:	80 91 08 02 	lds	r24, 0x0208	; 0x800208 <rotarystatus>
    1364:	90 91 09 02 	lds	r25, 0x0209	; 0x800209 <rotarystatus+0x1>

00001368 <.Loc.47>:
    1368:	08 95       	ret

0000136a <RotaryResetStatus>:
    136a:	10 92 09 02 	sts	0x0209, r1	; 0x800209 <rotarystatus+0x1>
    136e:	10 92 08 02 	sts	0x0208, r1	; 0x800208 <rotarystatus>

00001372 <.Loc.51>:
    1372:	08 95       	ret

00001374 <Timer1_Start>:
    1374:	e1 e8       	ldi	r30, 0x81	; 129
    1376:	f0 e0       	ldi	r31, 0x00	; 0
    1378:	80 81       	ld	r24, Z

0000137a <.Loc.54>:
    137a:	81 60       	ori	r24, 0x01	; 1
    137c:	80 83       	st	Z, r24

0000137e <.Loc.55>:
    137e:	ef e6       	ldi	r30, 0x6F	; 111
    1380:	f0 e0       	ldi	r31, 0x00	; 0
    1382:	80 81       	ld	r24, Z

00001384 <.Loc.56>:
    1384:	81 60       	ori	r24, 0x01	; 1
    1386:	80 83       	st	Z, r24

00001388 <.Loc.57>:
    1388:	08 95       	ret

0000138a <__vector_20>:
    138a:	1f 92       	push	r1
    138c:	0f 92       	push	r0
    138e:	0f b6       	in	r0, 0x3f	; 63
    1390:	0f 92       	push	r0
    1392:	11 24       	eor	r1, r1
    1394:	0b b6       	in	r0, 0x3b	; 59
    1396:	0f 92       	push	r0
    1398:	2f 93       	push	r18
    139a:	3f 93       	push	r19
    139c:	4f 93       	push	r20
    139e:	5f 93       	push	r21
    13a0:	6f 93       	push	r22
    13a2:	7f 93       	push	r23
    13a4:	8f 93       	push	r24
    13a6:	9f 93       	push	r25
    13a8:	af 93       	push	r26
    13aa:	bf 93       	push	r27
    13ac:	ef 93       	push	r30
    13ae:	ff 93       	push	r31

000013b0 <.Loc.59>:
    13b0:	0e 94 75 09 	call	0x12ea	; 0x12ea <RotaryCheckStatus>

000013b4 <.LVL0>:
    13b4:	ff 91       	pop	r31
    13b6:	ef 91       	pop	r30
    13b8:	bf 91       	pop	r27
    13ba:	af 91       	pop	r26
    13bc:	9f 91       	pop	r25
    13be:	8f 91       	pop	r24
    13c0:	7f 91       	pop	r23
    13c2:	6f 91       	pop	r22
    13c4:	5f 91       	pop	r21
    13c6:	4f 91       	pop	r20
    13c8:	3f 91       	pop	r19
    13ca:	2f 91       	pop	r18
    13cc:	0f 90       	pop	r0
    13ce:	0b be       	out	0x3b, r0	; 59
    13d0:	0f 90       	pop	r0
    13d2:	0f be       	out	0x3f, r0	; 63
    13d4:	0f 90       	pop	r0
    13d6:	1f 90       	pop	r1
    13d8:	18 95       	reti

000013da <__divmodhi4>:
    13da:	97 fb       	bst	r25, 7

000013dc <.Loc.1>:
    13dc:	07 2e       	mov	r0, r23

000013de <.Loc.2>:
    13de:	16 f4       	brtc	.+4      	; 0x13e4 <.L^B1>

000013e0 <.Loc.3>:
    13e0:	00 94       	com	r0

000013e2 <.Loc.4>:
    13e2:	07 d0       	rcall	.+14     	; 0x13f2 <__divmodhi4_neg1>

000013e4 <.L^B1>:
    13e4:	77 fd       	sbrc	r23, 7

000013e6 <.Loc.6>:
    13e6:	09 d0       	rcall	.+18     	; 0x13fa <__divmodhi4_neg2>

000013e8 <.Loc.7>:
    13e8:	0e 94 01 0a 	call	0x1402	; 0x1402 <__udivmodhi4>

000013ec <.Loc.8>:
    13ec:	07 fc       	sbrc	r0, 7

000013ee <.Loc.9>:
    13ee:	05 d0       	rcall	.+10     	; 0x13fa <__divmodhi4_neg2>

000013f0 <.Loc.10>:
    13f0:	3e f4       	brtc	.+14     	; 0x1400 <__divmodhi4_exit>

000013f2 <__divmodhi4_neg1>:
    13f2:	90 95       	com	r25

000013f4 <.Loc.12>:
    13f4:	81 95       	neg	r24

000013f6 <.Loc.13>:
    13f6:	9f 4f       	sbci	r25, 0xFF	; 255

000013f8 <.Loc.14>:
    13f8:	08 95       	ret

000013fa <__divmodhi4_neg2>:
    13fa:	70 95       	com	r23

000013fc <.Loc.16>:
    13fc:	61 95       	neg	r22

000013fe <.Loc.17>:
    13fe:	7f 4f       	sbci	r23, 0xFF	; 255

00001400 <__divmodhi4_exit>:
    1400:	08 95       	ret

00001402 <__udivmodhi4>:
    1402:	aa 1b       	sub	r26, r26

00001404 <.Loc.1>:
    1404:	bb 1b       	sub	r27, r27

00001406 <.Loc.2>:
    1406:	51 e1       	ldi	r21, 0x11	; 17

00001408 <.Loc.3>:
    1408:	07 c0       	rjmp	.+14     	; 0x1418 <__udivmodhi4_ep>

0000140a <__udivmodhi4_loop>:
    140a:	aa 1f       	adc	r26, r26

0000140c <.Loc.5>:
    140c:	bb 1f       	adc	r27, r27

0000140e <.Loc.6>:
    140e:	a6 17       	cp	r26, r22

00001410 <.Loc.7>:
    1410:	b7 07       	cpc	r27, r23

00001412 <.Loc.8>:
    1412:	10 f0       	brcs	.+4      	; 0x1418 <__udivmodhi4_ep>

00001414 <.Loc.9>:
    1414:	a6 1b       	sub	r26, r22

00001416 <.Loc.10>:
    1416:	b7 0b       	sbc	r27, r23

00001418 <__udivmodhi4_ep>:
    1418:	88 1f       	adc	r24, r24

0000141a <.Loc.12>:
    141a:	99 1f       	adc	r25, r25

0000141c <.Loc.13>:
    141c:	5a 95       	dec	r21

0000141e <.Loc.14>:
    141e:	a9 f7       	brne	.-22     	; 0x140a <__udivmodhi4_loop>

00001420 <.Loc.15>:
    1420:	80 95       	com	r24

00001422 <.Loc.16>:
    1422:	90 95       	com	r25

00001424 <.Loc.17>:
    1424:	bc 01       	movw	r22, r24

00001426 <.Loc.18>:
    1426:	cd 01       	movw	r24, r26

00001428 <.Loc.19>:
    1428:	08 95       	ret

0000142a <__cmpsf2>:
    142a:	0e 94 49 0a 	call	0x1492	; 0x1492 <__fp_cmp>
    142e:	08 f4       	brcc	.+2      	; 0x1432 <.L1^B1>
    1430:	81 e0       	ldi	r24, 0x01	; 1

00001432 <.L1^B1>:
    1432:	08 95       	ret

00001434 <__fixunssfsi>:
    1434:	0e 94 75 0a 	call	0x14ea	; 0x14ea <__fp_splitA>
    1438:	88 f0       	brcs	.+34     	; 0x145c <.L_err>
    143a:	9f 57       	subi	r25, 0x7F	; 127
    143c:	98 f0       	brcs	.+38     	; 0x1464 <.L_zr>
    143e:	b9 2f       	mov	r27, r25
    1440:	99 27       	eor	r25, r25
    1442:	b7 51       	subi	r27, 0x17	; 23
    1444:	b0 f0       	brcs	.+44     	; 0x1472 <.L4^B1>
    1446:	e1 f0       	breq	.+56     	; 0x1480 <.L_sign>

00001448 <.L1^B1>:
    1448:	66 0f       	add	r22, r22
    144a:	77 1f       	adc	r23, r23
    144c:	88 1f       	adc	r24, r24
    144e:	99 1f       	adc	r25, r25
    1450:	1a f0       	brmi	.+6      	; 0x1458 <.L2^B1>
    1452:	ba 95       	dec	r27
    1454:	c9 f7       	brne	.-14     	; 0x1448 <.L1^B1>
    1456:	14 c0       	rjmp	.+40     	; 0x1480 <.L_sign>

00001458 <.L2^B1>:
    1458:	b1 30       	cpi	r27, 0x01	; 1
    145a:	91 f0       	breq	.+36     	; 0x1480 <.L_sign>

0000145c <.L_err>:
    145c:	0e 94 8f 0a 	call	0x151e	; 0x151e <__fp_zero>
    1460:	b1 e0       	ldi	r27, 0x01	; 1
    1462:	08 95       	ret

00001464 <.L_zr>:
    1464:	0c 94 8f 0a 	jmp	0x151e	; 0x151e <__fp_zero>

00001468 <.L3^B1>:
    1468:	67 2f       	mov	r22, r23
    146a:	78 2f       	mov	r23, r24
    146c:	88 27       	eor	r24, r24
    146e:	b8 5f       	subi	r27, 0xF8	; 248
    1470:	39 f0       	breq	.+14     	; 0x1480 <.L_sign>

00001472 <.L4^B1>:
    1472:	b9 3f       	cpi	r27, 0xF9	; 249
    1474:	cc f3       	brlt	.-14     	; 0x1468 <.L3^B1>

00001476 <.L5^B1>:
    1476:	86 95       	lsr	r24
    1478:	77 95       	ror	r23
    147a:	67 95       	ror	r22
    147c:	b3 95       	inc	r27
    147e:	d9 f7       	brne	.-10     	; 0x1476 <.L5^B1>

00001480 <.L_sign>:
    1480:	3e f4       	brtc	.+14     	; 0x1490 <.L6^B1>
    1482:	90 95       	com	r25
    1484:	80 95       	com	r24
    1486:	70 95       	com	r23
    1488:	61 95       	neg	r22
    148a:	7f 4f       	sbci	r23, 0xFF	; 255
    148c:	8f 4f       	sbci	r24, 0xFF	; 255
    148e:	9f 4f       	sbci	r25, 0xFF	; 255

00001490 <.L6^B1>:
    1490:	08 95       	ret

00001492 <__fp_cmp>:
    1492:	99 0f       	add	r25, r25
    1494:	00 08       	sbc	r0, r0
    1496:	55 0f       	add	r21, r21
    1498:	aa 0b       	sbc	r26, r26
    149a:	e0 e8       	ldi	r30, 0x80	; 128
    149c:	fe ef       	ldi	r31, 0xFE	; 254
    149e:	16 16       	cp	r1, r22
    14a0:	17 06       	cpc	r1, r23
    14a2:	e8 07       	cpc	r30, r24
    14a4:	f9 07       	cpc	r31, r25
    14a6:	c0 f0       	brcs	.+48     	; 0x14d8 <.L9^B1>
    14a8:	12 16       	cp	r1, r18
    14aa:	13 06       	cpc	r1, r19
    14ac:	e4 07       	cpc	r30, r20
    14ae:	f5 07       	cpc	r31, r21
    14b0:	98 f0       	brcs	.+38     	; 0x14d8 <.L9^B1>
    14b2:	62 1b       	sub	r22, r18
    14b4:	73 0b       	sbc	r23, r19
    14b6:	84 0b       	sbc	r24, r20
    14b8:	95 0b       	sbc	r25, r21
    14ba:	39 f4       	brne	.+14     	; 0x14ca <.L1^B1>
    14bc:	0a 26       	eor	r0, r26
    14be:	61 f0       	breq	.+24     	; 0x14d8 <.L9^B1>
    14c0:	23 2b       	or	r18, r19
    14c2:	24 2b       	or	r18, r20
    14c4:	25 2b       	or	r18, r21
    14c6:	21 f4       	brne	.+8      	; 0x14d0 <.L2^B1>
    14c8:	08 95       	ret

000014ca <.L1^B1>:
    14ca:	0a 26       	eor	r0, r26
    14cc:	09 f4       	brne	.+2      	; 0x14d0 <.L2^B1>
    14ce:	a1 40       	sbci	r26, 0x01	; 1

000014d0 <.L2^B1>:
    14d0:	a6 95       	lsr	r26
    14d2:	8f ef       	ldi	r24, 0xFF	; 255
    14d4:	81 1d       	adc	r24, r1
    14d6:	81 1d       	adc	r24, r1

000014d8 <.L9^B1>:
    14d8:	08 95       	ret

000014da <__fp_split3>:
    14da:	57 fd       	sbrc	r21, 7
    14dc:	90 58       	subi	r25, 0x80	; 128
    14de:	44 0f       	add	r20, r20
    14e0:	55 1f       	adc	r21, r21
    14e2:	59 f0       	breq	.+22     	; 0x14fa <.L4^B1>
    14e4:	5f 3f       	cpi	r21, 0xFF	; 255
    14e6:	71 f0       	breq	.+28     	; 0x1504 <.L5^B1>

000014e8 <.L1^B1>:
    14e8:	47 95       	ror	r20

000014ea <__fp_splitA>:
    14ea:	88 0f       	add	r24, r24
    14ec:	97 fb       	bst	r25, 7
    14ee:	99 1f       	adc	r25, r25
    14f0:	61 f0       	breq	.+24     	; 0x150a <.L6^B1>
    14f2:	9f 3f       	cpi	r25, 0xFF	; 255
    14f4:	79 f0       	breq	.+30     	; 0x1514 <.L7^B1>

000014f6 <.L3^B1>:
    14f6:	87 95       	ror	r24
    14f8:	08 95       	ret

000014fa <.L4^B1>:
    14fa:	12 16       	cp	r1, r18
    14fc:	13 06       	cpc	r1, r19
    14fe:	14 06       	cpc	r1, r20
    1500:	55 1f       	adc	r21, r21
    1502:	f2 cf       	rjmp	.-28     	; 0x14e8 <.L1^B1>

00001504 <.L5^B1>:
    1504:	46 95       	lsr	r20
    1506:	f1 df       	rcall	.-30     	; 0x14ea <__fp_splitA>
    1508:	08 c0       	rjmp	.+16     	; 0x151a <.L8^B1>

0000150a <.L6^B1>:
    150a:	16 16       	cp	r1, r22
    150c:	17 06       	cpc	r1, r23
    150e:	18 06       	cpc	r1, r24
    1510:	99 1f       	adc	r25, r25
    1512:	f1 cf       	rjmp	.-30     	; 0x14f6 <.L3^B1>

00001514 <.L7^B1>:
    1514:	86 95       	lsr	r24
    1516:	71 05       	cpc	r23, r1
    1518:	61 05       	cpc	r22, r1

0000151a <.L8^B1>:
    151a:	08 94       	sec
    151c:	08 95       	ret

0000151e <__fp_zero>:
    151e:	e8 94       	clt

00001520 <__fp_szero>:
    1520:	bb 27       	eor	r27, r27
    1522:	66 27       	eor	r22, r22
    1524:	77 27       	eor	r23, r23
    1526:	cb 01       	movw	r24, r22
    1528:	97 f9       	bld	r25, 7
    152a:	08 95       	ret

0000152c <__gesf2>:
    152c:	0e 94 49 0a 	call	0x1492	; 0x1492 <__fp_cmp>
    1530:	08 f4       	brcc	.+2      	; 0x1534 <.L1^B1>
    1532:	8f ef       	ldi	r24, 0xFF	; 255

00001534 <.L1^B1>:
    1534:	08 95       	ret

00001536 <__mulsf3>:
    1536:	0e 94 ae 0a 	call	0x155c	; 0x155c <__mulsf3x>
    153a:	0c 94 1f 0b 	jmp	0x163e	; 0x163e <__fp_round>

0000153e <.L^B1>:
    153e:	0e 94 11 0b 	call	0x1622	; 0x1622 <__fp_pscA>
    1542:	38 f0       	brcs	.+14     	; 0x1552 <.L1^B1>
    1544:	0e 94 18 0b 	call	0x1630	; 0x1630 <__fp_pscB>
    1548:	20 f0       	brcs	.+8      	; 0x1552 <.L1^B1>
    154a:	95 23       	and	r25, r21
    154c:	11 f0       	breq	.+4      	; 0x1552 <.L1^B1>
    154e:	0c 94 08 0b 	jmp	0x1610	; 0x1610 <__fp_inf>

00001552 <.L1^B1>:
    1552:	0c 94 0e 0b 	jmp	0x161c	; 0x161c <__fp_nan>

00001556 <.L2^B1>:
    1556:	11 24       	eor	r1, r1
    1558:	0c 94 90 0a 	jmp	0x1520	; 0x1520 <__fp_szero>

0000155c <__mulsf3x>:
    155c:	0e 94 6d 0a 	call	0x14da	; 0x14da <__fp_split3>
    1560:	70 f3       	brcs	.-36     	; 0x153e <.L^B1>

00001562 <__mulsf3_pse>:
    1562:	95 9f       	mul	r25, r21
    1564:	c1 f3       	breq	.-16     	; 0x1556 <.L2^B1>
    1566:	95 0f       	add	r25, r21
    1568:	50 e0       	ldi	r21, 0x00	; 0
    156a:	55 1f       	adc	r21, r21
    156c:	62 9f       	mul	r22, r18
    156e:	f0 01       	movw	r30, r0
    1570:	72 9f       	mul	r23, r18
    1572:	bb 27       	eor	r27, r27
    1574:	f0 0d       	add	r31, r0
    1576:	b1 1d       	adc	r27, r1
    1578:	63 9f       	mul	r22, r19
    157a:	aa 27       	eor	r26, r26
    157c:	f0 0d       	add	r31, r0
    157e:	b1 1d       	adc	r27, r1
    1580:	aa 1f       	adc	r26, r26
    1582:	64 9f       	mul	r22, r20
    1584:	66 27       	eor	r22, r22
    1586:	b0 0d       	add	r27, r0
    1588:	a1 1d       	adc	r26, r1
    158a:	66 1f       	adc	r22, r22
    158c:	82 9f       	mul	r24, r18
    158e:	22 27       	eor	r18, r18
    1590:	b0 0d       	add	r27, r0
    1592:	a1 1d       	adc	r26, r1
    1594:	62 1f       	adc	r22, r18
    1596:	73 9f       	mul	r23, r19
    1598:	b0 0d       	add	r27, r0
    159a:	a1 1d       	adc	r26, r1
    159c:	62 1f       	adc	r22, r18
    159e:	83 9f       	mul	r24, r19
    15a0:	a0 0d       	add	r26, r0
    15a2:	61 1d       	adc	r22, r1
    15a4:	22 1f       	adc	r18, r18
    15a6:	74 9f       	mul	r23, r20
    15a8:	33 27       	eor	r19, r19
    15aa:	a0 0d       	add	r26, r0
    15ac:	61 1d       	adc	r22, r1
    15ae:	23 1f       	adc	r18, r19
    15b0:	84 9f       	mul	r24, r20
    15b2:	60 0d       	add	r22, r0
    15b4:	21 1d       	adc	r18, r1
    15b6:	82 2f       	mov	r24, r18
    15b8:	76 2f       	mov	r23, r22
    15ba:	6a 2f       	mov	r22, r26
    15bc:	11 24       	eor	r1, r1
    15be:	9f 57       	subi	r25, 0x7F	; 127
    15c0:	50 40       	sbci	r21, 0x00	; 0
    15c2:	9a f0       	brmi	.+38     	; 0x15ea <.L13^B1>
    15c4:	f1 f0       	breq	.+60     	; 0x1602 <.L15^B1>

000015c6 <.L10^B1>:
    15c6:	88 23       	and	r24, r24
    15c8:	4a f0       	brmi	.+18     	; 0x15dc <.L11^B1>
    15ca:	ee 0f       	add	r30, r30
    15cc:	ff 1f       	adc	r31, r31
    15ce:	bb 1f       	adc	r27, r27
    15d0:	66 1f       	adc	r22, r22
    15d2:	77 1f       	adc	r23, r23
    15d4:	88 1f       	adc	r24, r24
    15d6:	91 50       	subi	r25, 0x01	; 1
    15d8:	50 40       	sbci	r21, 0x00	; 0
    15da:	a9 f7       	brne	.-22     	; 0x15c6 <.L10^B1>

000015dc <.L11^B1>:
    15dc:	9e 3f       	cpi	r25, 0xFE	; 254
    15de:	51 05       	cpc	r21, r1
    15e0:	80 f0       	brcs	.+32     	; 0x1602 <.L15^B1>
    15e2:	0c 94 08 0b 	jmp	0x1610	; 0x1610 <__fp_inf>

000015e6 <.L12^B1>:
    15e6:	0c 94 90 0a 	jmp	0x1520	; 0x1520 <__fp_szero>

000015ea <.L13^B1>:
    15ea:	5f 3f       	cpi	r21, 0xFF	; 255
    15ec:	e4 f3       	brlt	.-8      	; 0x15e6 <.L12^B1>
    15ee:	98 3e       	cpi	r25, 0xE8	; 232
    15f0:	d4 f3       	brlt	.-12     	; 0x15e6 <.L12^B1>

000015f2 <.L14^B1>:
    15f2:	86 95       	lsr	r24
    15f4:	77 95       	ror	r23
    15f6:	67 95       	ror	r22
    15f8:	b7 95       	ror	r27
    15fa:	f7 95       	ror	r31
    15fc:	e7 95       	ror	r30
    15fe:	9f 5f       	subi	r25, 0xFF	; 255
    1600:	c1 f7       	brne	.-16     	; 0x15f2 <.L14^B1>

00001602 <.L15^B1>:
    1602:	fe 2b       	or	r31, r30
    1604:	88 0f       	add	r24, r24
    1606:	91 1d       	adc	r25, r1
    1608:	96 95       	lsr	r25
    160a:	87 95       	ror	r24
    160c:	97 f9       	bld	r25, 7
    160e:	08 95       	ret

00001610 <__fp_inf>:
    1610:	97 f9       	bld	r25, 7
    1612:	9f 67       	ori	r25, 0x7F	; 127
    1614:	80 e8       	ldi	r24, 0x80	; 128
    1616:	70 e0       	ldi	r23, 0x00	; 0
    1618:	60 e0       	ldi	r22, 0x00	; 0
    161a:	08 95       	ret

0000161c <__fp_nan>:
    161c:	9f ef       	ldi	r25, 0xFF	; 255
    161e:	80 ec       	ldi	r24, 0xC0	; 192
    1620:	08 95       	ret

00001622 <__fp_pscA>:
    1622:	00 24       	eor	r0, r0
    1624:	0a 94       	dec	r0
    1626:	16 16       	cp	r1, r22
    1628:	17 06       	cpc	r1, r23
    162a:	18 06       	cpc	r1, r24
    162c:	09 06       	cpc	r0, r25
    162e:	08 95       	ret

00001630 <__fp_pscB>:
    1630:	00 24       	eor	r0, r0
    1632:	0a 94       	dec	r0
    1634:	12 16       	cp	r1, r18
    1636:	13 06       	cpc	r1, r19
    1638:	14 06       	cpc	r1, r20
    163a:	05 06       	cpc	r0, r21
    163c:	08 95       	ret

0000163e <__fp_round>:
    163e:	09 2e       	mov	r0, r25
    1640:	03 94       	inc	r0
    1642:	00 0c       	add	r0, r0
    1644:	11 f4       	brne	.+4      	; 0x164a <.L1^B1>
    1646:	88 23       	and	r24, r24
    1648:	52 f0       	brmi	.+20     	; 0x165e <.L3^B1>

0000164a <.L1^B1>:
    164a:	bb 0f       	add	r27, r27
    164c:	40 f4       	brcc	.+16     	; 0x165e <.L3^B1>
    164e:	bf 2b       	or	r27, r31
    1650:	11 f4       	brne	.+4      	; 0x1656 <.L2^B1>
    1652:	60 ff       	sbrs	r22, 0
    1654:	04 c0       	rjmp	.+8      	; 0x165e <.L3^B1>

00001656 <.L2^B1>:
    1656:	6f 5f       	subi	r22, 0xFF	; 255
    1658:	7f 4f       	sbci	r23, 0xFF	; 255
    165a:	8f 4f       	sbci	r24, 0xFF	; 255
    165c:	9f 4f       	sbci	r25, 0xFF	; 255

0000165e <.L3^B1>:
    165e:	08 95       	ret

00001660 <_exit>:
    1660:	f8 94       	cli

00001662 <__stop_program>:
    1662:	ff cf       	rjmp	.-2      	; 0x1662 <__stop_program>
